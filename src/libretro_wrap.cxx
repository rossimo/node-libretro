/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.1.0
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#ifdef __cplusplus
#include <utility>
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigSmartPointer {
    T *ptr;
    SwigSmartPointer(T *p) : ptr(p) { }
    ~SwigSmartPointer() { delete ptr; }
    SwigSmartPointer& operator=(SwigSmartPointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigSmartPointer tmp(new T(t)); pointer = tmp; return *this; }
#if __cplusplus >=201103L
  SwigValueWrapper& operator=(T&& t) { SwigSmartPointer tmp(new T(std::move(t))); pointer = tmp; return *this; }
  operator T&&() const { return std::move(*pointer.ptr); }
#else
  operator T&() const { return *pointer.ptr; }
#endif
  T *operator&() const { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}


#if __cplusplus >=201103L
# define SWIG_STD_MOVE(OBJ) std::move(OBJ)
#else
# define SWIG_STD_MOVE(OBJ) OBJ
#endif

#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) do { if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } } while (0) 



#include <node.h>
//Older version of node.h does not include this
#include <node_version.h>


#include <v8.h>

#undef SWIG_V8_VERSION
#define SWIG_V8_VERSION ((V8_MAJOR_VERSION / 10) * 4096 + \
                         (V8_MAJOR_VERSION % 10) * 256 + \
                         (V8_MINOR_VERSION / 10) * 16 + \
                         (V8_MINOR_VERSION % 10))

#include <errno.h>
#include <limits.h>
#include <stdlib.h>
#include <assert.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4
#define SWIG_POINTER_CLEAR         0x8
#define SWIG_POINTER_RELEASE       (SWIG_POINTER_CLEAR | SWIG_POINTER_DISOWN)

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows returning the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
/* Runtime errors are < 0 */
#define SWIG_ERROR                 (-1)
/* Errors in range -1 to -99 are in swigerrors.swg (errors for all languages including those not using the runtime) */
/* Errors in range -100 to -199 are language specific errors defined in *errors.swg */
/* Errors < -200 are generic runtime specific errors */
#define SWIG_ERROR_RELEASE_NOT_OWNED (-200)

#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del object mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(const swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* SWIG Errors applicable to all language modules, values are reserved from -1 to -99 */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13


/* ---------------------------------------------------------------------------
 * These typedefs and defines are used to deal with v8 API changes
 *
 * Useful table of versions: https://nodejs.org/en/download/releases/
 * ---------------------------------------------------------------------------*/

#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_STRING_NEW2(cstr, len) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), cstr, v8::String::kNormalString, len)
#else
#define SWIGV8_STRING_NEW2(cstr, len) (v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), cstr, v8::NewStringType::kNormal, len)).ToLocalChecked()
#endif

typedef void SwigV8ReturnValue;
typedef v8::FunctionCallbackInfo<v8::Value> SwigV8Arguments;
typedef v8::PropertyCallbackInfo<v8::Value> SwigV8PropertyCallbackInfo;
#define SWIGV8_RETURN(val) args.GetReturnValue().Set(val); return
#define SWIGV8_RETURN_INFO(val, info) info.GetReturnValue().Set(val); return

#define SWIGV8_HANDLESCOPE() v8::HandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_HANDLESCOPE_ESC() v8::EscapableHandleScope scope(v8::Isolate::GetCurrent());
#define SWIGV8_ESCAPE(val) return scope.Escape(val)

#define SWIGV8_ADJUST_MEMORY(size) v8::Isolate::GetCurrent()->AdjustAmountOfExternalAllocatedMemory(size)
#define SWIGV8_CURRENT_CONTEXT() v8::Isolate::GetCurrent()->GetCurrentContext()
#define SWIGV8_THROW_EXCEPTION(err) v8::Isolate::GetCurrent()->ThrowException(err)

#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_STRING_NEW(str) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), str, v8::String::kNormalString)
#define SWIGV8_SYMBOL_NEW(sym) v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), sym, v8::String::kNormalString)
#else
#define SWIGV8_STRING_NEW(str) (v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), str, v8::NewStringType::kNormal)).ToLocalChecked()
#define SWIGV8_SYMBOL_NEW(sym) (v8::String::NewFromUtf8(v8::Isolate::GetCurrent(), sym, v8::NewStringType::kNormal)).ToLocalChecked()
#endif

#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_MAYBE_CHECK(maybe) maybe.FromJust()
#else
#define SWIGV8_MAYBE_CHECK(maybe) maybe.Check()
#endif

#define SWIGV8_ARRAY_NEW(size) v8::Array::New(v8::Isolate::GetCurrent(), size)
#define SWIGV8_BOOLEAN_NEW(bool) v8::Boolean::New(v8::Isolate::GetCurrent(), bool)
#define SWIGV8_EXTERNAL_NEW(val) v8::External::New(v8::Isolate::GetCurrent(), val)
#define SWIGV8_FUNCTEMPLATE_NEW(func) v8::FunctionTemplate::New(v8::Isolate::GetCurrent(), func)
#define SWIGV8_FUNCTEMPLATE_NEW_VOID() v8::FunctionTemplate::New(v8::Isolate::GetCurrent())
#define SWIGV8_INT32_NEW(num) v8::Int32::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_INTEGER_NEW(num) v8::Integer::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_INTEGER_NEW_UNS(num) v8::Integer::NewFromUnsigned(v8::Isolate::GetCurrent(), num)
#define SWIGV8_NUMBER_NEW(num) v8::Number::New(v8::Isolate::GetCurrent(), num)
#define SWIGV8_OBJECT_NEW() v8::Object::New(v8::Isolate::GetCurrent())
#define SWIGV8_UNDEFINED() v8::Undefined(v8::Isolate::GetCurrent())
#define SWIGV8_ARRAY v8::Local<v8::Array>
#define SWIGV8_FUNCTION_TEMPLATE v8::Local<v8::FunctionTemplate>
#define SWIGV8_OBJECT v8::Local<v8::Object>
#define SWIGV8_OBJECT_TEMPLATE v8::Local<v8::ObjectTemplate>
#define SWIGV8_VALUE v8::Local<v8::Value>
#define SWIGV8_NULL() v8::Null(v8::Isolate::GetCurrent())
#define SWIGV8_ARRAY_GET(array, index) (array)->Get(SWIGV8_CURRENT_CONTEXT(), index).ToLocalChecked()
#define SWIGV8_ARRAY_SET(array, index, value) SWIGV8_MAYBE_CHECK((array)->Set(SWIGV8_CURRENT_CONTEXT(), index, value))

#define SWIGV8_SET_CLASS_TEMPL(class_templ, class) class_templ.Reset(v8::Isolate::GetCurrent(), class);

#if SWIG_V8_VERSION < 0x0608
#define SWIGV8_TO_OBJECT(handle) (handle)->ToObject()
#define SWIGV8_TO_STRING(handle) (handle)->ToString()
#define SWIGV8_NUMBER_VALUE(handle) (handle)->NumberValue()
#define SWIGV8_INTEGER_VALUE(handle) (handle)->IntegerValue()
#define SWIGV8_BOOLEAN_VALUE(handle) (handle)->BooleanValue()
#define SWIGV8_WRITE_UTF8(handle, buffer, len) (handle)->WriteUtf8(buffer, len)
#define SWIGV8_UTF8_LENGTH(handle) (handle)->Utf8Length()
#else
#define SWIGV8_TO_OBJECT(handle) (handle)->ToObject(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked()
#define SWIGV8_TO_STRING(handle) (handle)->ToString(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked()
#define SWIGV8_NUMBER_VALUE(handle) (handle)->NumberValue(SWIGV8_CURRENT_CONTEXT()).ToChecked()
#define SWIGV8_INTEGER_VALUE(handle) (handle)->IntegerValue(SWIGV8_CURRENT_CONTEXT()).ToChecked()
#define SWIGV8_WRITE_UTF8(handle, buffer, len) (handle)->WriteUtf8(v8::Isolate::GetCurrent(), buffer, len)
#define SWIGV8_UTF8_LENGTH(handle) (handle)->Utf8Length(v8::Isolate::GetCurrent())
#if (SWIG_V8_VERSION < 0x0704)
#define SWIGV8_BOOLEAN_VALUE(handle) (handle)->BooleanValue(SWIGV8_CURRENT_CONTEXT()).ToChecked()
#else
#define SWIGV8_BOOLEAN_VALUE(handle) (handle)->BooleanValue(v8::Isolate::GetCurrent())
#endif
#endif

/* ---------------------------------------------------------------------------
 * Error handling
 *
 * ---------------------------------------------------------------------------*/

#define SWIG_Error(code, msg)     SWIGV8_ErrorHandler.error(code, msg)
#define SWIG_exception(code, msg) do { SWIGV8_ErrorHandler.error(code, msg); SWIG_fail; } while (0)
#define SWIG_fail                 goto fail
#define SWIGV8_OVERLOAD false

SWIGINTERN void SWIG_V8_Raise(const char *msg) {
  SWIGV8_THROW_EXCEPTION(v8::Exception::Error(SWIGV8_STRING_NEW(msg)));
}

/*
  Note: There are two contexts for handling errors.
  A static V8ErrorHandler is used in not overloaded methods.
  For overloaded methods the throwing type checking mechanism is used
  during dispatching. As V8 exceptions can not be reset properly
  the trick is to use a dynamic ErrorHandler with same local name as the global
  one.

  - See definition of SWIG_Error above.
  - See code templates 'JS_function_dispatcher', 'JS_functionwrapper_overload',
    and 'JS_function_dispatch_case' in javascriptcode.swg

*/
class V8ErrorHandler {
public:
  virtual ~V8ErrorHandler() {}
  virtual void error(int code, const char *msg) {
    SWIG_V8_Raise(msg);
  }
};
// this is used in usually
SWIGRUNTIME V8ErrorHandler SWIGV8_ErrorHandler;

// instances of this are used in overloaded functions
class OverloadErrorHandler: public V8ErrorHandler {
public:
  virtual void error(int code, const char *msg) {
    err = v8::Exception::Error(SWIGV8_STRING_NEW(msg));
    if(code != SWIG_TypeError) {
        SWIGV8_THROW_EXCEPTION(err);
    }
  }
  SWIGV8_VALUE err;
};

/* ---------------------------------------------------------------------------
 * Basic Proxy object
 *
 * ---------------------------------------------------------------------------*/

// Note: to trigger the v8 gc more often one can tell v8 about the memory consumption
// TODO: we could add a v8 specific parameter to control this value
#define SWIGV8_AVG_OBJ_SIZE 1000

class SWIGV8_Proxy {
public:
  SWIGV8_Proxy(): swigCMemOwn(false), swigCObject(0), info(0) {
    SWIGV8_ADJUST_MEMORY(SWIGV8_AVG_OBJ_SIZE);
  };

  ~SWIGV8_Proxy() {
    handle.ClearWeak();
    handle.Reset();

    SWIGV8_ADJUST_MEMORY(-SWIGV8_AVG_OBJ_SIZE);
  }

  bool swigCMemOwn;
  void *swigCObject;
  swig_type_info *info;
  v8::Persistent<v8::Object> handle;
};

class SWIGV8_ClientData {
public:
  v8::Persistent<v8::FunctionTemplate> class_templ;

  void (*dtor) (const v8::WeakCallbackInfo<SWIGV8_Proxy> &data);
};

SWIGRUNTIME v8::Persistent<v8::FunctionTemplate> SWIGV8_SWIGTYPE_Proxy_class_templ;

SWIGRUNTIME int SWIG_V8_ConvertInstancePtr(SWIGV8_OBJECT objRef, void **ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE();

  if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;

  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));

  if(cdata == NULL) {
    return SWIG_ERROR;
  }
  if(info && cdata->info != info) {
    swig_cast_info *tc = SWIG_TypeCheckStruct(cdata->info, info);
    if (!tc && cdata->info->name) {
      tc = SWIG_TypeCheck(cdata->info->name, info);
    }
    bool type_valid = tc != 0;
    if(!type_valid) {
      return SWIG_TypeError;
    }
    int newmemory = 0;
    *ptr = SWIG_TypeCast(tc, cdata->swigCObject, &newmemory);
    assert(!newmemory); /* newmemory handling not yet implemented */
  } else {
    *ptr = cdata->swigCObject;
  }

  if (((flags & SWIG_POINTER_RELEASE) == SWIG_POINTER_RELEASE) && !cdata->swigCMemOwn) {
    return SWIG_ERROR_RELEASE_NOT_OWNED;
  } else {
    if (flags & SWIG_POINTER_DISOWN) {
      cdata->swigCMemOwn = false;
    }
    if (flags & SWIG_POINTER_CLEAR) {
      cdata->swigCObject = 0;
    }
  }
  return SWIG_OK;
}


SWIGRUNTIME void SWIGV8_Proxy_DefaultDtor(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  delete proxy;
}

SWIGRUNTIME int SWIG_V8_GetInstancePtr(SWIGV8_VALUE valRef, void **ptr) {
  if(!valRef->IsObject()) {
    return SWIG_TypeError;
  }
  SWIGV8_OBJECT objRef = SWIGV8_OBJECT::Cast(valRef);

  if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;

  SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));

  if(cdata == NULL) {
    return SWIG_ERROR;
  }

  *ptr = cdata->swigCObject;

  return SWIG_OK;
}

SWIGRUNTIME void SWIGV8_SetPrivateData(SWIGV8_OBJECT obj, void *ptr, swig_type_info *info, int flags) {
  SWIGV8_Proxy *cdata = new SWIGV8_Proxy();
  cdata->swigCObject = ptr;
  cdata->swigCMemOwn = (flags & SWIG_POINTER_OWN) ? 1 : 0;
  cdata->info = info;

  obj->SetAlignedPointerInInternalField(0, cdata);

  cdata->handle.Reset(v8::Isolate::GetCurrent(), obj);

  if(cdata->swigCMemOwn && (SWIGV8_ClientData*)info->clientdata) {
    cdata->handle.SetWeak(cdata, ((SWIGV8_ClientData*)info->clientdata)->dtor, v8::WeakCallbackType::kParameter);
  } else {
    cdata->handle.SetWeak(cdata, SWIGV8_Proxy_DefaultDtor, v8::WeakCallbackType::kParameter);
  }

#if (SWIG_V8_VERSION < 0x0704)
  cdata->handle.MarkIndependent();
// Looks like future versions do not require that anymore:
// https://monorail-prod.appspot.com/p/chromium/issues/detail?id=923361#c11
#endif
}

SWIGRUNTIME int SWIG_V8_ConvertPtr(SWIGV8_VALUE valRef, void **ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE();
  
  /* special case: JavaScript null => C NULL pointer */
  if(valRef->IsNull()) {
    *ptr=0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }
  if(!valRef->IsObject()) {
    return SWIG_TypeError;
  }
  SWIGV8_OBJECT objRef = SWIGV8_OBJECT::Cast(valRef);
  return SWIG_V8_ConvertInstancePtr(objRef, ptr, info, flags);
}

SWIGRUNTIME SWIGV8_VALUE SWIG_V8_NewPointerObj(void *ptr, swig_type_info *info, int flags) {
  SWIGV8_HANDLESCOPE_ESC();
  
  SWIGV8_FUNCTION_TEMPLATE class_templ;

  if (ptr == NULL) {
    v8::Local<v8::Primitive> result = SWIGV8_NULL();
    SWIGV8_ESCAPE(result);
  }

  v8::Isolate *isolate = v8::Isolate::GetCurrent();

  if(info->clientdata != 0) {
    class_templ = v8::Local<v8::FunctionTemplate>::New(isolate, ((SWIGV8_ClientData*) info->clientdata)->class_templ);
  } else {
    class_templ = v8::Local<v8::FunctionTemplate>::New(isolate, SWIGV8_SWIGTYPE_Proxy_class_templ);
  }

  v8::Local<v8::Object> result = class_templ->InstanceTemplate()->NewInstance(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked();

  SWIGV8_SetPrivateData(result, ptr, info, flags);

  SWIGV8_ESCAPE(result);
}

#define SWIG_ConvertPtr(obj, ptr, info, flags)    SWIG_V8_ConvertPtr(obj, ptr, info, flags)
#define SWIG_NewPointerObj(ptr, info, flags)      SWIG_V8_NewPointerObj(ptr, info, flags)

#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_V8_ConvertInstancePtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(thisvalue, type, flags)     SWIG_V8_NewPointerObj(thisvalue, type, flags)

#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_V8_ConvertPtr(obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_V8_NewPointerObj(ptr, type, 0)

#define SWIG_GetInstancePtr(obj, ptr)    SWIG_V8_GetInstancePtr(obj, ptr)

SWIGRUNTIME SwigV8ReturnValue _SWIGV8_wrap_equals(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  bool result;
  int res1;
  int res2;

  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for equals.");

  res1 = SWIG_GetInstancePtr(args.Holder(), &arg1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ERROR, "Could not get pointer from 'this' object for equals.");
  }
  res2 = SWIG_GetInstancePtr(args[0], &arg2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "equals" "', argument " "1"" of type '" "void *""'");
  }

  result = (bool)(arg1 == arg2);
  jsresult =  SWIGV8_BOOLEAN_NEW(result);

  SWIGV8_RETURN(jsresult);
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}

SWIGRUNTIME SwigV8ReturnValue _wrap_getCPtr(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  void *arg1 = (void *) 0 ;
  long result;
  int res1;

  res1 = SWIG_GetInstancePtr(args.Holder(), &arg1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "getCPtr" "', argument " "1"" of type '" "void *""'");
  }

  result = (long)arg1;
  jsresult = SWIGV8_NUMBER_NEW(result);

  SWIGV8_RETURN(jsresult);
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}

/* ---------------------------------------------------------------------------
 * PackedData object
 *
 * ---------------------------------------------------------------------------*/

class SwigV8PackedData {
public:
  SwigV8PackedData(void *data, size_t size, swig_type_info *type): data(data), size(size), type(type) {};

  ~SwigV8PackedData() {
  };

  void *data;
  size_t size;
  swig_type_info *type;

  v8::Persistent<v8::Object> handle;
};

SWIGRUNTIMEINLINE
int SwigV8Packed_Check(SWIGV8_VALUE valRef) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT objRef = SWIGV8_TO_OBJECT(valRef);
  if(objRef->InternalFieldCount() < 1) return false;
  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("__swig__packed_data__"));
  v8::Local<v8::Value> flag;
  if (!objRef->GetPrivate(SWIGV8_CURRENT_CONTEXT(), privateKey).ToLocal(&flag))
    return false;
  return (flag->IsBoolean() && SWIGV8_BOOLEAN_VALUE(flag));
}

SWIGRUNTIME
swig_type_info *SwigV8Packed_UnpackData(SWIGV8_VALUE valRef, void *ptr, size_t size) {
  if (SwigV8Packed_Check(valRef)) {
    SWIGV8_HANDLESCOPE();
    
    SwigV8PackedData *sobj;

    SWIGV8_OBJECT objRef = SWIGV8_TO_OBJECT(valRef);

    sobj = static_cast<SwigV8PackedData*>(objRef->GetAlignedPointerFromInternalField(0));
    if (sobj == NULL || sobj->size != size) return 0;
    memcpy(ptr, sobj->data, size);
    return sobj->type;
  } else {
    return 0;
  }
}

SWIGRUNTIME
int SWIGV8_ConvertPacked(SWIGV8_VALUE valRef, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigV8Packed_UnpackData(valRef, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}

SWIGRUNTIME void _wrap_SwigV8PackedData_delete(const v8::WeakCallbackInfo<SwigV8PackedData> &data) {
  SwigV8PackedData *cdata = data.GetParameter();
  delete cdata;
}

SWIGRUNTIME
SWIGV8_VALUE SWIGV8_NewPackedObj(void *data, size_t size, swig_type_info *type) {
  SWIGV8_HANDLESCOPE_ESC();

  SwigV8PackedData *cdata = new SwigV8PackedData(data, size, type);
//  v8::Handle<v8::Object> obj = SWIGV8_OBJECT_NEW();
  v8::Local<v8::Object> obj = SWIGV8_OBJECT_NEW();

  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("__swig__packed_data__"));
  obj->SetPrivate(SWIGV8_CURRENT_CONTEXT(), privateKey, SWIGV8_BOOLEAN_NEW(true));

  obj->SetAlignedPointerInInternalField(0, cdata);

  cdata->handle.Reset(v8::Isolate::GetCurrent(), obj);

  cdata->handle.SetWeak(cdata, _wrap_SwigV8PackedData_delete, v8::WeakCallbackType::kParameter);

#if (SWIG_V8_VERSION < 0x0704)
  cdata->handle.MarkIndependent();
// Looks like future versions do not require that anymore:
// https://monorail-prod.appspot.com/p/chromium/issues/detail?id=923361#c11
#endif

  SWIGV8_ESCAPE(obj);

}

#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIGV8_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIGV8_NewPackedObj(ptr, sz, type)


/* ---------------------------------------------------------------------------
 * Support for IN/OUTPUT typemaps (see Lib/typemaps/inoutlist.swg)
 *
 * ---------------------------------------------------------------------------*/

SWIGRUNTIME

SWIGV8_VALUE SWIGV8_AppendOutput(SWIGV8_VALUE result, SWIGV8_VALUE obj) {
  SWIGV8_HANDLESCOPE_ESC();
  
  if (result->IsUndefined()) {
    result = SWIGV8_ARRAY_NEW(0);
  } else if (!result->IsArray()) {
    SWIGV8_ARRAY tmparr = SWIGV8_ARRAY_NEW(0);
    SWIGV8_ARRAY_SET(tmparr, 0, result);
    result = tmparr;
  }

  SWIGV8_ARRAY arr = SWIGV8_ARRAY::Cast(result);
  SWIGV8_ARRAY_SET(arr, arr->Length(), obj);
  SWIGV8_ESCAPE(arr);
}



typedef v8::FunctionCallback            SwigV8FunctionCallback;
typedef v8::AccessorNameGetterCallback  SwigV8AccessorGetterCallback;
typedef v8::AccessorNameSetterCallback  SwigV8AccessorSetterCallback;
typedef v8::PropertyCallbackInfo<void>  SwigV8PropertyCallbackInfoVoid;

/**
 * Creates a class template for a class with specified initialization function.
 */
SWIGRUNTIME SWIGV8_FUNCTION_TEMPLATE SWIGV8_CreateClassTemplate(const char* symbol) {
    SWIGV8_HANDLESCOPE_ESC();
    
    v8::Local<v8::FunctionTemplate> class_templ = SWIGV8_FUNCTEMPLATE_NEW_VOID();
    class_templ->SetClassName(SWIGV8_SYMBOL_NEW(symbol));

    SWIGV8_OBJECT_TEMPLATE inst_templ = class_templ->InstanceTemplate();
    inst_templ->SetInternalFieldCount(1);

    SWIGV8_OBJECT_TEMPLATE equals_templ = class_templ->PrototypeTemplate();
    equals_templ->Set(SWIGV8_SYMBOL_NEW("equals"), SWIGV8_FUNCTEMPLATE_NEW(_SWIGV8_wrap_equals));

    SWIGV8_OBJECT_TEMPLATE cptr_templ = class_templ->PrototypeTemplate();
    cptr_templ->Set(SWIGV8_SYMBOL_NEW("getCPtr"), SWIGV8_FUNCTEMPLATE_NEW(_wrap_getCPtr));

    SWIGV8_ESCAPE(class_templ);
}

/**
 * Registers a class method with given name for a given class template.
 */
SWIGRUNTIME void SWIGV8_AddMemberFunction(SWIGV8_FUNCTION_TEMPLATE class_templ, const char* symbol,
  SwigV8FunctionCallback _func) {
    SWIGV8_OBJECT_TEMPLATE proto_templ = class_templ->PrototypeTemplate();
    proto_templ->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func));
}

/**
 * Registers a class property with given name for a given class template.
 */
SWIGRUNTIME void SWIGV8_AddMemberVariable(SWIGV8_FUNCTION_TEMPLATE class_templ, const char* symbol,
  SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
  SWIGV8_OBJECT_TEMPLATE proto_templ = class_templ->InstanceTemplate();
  proto_templ->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
}

/**
 * Registers a class method with given name for a given object.
 */
SWIGRUNTIME void SWIGV8_AddStaticFunction(SWIGV8_OBJECT obj, const char* symbol,
  const SwigV8FunctionCallback& _func, v8::Local<v8::Context> context) {
  SWIGV8_MAYBE_CHECK(obj->Set(context, SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func)->GetFunction(context).ToLocalChecked()));
}

/**
 * Registers a class method with given name for a given object.
 */
SWIGRUNTIME void SWIGV8_AddStaticVariable(SWIGV8_OBJECT obj, const char* symbol,
  SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter,
  v8::Local<v8::Context> context) {
  SWIGV8_MAYBE_CHECK(obj->SetAccessor(context, SWIGV8_SYMBOL_NEW(symbol), getter, setter));
}

SWIGRUNTIME void JS_veto_set_variable(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid& info)
{
    char buffer[256];
    char msg[512];
    int res;

    v8::Local<v8::String> sproperty;
    if (property->ToString(SWIGV8_CURRENT_CONTEXT()).ToLocal(&sproperty)) {
      SWIGV8_WRITE_UTF8(sproperty, buffer, 256);
      res = sprintf(msg, "Tried to write read-only variable: %s.", buffer);
    }
    else {
      res = -1;
    }

    if(res<0) {
      SWIG_exception(SWIG_ERROR, "Tried to write read-only variable.");
    } else {
      SWIG_exception(SWIG_ERROR, msg);
    }
fail: ;
}



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_char swig_types[0]
#define SWIGTYPE_p_f_bool__bool swig_types[1]
#define SWIGTYPE_p_f_bool__void swig_types[2]
#define SWIGTYPE_p_f_bool_unsigned_int_bool__void swig_types[3]
#define SWIGTYPE_p_f_bool_unsigned_int_uint32_t_uint16_t__void swig_types[4]
#define SWIGTYPE_p_f_enum_retro_log_level_p_q_const__char_v_______void swig_types[5]
#define SWIGTYPE_p_f_int16_t_int16_t__void swig_types[6]
#define SWIGTYPE_p_f_int64_t__void swig_types[7]
#define SWIGTYPE_p_f_int_int__void swig_types[8]
#define SWIGTYPE_p_f_p_double_p_double_p_double_p_double__bool swig_types[9]
#define SWIGTYPE_p_f_p_q_const__char__int swig_types[10]
#define SWIGTYPE_p_f_p_q_const__char__p_f_void__void swig_types[11]
#define SWIGTYPE_p_f_p_q_const__char_bool__p_retro_vfs_dir_handle swig_types[12]
#define SWIGTYPE_p_f_p_q_const__char_p_int32_t__int swig_types[13]
#define SWIGTYPE_p_f_p_q_const__char_p_q_const__char__int swig_types[14]
#define SWIGTYPE_p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle swig_types[15]
#define SWIGTYPE_p_f_p_q_const__int16_t_size_t__size_t swig_types[16]
#define SWIGTYPE_p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void swig_types[17]
#define SWIGTYPE_p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void swig_types[18]
#define SWIGTYPE_p_f_p_retro_perf_counter__void swig_types[19]
#define SWIGTYPE_p_f_p_retro_vfs_dir_handle__bool swig_types[20]
#define SWIGTYPE_p_f_p_retro_vfs_dir_handle__int swig_types[21]
#define SWIGTYPE_p_f_p_retro_vfs_dir_handle__p_char swig_types[22]
#define SWIGTYPE_p_f_p_retro_vfs_file_handle__int swig_types[23]
#define SWIGTYPE_p_f_p_retro_vfs_file_handle__int64_t swig_types[24]
#define SWIGTYPE_p_f_p_retro_vfs_file_handle__p_char swig_types[25]
#define SWIGTYPE_p_f_p_retro_vfs_file_handle_int64_t__int64_t swig_types[26]
#define SWIGTYPE_p_f_p_retro_vfs_file_handle_int64_t_int__int64_t swig_types[27]
#define SWIGTYPE_p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t swig_types[28]
#define SWIGTYPE_p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t swig_types[29]
#define SWIGTYPE_p_f_p_uint8_t__bool swig_types[30]
#define SWIGTYPE_p_f_uint8_t_uint32_t__bool swig_types[31]
#define SWIGTYPE_p_f_unsigned_int__bool swig_types[32]
#define SWIGTYPE_p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool swig_types[33]
#define SWIGTYPE_p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool swig_types[34]
#define SWIGTYPE_p_f_unsigned_int_p_char_size_t__bool swig_types[35]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__char__bool swig_types[36]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__retro_game_info__bool swig_types[37]
#define SWIGTYPE_p_f_unsigned_int_p_void__bool swig_types[38]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int__float swig_types[39]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int__void swig_types[40]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void swig_types[41]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t swig_types[42]
#define SWIGTYPE_p_f_void__bool swig_types[43]
#define SWIGTYPE_p_f_void__int64_t swig_types[44]
#define SWIGTYPE_p_f_void__uint64_t swig_types[45]
#define SWIGTYPE_p_f_void__uintptr_t swig_types[46]
#define SWIGTYPE_p_f_void__unsigned_int swig_types[47]
#define SWIGTYPE_p_f_void__void swig_types[48]
#define SWIGTYPE_p_int swig_types[49]
#define SWIGTYPE_p_int64_t swig_types[50]
#define SWIGTYPE_p_int8_t swig_types[51]
#define SWIGTYPE_p_retro_audio_buffer_status_callback swig_types[52]
#define SWIGTYPE_p_retro_audio_callback swig_types[53]
#define SWIGTYPE_p_retro_camera_callback swig_types[54]
#define SWIGTYPE_p_retro_controller_description swig_types[55]
#define SWIGTYPE_p_retro_controller_info swig_types[56]
#define SWIGTYPE_p_retro_core_option_definition swig_types[57]
#define SWIGTYPE_p_retro_core_option_display swig_types[58]
#define SWIGTYPE_p_retro_core_option_v2_category swig_types[59]
#define SWIGTYPE_p_retro_core_option_v2_definition swig_types[60]
#define SWIGTYPE_p_retro_core_option_value swig_types[61]
#define SWIGTYPE_p_retro_core_options_intl swig_types[62]
#define SWIGTYPE_p_retro_core_options_update_display_callback swig_types[63]
#define SWIGTYPE_p_retro_core_options_v2 swig_types[64]
#define SWIGTYPE_p_retro_core_options_v2_intl swig_types[65]
#define SWIGTYPE_p_retro_disk_control_callback swig_types[66]
#define SWIGTYPE_p_retro_disk_control_ext_callback swig_types[67]
#define SWIGTYPE_p_retro_fastforwarding_override swig_types[68]
#define SWIGTYPE_p_retro_frame_time_callback swig_types[69]
#define SWIGTYPE_p_retro_framebuffer swig_types[70]
#define SWIGTYPE_p_retro_game_geometry swig_types[71]
#define SWIGTYPE_p_retro_game_info swig_types[72]
#define SWIGTYPE_p_retro_game_info_ext swig_types[73]
#define SWIGTYPE_p_retro_get_proc_address_interface swig_types[74]
#define SWIGTYPE_p_retro_hw_render_callback swig_types[75]
#define SWIGTYPE_p_retro_hw_render_context_negotiation_interface swig_types[76]
#define SWIGTYPE_p_retro_hw_render_interface swig_types[77]
#define SWIGTYPE_p_retro_input_descriptor swig_types[78]
#define SWIGTYPE_p_retro_keyboard_callback swig_types[79]
#define SWIGTYPE_p_retro_led_interface swig_types[80]
#define SWIGTYPE_p_retro_location_callback swig_types[81]
#define SWIGTYPE_p_retro_log_callback swig_types[82]
#define SWIGTYPE_p_retro_memory_descriptor swig_types[83]
#define SWIGTYPE_p_retro_memory_map swig_types[84]
#define SWIGTYPE_p_retro_message swig_types[85]
#define SWIGTYPE_p_retro_message_ext swig_types[86]
#define SWIGTYPE_p_retro_midi_interface swig_types[87]
#define SWIGTYPE_p_retro_perf_callback swig_types[88]
#define SWIGTYPE_p_retro_perf_counter swig_types[89]
#define SWIGTYPE_p_retro_rumble_interface swig_types[90]
#define SWIGTYPE_p_retro_sensor_interface swig_types[91]
#define SWIGTYPE_p_retro_subsystem_info swig_types[92]
#define SWIGTYPE_p_retro_subsystem_memory_info swig_types[93]
#define SWIGTYPE_p_retro_subsystem_rom_info swig_types[94]
#define SWIGTYPE_p_retro_system_av_info swig_types[95]
#define SWIGTYPE_p_retro_system_content_info_override swig_types[96]
#define SWIGTYPE_p_retro_system_info swig_types[97]
#define SWIGTYPE_p_retro_system_timing swig_types[98]
#define SWIGTYPE_p_retro_throttle_state swig_types[99]
#define SWIGTYPE_p_retro_variable swig_types[100]
#define SWIGTYPE_p_retro_vfs_interface swig_types[101]
#define SWIGTYPE_p_retro_vfs_interface_info swig_types[102]
#define SWIGTYPE_p_uint32_t swig_types[103]
#define SWIGTYPE_p_uint64_t swig_types[104]
#define SWIGTYPE_p_void swig_types[105]
static swig_type_info *swig_types[107];
static swig_module_info swig_module = {swig_types, 106, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */



#define SWIGVERSION 0x040100 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


#include <assert.h>


#include <stdlib.h>


SWIGINTERN
int SWIG_AsVal_int (SWIGV8_VALUE valRef, int* val)
{
  if (!valRef->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = SWIGV8_INTEGER_VALUE(valRef);

  return SWIG_OK;
}



#include "libretro.h"



SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_int  (int value)
{
  return SWIGV8_INT32_NEW(value);
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN
int SWIG_AsVal_double (SWIGV8_VALUE obj, double *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = SWIGV8_NUMBER_VALUE(obj);

  return SWIG_OK;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN
int SWIG_AsVal_unsigned_SS_long (SWIGV8_VALUE obj, unsigned long *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }

  long longVal = (long) SWIGV8_NUMBER_VALUE(obj);

  if(longVal < 0) {
      return SWIG_OverflowError;
  }

  if(val) *val = longVal;

  return SWIG_OK;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (SWIGV8_VALUE obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_long  (long value)
{
  return SWIGV8_NUMBER_NEW(value);
}


SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return SWIGV8_INTEGER_NEW_UNS(value);
}


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN
int SWIG_AsVal_unsigned_SS_long_SS_long (SWIGV8_VALUE obj, unsigned long long *val)
{
  if(!obj->IsNumber()) {
    return SWIG_TypeError;
  }

  long long longVal = (long long) SWIGV8_NUMBER_VALUE(obj);

  if(longVal < 0) {
      return SWIG_OverflowError;
  }

  if(val) *val = longVal;

  return SWIG_OK;
}
#endif


SWIGINTERNINLINE int
SWIG_AsVal_size_t (SWIGV8_VALUE obj, size_t *val)
{
  int res = SWIG_TypeError;
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
    unsigned long long v;
    res = SWIG_AsVal_unsigned_SS_long_SS_long (obj, val ? &v : 0);
    if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  }
#endif
  return res;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_long_SS_long  (long long value)
{
  return SWIGV8_NUMBER_NEW(value);
}
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE
SWIGV8_VALUE SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return SWIGV8_INTEGER_NEW_UNS(value);
}
#endif


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_size_t  (size_t value)
{    
#ifdef SWIG_LONG_LONG_AVAILABLE
  if (sizeof(size_t) <= sizeof(unsigned long)) {
#endif
    return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
#ifdef SWIG_LONG_LONG_AVAILABLE
  } else {
    /* assume sizeof(size_t) <= sizeof(unsigned long long) */
    return SWIG_From_unsigned_SS_long_SS_long  (static_cast< unsigned long long >(value));
  }
#endif
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(SWIGV8_VALUE valRef, char** cptr, size_t* psize, int *alloc)
{
  if(valRef->IsString()) {
    v8::Local<v8::String> js_str = v8::Local<v8::String>::Cast(valRef);

    size_t len = SWIGV8_UTF8_LENGTH(js_str) + 1;
    char* cstr = (char*) (new char[len]());
    SWIGV8_WRITE_UTF8(js_str, cstr, len);
    
    if(alloc) *alloc = SWIG_NEWOBJ;
    if(psize) *psize = len;
    if(cptr) *cptr = cstr;
    
    return SWIG_OK;
  } else {
    if(valRef->IsObject()) {
      SWIGV8_OBJECT obj = SWIGV8_OBJECT::Cast(valRef);
      // try if the object is a wrapped char[]
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      if (pchar_descriptor) {
        void* vptr = 0;
        if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
          if (cptr) *cptr = (char *) vptr;
          if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
          if (alloc) *alloc = SWIG_OLDOBJ;
          return SWIG_OK;
        }
      }
      return SWIG_TypeError;
    } else {
      return SWIG_TypeError;
    }
  }
}





SWIGINTERNINLINE SWIGV8_VALUE
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      // TODO: handle extra long strings
      return SWIGV8_UNDEFINED();
    } else {
      v8::Local<v8::String> js_str = SWIGV8_STRING_NEW2(carray, size);
      return js_str;
    }
  } else {
    return SWIGV8_UNDEFINED();
  }
}


SWIGINTERNINLINE SWIGV8_VALUE 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN
int SWIG_AsVal_long (SWIGV8_VALUE obj, long* val)
{
  if (!obj->IsNumber()) {
    return SWIG_TypeError;
  }
  if(val) *val = (long) SWIGV8_INTEGER_VALUE(obj);

  return SWIG_OK;
}


SWIGINTERN
int SWIG_AsVal_bool (SWIGV8_VALUE obj, bool *val)
{
  if(!obj->IsBoolean()) {
    return SWIG_ERROR;
  }

  if (val) *val = SWIGV8_BOOLEAN_VALUE(obj);
  return SWIG_OK;
}


SWIGINTERNINLINE
SWIGV8_VALUE
SWIG_From_bool  (bool value)
{
  return SWIGV8_BOOLEAN_NEW(value);
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(__cplusplus) && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 2))
#  define SWIG_isfinite(X) (__builtin_isfinite(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (SWIGV8_VALUE obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


SWIGINTERN
SWIGV8_VALUE SWIG_From_double   (double val)
{
  return SWIGV8_NUMBER_NEW(val);
}


SWIGINTERNINLINE SWIGV8_VALUE
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


#define SWIGV8_INIT libretro_initialize


SWIGV8_ClientData _exports_retro_vfs_interface_clientData;
SWIGV8_ClientData _exports_retro_vfs_interface_info_clientData;
SWIGV8_ClientData _exports_retro_hw_render_interface_clientData;
SWIGV8_ClientData _exports_retro_led_interface_clientData;
SWIGV8_ClientData _exports_retro_midi_interface_clientData;
SWIGV8_ClientData _exports_retro_hw_render_context_negotiation_interface_clientData;
SWIGV8_ClientData _exports_retro_memory_descriptor_clientData;
SWIGV8_ClientData _exports_retro_memory_map_clientData;
SWIGV8_ClientData _exports_retro_controller_description_clientData;
SWIGV8_ClientData _exports_retro_controller_info_clientData;
SWIGV8_ClientData _exports_retro_subsystem_memory_info_clientData;
SWIGV8_ClientData _exports_retro_subsystem_rom_info_clientData;
SWIGV8_ClientData _exports_retro_subsystem_info_clientData;
SWIGV8_ClientData _exports_retro_get_proc_address_interface_clientData;
SWIGV8_ClientData _exports_retro_log_callback_clientData;
SWIGV8_ClientData _exports_retro_perf_counter_clientData;
SWIGV8_ClientData _exports_retro_perf_callback_clientData;
SWIGV8_ClientData _exports_retro_sensor_interface_clientData;
SWIGV8_ClientData _exports_retro_camera_callback_clientData;
SWIGV8_ClientData _exports_retro_location_callback_clientData;
SWIGV8_ClientData _exports_retro_rumble_interface_clientData;
SWIGV8_ClientData _exports_retro_audio_callback_clientData;
SWIGV8_ClientData _exports_retro_frame_time_callback_clientData;
SWIGV8_ClientData _exports_retro_audio_buffer_status_callback_clientData;
SWIGV8_ClientData _exports_retro_hw_render_callback_clientData;
SWIGV8_ClientData _exports_retro_keyboard_callback_clientData;
SWIGV8_ClientData _exports_retro_disk_control_callback_clientData;
SWIGV8_ClientData _exports_retro_disk_control_ext_callback_clientData;
SWIGV8_ClientData _exports_retro_message_clientData;
SWIGV8_ClientData _exports_retro_message_ext_clientData;
SWIGV8_ClientData _exports_retro_input_descriptor_clientData;
SWIGV8_ClientData _exports_retro_system_info_clientData;
SWIGV8_ClientData _exports_retro_system_content_info_override_clientData;
SWIGV8_ClientData _exports_retro_game_info_ext_clientData;
SWIGV8_ClientData _exports_retro_game_geometry_clientData;
SWIGV8_ClientData _exports_retro_system_timing_clientData;
SWIGV8_ClientData _exports_retro_system_av_info_clientData;
SWIGV8_ClientData _exports_retro_variable_clientData;
SWIGV8_ClientData _exports_retro_core_option_display_clientData;
SWIGV8_ClientData _exports_retro_core_option_value_clientData;
SWIGV8_ClientData _exports_retro_core_option_definition_clientData;
SWIGV8_ClientData _exports_retro_core_options_intl_clientData;
SWIGV8_ClientData _exports_retro_core_option_v2_category_clientData;
SWIGV8_ClientData _exports_retro_core_option_v2_definition_clientData;
SWIGV8_ClientData _exports_retro_core_options_v2_clientData;
SWIGV8_ClientData _exports_retro_core_options_v2_intl_clientData;
SWIGV8_ClientData _exports_retro_core_options_update_display_callback_clientData;
SWIGV8_ClientData _exports_retro_game_info_clientData;
SWIGV8_ClientData _exports_retro_framebuffer_clientData;
SWIGV8_ClientData _exports_retro_fastforwarding_override_clientData;
SWIGV8_ClientData _exports_retro_throttle_state_clientData;


static SwigV8ReturnValue _wrap_malloc_int(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  int *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_malloc_int.");
  
  ecode1 = SWIG_AsVal_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "malloc_int" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int *)malloc(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_free_int(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  int *arg1 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_free_int.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "free_int" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  free(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_RETRO_API_VERSION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_TYPE_SHIFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_MASK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(((1 << 8) -1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_NONE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_JOYPAD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_MOUSE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_KEYBOARD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_LIGHTGUN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ANALOG(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_POINTER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_B(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_SELECT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_START(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_UP(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_DOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_LEFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_RIGHT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_A(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_L(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(10));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_R(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(11));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_L2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(12));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_R2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(13));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_L3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(14));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_R3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(15));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_JOYPAD_MASK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(256));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_INDEX_ANALOG_LEFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_INDEX_ANALOG_RIGHT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_INDEX_ANALOG_BUTTON(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_ANALOG_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_ANALOG_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_LEFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_RIGHT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_WHEELUP(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_WHEELDOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_MIDDLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELUP(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELDOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_BUTTON_4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_MOUSE_BUTTON_5(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(10));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_SCREEN_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(13));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_SCREEN_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(14));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_IS_OFFSCREEN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(15));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_TRIGGER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_RELOAD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_AUX_A(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_AUX_B(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_START(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_SELECT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_AUX_C(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_UP(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_DOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(10));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_LEFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(11));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_RIGHT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(12));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_CURSOR(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_TURBO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_LIGHTGUN_PAUSE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_POINTER_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_POINTER_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_POINTER_PRESSED(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_DEVICE_ID_POINTER_COUNT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_REGION_NTSC(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_REGION_PAL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_ENGLISH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_ENGLISH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_JAPANESE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_JAPANESE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_FRENCH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_FRENCH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_SPANISH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_SPANISH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_GERMAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_GERMAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_ITALIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_ITALIAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_DUTCH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_DUTCH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_PORTUGUESE_BRAZIL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_PORTUGUESE_BRAZIL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_PORTUGUESE_PORTUGAL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_PORTUGUESE_PORTUGAL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_RUSSIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_RUSSIAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_KOREAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_KOREAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_CHINESE_TRADITIONAL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_CHINESE_TRADITIONAL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_CHINESE_SIMPLIFIED(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_CHINESE_SIMPLIFIED));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_ESPERANTO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_ESPERANTO));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_POLISH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_POLISH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_VIETNAMESE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_VIETNAMESE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_ARABIC(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_ARABIC));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_GREEK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_GREEK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_TURKISH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_TURKISH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_SLOVAK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_SLOVAK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_PERSIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_PERSIAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_HEBREW(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_HEBREW));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_ASTURIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_ASTURIAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_FINNISH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_FINNISH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_INDONESIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_INDONESIAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_SWEDISH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_SWEDISH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_UKRAINIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_UKRAINIAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_CZECH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_CZECH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_VALENCIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_VALENCIAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_LAST(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_LAST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LANGUAGE_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LANGUAGE_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_MASK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0xff));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_SAVE_RAM(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_RTC(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_SYSTEM_RAM(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_VIDEO_RAM(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_UNKNOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_UNKNOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_FIRST(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_FIRST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_BACKSPACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_BACKSPACE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_TAB(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_TAB));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_CLEAR(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_CLEAR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RETURN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RETURN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_PAUSE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_PAUSE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_ESCAPE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_ESCAPE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_SPACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_SPACE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_EXCLAIM(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_EXCLAIM));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_QUOTEDBL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_QUOTEDBL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_HASH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_HASH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_DOLLAR(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_DOLLAR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_AMPERSAND(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_AMPERSAND));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_QUOTE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_QUOTE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LEFTPAREN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LEFTPAREN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RIGHTPAREN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RIGHTPAREN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_ASTERISK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_ASTERISK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_PLUS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_PLUS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_COMMA(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_COMMA));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_MINUS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_MINUS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_PERIOD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_PERIOD));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_SLASH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_SLASH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_0(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_1(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_5(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_6(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_7(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_8(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_9(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_COLON(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_COLON));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_SEMICOLON(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_SEMICOLON));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LESS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LESS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_EQUALS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_EQUALS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_GREATER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_GREATER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_QUESTION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_QUESTION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_AT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_AT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LEFTBRACKET(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LEFTBRACKET));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_BACKSLASH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_BACKSLASH));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RIGHTBRACKET(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RIGHTBRACKET));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_CARET(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_CARET));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_UNDERSCORE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_UNDERSCORE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_BACKQUOTE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_BACKQUOTE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_a(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_a));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_b(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_b));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_c(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_c));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_d(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_d));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_e(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_e));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_f(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_f));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_g(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_g));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_h(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_h));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_i(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_i));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_j(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_j));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_k(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_k));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_l(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_l));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_m(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_m));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_n(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_n));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_o(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_o));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_p(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_p));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_q(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_q));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_r(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_r));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_s(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_s));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_t(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_t));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_u(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_u));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_v(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_v));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_w(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_w));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_x(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_x));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_y));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_z(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_z));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LEFTBRACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LEFTBRACE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_BAR(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_BAR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RIGHTBRACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RIGHTBRACE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_TILDE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_TILDE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_DELETE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_DELETE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP0(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP1(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP5(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP6(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP7(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP8(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP9(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP_PERIOD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP_PERIOD));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP_DIVIDE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP_DIVIDE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP_MULTIPLY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP_MULTIPLY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP_MINUS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP_MINUS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP_PLUS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP_PLUS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP_ENTER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP_ENTER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_KP_EQUALS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_KP_EQUALS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_UP(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_UP));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_DOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_DOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RIGHT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RIGHT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LEFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LEFT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_INSERT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_INSERT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_HOME(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_HOME));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_END(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_END));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_PAGEUP(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_PAGEUP));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_PAGEDOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_PAGEDOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F1(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F5(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F6(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F7(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F8(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F9(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F10(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F10));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F11(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F11));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F12(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F12));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F13(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F13));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F14(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F14));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_F15(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_F15));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_NUMLOCK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_NUMLOCK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_CAPSLOCK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_CAPSLOCK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_SCROLLOCK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_SCROLLOCK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RSHIFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RSHIFT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LSHIFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LSHIFT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RCTRL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RCTRL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LCTRL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LCTRL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RALT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RALT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LALT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LALT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RMETA(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RMETA));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LMETA(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LMETA));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LSUPER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LSUPER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_RSUPER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_RSUPER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_MODE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_MODE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_COMPOSE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_COMPOSE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_HELP(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_HELP));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_PRINT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_PRINT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_SYSREQ(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_SYSREQ));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_BREAK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_BREAK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_MENU(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_MENU));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_POWER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_POWER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_EURO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_EURO));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_UNDO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_UNDO));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_OEM_102(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_OEM_102));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_LAST(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_LAST));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROK_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROK_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_NONE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_NONE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_SHIFT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_SHIFT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_CTRL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_CTRL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_ALT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_ALT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_META(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_META));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_NUMLOCK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_NUMLOCK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_CAPSLOCK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_CAPSLOCK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_SCROLLOCK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_SCROLLOCK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETROKMOD_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETROKMOD_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_EXPERIMENTAL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0x10000));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_PRIVATE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0x20000));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_ROTATION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_OVERSCAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_CAN_DUPE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_MESSAGE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SHUTDOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(7));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_PERFORMANCE_LEVEL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(8));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_SYSTEM_DIRECTORY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_PIXEL_FORMAT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(10));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_INPUT_DESCRIPTORS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(11));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_KEYBOARD_CALLBACK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(12));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_DISK_CONTROL_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(13));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_HW_RENDER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(14));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_VARIABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(15));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_VARIABLES(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(16));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_VARIABLE_UPDATE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(17));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_SUPPORT_NO_GAME(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(18));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_LIBRETRO_PATH(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(19));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_FRAME_TIME_CALLBACK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(21));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_AUDIO_CALLBACK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(22));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_RUMBLE_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(23));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_INPUT_DEVICE_CAPABILITIES(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(24));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_SENSOR_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((25|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_CAMERA_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((26|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_LOG_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(27));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_PERF_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(28));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_LOCATION_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(29));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_CONTENT_DIRECTORY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(30));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_CORE_ASSETS_DIRECTORY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(30));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_SAVE_DIRECTORY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(31));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_SYSTEM_AV_INFO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(32));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_PROC_ADDRESS_CALLBACK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(33));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_SUBSYSTEM_INFO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(34));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CONTROLLER_INFO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(35));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_MEMORY_MAPS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((36|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_GEOMETRY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(37));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_USERNAME(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(38));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_LANGUAGE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(39));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_CURRENT_SOFTWARE_FRAMEBUFFER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((40|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_HW_RENDER_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((41|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_SUPPORT_ACHIEVEMENTS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((42|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((43|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_SERIALIZATION_QUIRKS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(44));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_HW_SHARED_CONTEXT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((44|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_VFS_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((45|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_LED_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((46|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_AUDIO_VIDEO_ENABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((47|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_MIDI_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((48|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_FASTFORWARDING(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((49|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_TARGET_REFRESH_RATE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((50|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_INPUT_BITMASKS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((51|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_CORE_OPTIONS_VERSION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(52));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(53));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_INTL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(54));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_DISPLAY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(55));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_PREFERRED_HW_RENDER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(56));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_DISK_CONTROL_INTERFACE_VERSION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(57));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_DISK_CONTROL_EXT_INTERFACE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(58));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_MESSAGE_INTERFACE_VERSION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(59));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_MESSAGE_EXT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(60));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_INPUT_MAX_USERS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(61));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_AUDIO_BUFFER_STATUS_CALLBACK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(62));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_MINIMUM_AUDIO_LATENCY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(63));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_FASTFORWARDING_OVERRIDE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(64));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CONTENT_INFO_OVERRIDE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(65));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_GAME_INFO_EXT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(66));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_V2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(67));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_V2_INTL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(68));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_UPDATE_DISPLAY_CALLBACK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(69));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_SET_VARIABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(70));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_ENVIRONMENT_GET_THROTTLE_STATE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((71|0x10000)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_FILE_ACCESS_READ(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_FILE_ACCESS_WRITE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_FILE_ACCESS_READ_WRITE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(((1 << 0)|(1 << 1))));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_FILE_ACCESS_UPDATE_EXISTING(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 2)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_FILE_ACCESS_HINT_NONE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_FILE_ACCESS_HINT_FREQUENT_ACCESS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_SEEK_POSITION_START(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_SEEK_POSITION_CURRENT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_SEEK_POSITION_END(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_STAT_IS_VALID(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_STAT_IS_DIRECTORY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_VFS_STAT_IS_CHARACTER_SPECIAL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 2)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_get_path_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_get_path_t arg2 = (retro_vfs_get_path_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_get_path_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle__p_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_get_path_set" "', argument " "2"" of type '" "retro_vfs_get_path_t""'"); 
    }
  }
  if (arg1) (arg1)->get_path = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_get_path_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_get_path_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_get_path_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_get_path_t) ((arg1)->get_path);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle__p_char);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_open_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_open_t arg2 = (retro_vfs_open_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_open_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_open_set" "', argument " "2"" of type '" "retro_vfs_open_t""'"); 
    }
  }
  if (arg1) (arg1)->open = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_open_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_open_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_open_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_open_t) ((arg1)->open);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_close_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_close_t arg2 = (retro_vfs_close_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_close_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_close_set" "', argument " "2"" of type '" "retro_vfs_close_t""'"); 
    }
  }
  if (arg1) (arg1)->close = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_close_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_close_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_close_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_close_t) ((arg1)->close);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle__int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_size_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_size_t arg2 = (retro_vfs_size_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_size_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle__int64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_size_set" "', argument " "2"" of type '" "retro_vfs_size_t""'"); 
    }
  }
  if (arg1) (arg1)->size = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_size_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_size_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_size_t) ((arg1)->size);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle__int64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_tell_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_tell_t arg2 = (retro_vfs_tell_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_tell_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle__int64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_tell_set" "', argument " "2"" of type '" "retro_vfs_tell_t""'"); 
    }
  }
  if (arg1) (arg1)->tell = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_tell_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_tell_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_tell_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_tell_t) ((arg1)->tell);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle__int64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_seek_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_seek_t arg2 = (retro_vfs_seek_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_seek_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle_int64_t_int__int64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_seek_set" "', argument " "2"" of type '" "retro_vfs_seek_t""'"); 
    }
  }
  if (arg1) (arg1)->seek = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_seek_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_seek_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_seek_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_seek_t) ((arg1)->seek);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle_int64_t_int__int64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_read_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_read_t arg2 = (retro_vfs_read_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_read_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_read_set" "', argument " "2"" of type '" "retro_vfs_read_t""'"); 
    }
  }
  if (arg1) (arg1)->read = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_read_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_read_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_read_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_read_t) ((arg1)->read);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_write_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_write_t arg2 = (retro_vfs_write_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_write_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_write_set" "', argument " "2"" of type '" "retro_vfs_write_t""'"); 
    }
  }
  if (arg1) (arg1)->write = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_write_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_write_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_write_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_write_t) ((arg1)->write);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_flush_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_flush_t arg2 = (retro_vfs_flush_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_flush_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_flush_set" "', argument " "2"" of type '" "retro_vfs_flush_t""'"); 
    }
  }
  if (arg1) (arg1)->flush = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_flush_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_flush_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_flush_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_flush_t) ((arg1)->flush);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle__int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_remove_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_remove_t arg2 = (retro_vfs_remove_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_remove_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_remove_set" "', argument " "2"" of type '" "retro_vfs_remove_t""'"); 
    }
  }
  if (arg1) (arg1)->remove = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_remove_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_remove_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_remove_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_remove_t) ((arg1)->remove);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_rename_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_rename_t arg2 = (retro_vfs_rename_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_rename_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_rename_set" "', argument " "2"" of type '" "retro_vfs_rename_t""'"); 
    }
  }
  if (arg1) (arg1)->rename = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_rename_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_rename_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_rename_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_rename_t) ((arg1)->rename);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_p_q_const__char__int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_truncate_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_truncate_t arg2 = (retro_vfs_truncate_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_truncate_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_file_handle_int64_t__int64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_truncate_set" "', argument " "2"" of type '" "retro_vfs_truncate_t""'"); 
    }
  }
  if (arg1) (arg1)->truncate = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_truncate_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_truncate_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_truncate_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_truncate_t) ((arg1)->truncate);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_file_handle_int64_t__int64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_stat_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_stat_t arg2 = (retro_vfs_stat_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_stat_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_p_int32_t__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_stat_set" "', argument " "2"" of type '" "retro_vfs_stat_t""'"); 
    }
  }
  if (arg1) (arg1)->stat = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_stat_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_stat_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_stat_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_stat_t) ((arg1)->stat);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_p_int32_t__int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_mkdir_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_mkdir_t arg2 = (retro_vfs_mkdir_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_mkdir_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_mkdir_set" "', argument " "2"" of type '" "retro_vfs_mkdir_t""'"); 
    }
  }
  if (arg1) (arg1)->mkdir = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_mkdir_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_mkdir_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_mkdir_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_mkdir_t) ((arg1)->mkdir);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_opendir_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_opendir_t arg2 = (retro_vfs_opendir_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_opendir_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_bool__p_retro_vfs_dir_handle);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_opendir_set" "', argument " "2"" of type '" "retro_vfs_opendir_t""'"); 
    }
  }
  if (arg1) (arg1)->opendir = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_opendir_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_opendir_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_opendir_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_opendir_t) ((arg1)->opendir);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_bool__p_retro_vfs_dir_handle);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_readdir_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_readdir_t arg2 = (retro_vfs_readdir_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_readdir_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_dir_handle__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_readdir_set" "', argument " "2"" of type '" "retro_vfs_readdir_t""'"); 
    }
  }
  if (arg1) (arg1)->readdir = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_readdir_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_readdir_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_readdir_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_readdir_t) ((arg1)->readdir);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_dir_handle__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_dirent_get_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_dirent_get_name_t arg2 = (retro_vfs_dirent_get_name_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_dirent_get_name_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_dir_handle__p_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_dirent_get_name_set" "', argument " "2"" of type '" "retro_vfs_dirent_get_name_t""'"); 
    }
  }
  if (arg1) (arg1)->dirent_get_name = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_dirent_get_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_dirent_get_name_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_dirent_get_name_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_dirent_get_name_t) ((arg1)->dirent_get_name);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_dir_handle__p_char);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_dirent_is_dir_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_dirent_is_dir_t arg2 = (retro_vfs_dirent_is_dir_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_dirent_is_dir_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_dir_handle__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_dirent_is_dir_set" "', argument " "2"" of type '" "retro_vfs_dirent_is_dir_t""'"); 
    }
  }
  if (arg1) (arg1)->dirent_is_dir = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_dirent_is_dir_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_dirent_is_dir_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_dirent_is_dir_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_dirent_is_dir_t) ((arg1)->dirent_is_dir);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_dir_handle__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_closedir_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  retro_vfs_closedir_t arg2 = (retro_vfs_closedir_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_closedir_set" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_vfs_dir_handle__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_vfs_interface_closedir_set" "', argument " "2"" of type '" "retro_vfs_closedir_t""'"); 
    }
  }
  if (arg1) (arg1)->closedir = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_closedir_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface *arg1 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_closedir_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_closedir_get" "', argument " "1"" of type '" "retro_vfs_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface * >(argp1);
  result = (retro_vfs_closedir_t) ((arg1)->closedir);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_vfs_dir_handle__int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_vfs_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_vfs_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_vfs_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_vfs_interface.");
  result = (retro_vfs_interface *)new retro_vfs_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_vfs_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_vfs_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_vfs_interface * arg1 = (retro_vfs_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_vfs_interface_info_required_interface_version_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface_info *arg1 = (retro_vfs_interface_info *) 0 ;
  uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_info_required_interface_version_set" "', argument " "1"" of type '" "retro_vfs_interface_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface_info * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_vfs_interface_info_required_interface_version_set" "', argument " "2"" of type '" "uint32_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_vfs_interface_info_required_interface_version_set" "', argument " "2"" of type '" "uint32_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint32_t * >(argp2));
    }
  }
  if (arg1) (arg1)->required_interface_version = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_info_required_interface_version_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface_info *arg1 = (retro_vfs_interface_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint32_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_info_required_interface_version_get" "', argument " "1"" of type '" "retro_vfs_interface_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface_info * >(argp1);
  result =  ((arg1)->required_interface_version);
  jsresult = SWIG_NewPointerObj((new uint32_t(result)), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_vfs_interface_info_iface_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_vfs_interface_info *arg1 = (retro_vfs_interface_info *) 0 ;
  retro_vfs_interface *arg2 = (retro_vfs_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_info_iface_set" "', argument " "1"" of type '" "retro_vfs_interface_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface_info * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_vfs_interface, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_vfs_interface_info_iface_set" "', argument " "2"" of type '" "retro_vfs_interface *""'"); 
  }
  arg2 = reinterpret_cast< retro_vfs_interface * >(argp2);
  if (arg1) (arg1)->iface = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_vfs_interface_info_iface_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_vfs_interface_info *arg1 = (retro_vfs_interface_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_vfs_interface *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_vfs_interface_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_vfs_interface_info_iface_get" "', argument " "1"" of type '" "retro_vfs_interface_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_vfs_interface_info * >(argp1);
  result = (retro_vfs_interface *) ((arg1)->iface);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_vfs_interface, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_vfs_interface_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_vfs_interface_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_vfs_interface_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_vfs_interface_info.");
  result = (retro_vfs_interface_info *)new retro_vfs_interface_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_vfs_interface_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_vfs_interface_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_vfs_interface_info * arg1 = (retro_vfs_interface_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_INTERFACE_VULKAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_INTERFACE_VULKAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_INTERFACE_D3D9(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_INTERFACE_D3D9));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_INTERFACE_D3D10(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_INTERFACE_D3D10));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_INTERFACE_D3D11(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_INTERFACE_D3D11));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_INTERFACE_D3D12(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_INTERFACE_D3D12));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_INTERFACE_GSKIT_PS2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_INTERFACE_GSKIT_PS2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_INTERFACE_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_INTERFACE_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_interface_interface_type_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_interface *arg1 = (retro_hw_render_interface *) 0 ;
  enum retro_hw_render_interface_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_interface_interface_type_set" "', argument " "1"" of type '" "retro_hw_render_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_interface_interface_type_set" "', argument " "2"" of type '" "enum retro_hw_render_interface_type""'");
  } 
  arg2 = static_cast< enum retro_hw_render_interface_type >(val2);
  if (arg1) (arg1)->interface_type = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_interface_interface_type_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_interface *arg1 = (retro_hw_render_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum retro_hw_render_interface_type result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_interface_interface_type_get" "', argument " "1"" of type '" "retro_hw_render_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_interface * >(argp1);
  result = (enum retro_hw_render_interface_type) ((arg1)->interface_type);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_interface_interface_version_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_interface *arg1 = (retro_hw_render_interface *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_interface_interface_version_set" "', argument " "1"" of type '" "retro_hw_render_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_interface * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_interface_interface_version_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->interface_version = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_interface_interface_version_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_interface *arg1 = (retro_hw_render_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_interface_interface_version_get" "', argument " "1"" of type '" "retro_hw_render_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_interface * >(argp1);
  result = (unsigned int) ((arg1)->interface_version);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_hw_render_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_hw_render_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_hw_render_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_hw_render_interface.");
  result = (retro_hw_render_interface *)new retro_hw_render_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_hw_render_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_hw_render_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_hw_render_interface * arg1 = (retro_hw_render_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_led_interface_set_led_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_led_interface *arg1 = (retro_led_interface *) 0 ;
  retro_set_led_state_t arg2 = (retro_set_led_state_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_led_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_led_interface_set_led_state_set" "', argument " "1"" of type '" "retro_led_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_led_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_led_interface_set_led_state_set" "', argument " "2"" of type '" "retro_set_led_state_t""'"); 
    }
  }
  if (arg1) (arg1)->set_led_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_led_interface_set_led_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_led_interface *arg1 = (retro_led_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_led_state_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_led_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_led_interface_set_led_state_get" "', argument " "1"" of type '" "retro_led_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_led_interface * >(argp1);
  result = (retro_set_led_state_t) ((arg1)->set_led_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_int_int__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_led_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_led_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_led_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_led_interface.");
  result = (retro_led_interface *)new retro_led_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_led_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_led_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_led_interface * arg1 = (retro_led_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_midi_interface_input_enabled_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  retro_midi_input_enabled_t arg2 = (retro_midi_input_enabled_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_input_enabled_set" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_midi_interface_input_enabled_set" "', argument " "2"" of type '" "retro_midi_input_enabled_t""'"); 
    }
  }
  if (arg1) (arg1)->input_enabled = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_midi_interface_input_enabled_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_midi_input_enabled_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_input_enabled_get" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  result = (retro_midi_input_enabled_t) ((arg1)->input_enabled);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_midi_interface_output_enabled_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  retro_midi_output_enabled_t arg2 = (retro_midi_output_enabled_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_output_enabled_set" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_midi_interface_output_enabled_set" "', argument " "2"" of type '" "retro_midi_output_enabled_t""'"); 
    }
  }
  if (arg1) (arg1)->output_enabled = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_midi_interface_output_enabled_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_midi_output_enabled_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_output_enabled_get" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  result = (retro_midi_output_enabled_t) ((arg1)->output_enabled);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_midi_interface_read_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  retro_midi_read_t arg2 = (retro_midi_read_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_read_set" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_uint8_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_midi_interface_read_set" "', argument " "2"" of type '" "retro_midi_read_t""'"); 
    }
  }
  if (arg1) (arg1)->read = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_midi_interface_read_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_midi_read_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_read_get" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  result = (retro_midi_read_t) ((arg1)->read);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_uint8_t__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_midi_interface_write_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  retro_midi_write_t arg2 = (retro_midi_write_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_write_set" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_uint8_t_uint32_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_midi_interface_write_set" "', argument " "2"" of type '" "retro_midi_write_t""'"); 
    }
  }
  if (arg1) (arg1)->write = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_midi_interface_write_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_midi_write_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_write_get" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  result = (retro_midi_write_t) ((arg1)->write);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_uint8_t_uint32_t__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_midi_interface_flush_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  retro_midi_flush_t arg2 = (retro_midi_flush_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_flush_set" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_midi_interface_flush_set" "', argument " "2"" of type '" "retro_midi_flush_t""'"); 
    }
  }
  if (arg1) (arg1)->flush = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_midi_interface_flush_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_midi_interface *arg1 = (retro_midi_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_midi_flush_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_midi_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_midi_interface_flush_get" "', argument " "1"" of type '" "retro_midi_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_midi_interface * >(argp1);
  result = (retro_midi_flush_t) ((arg1)->flush);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_midi_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_midi_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_midi_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_midi_interface.");
  result = (retro_midi_interface *)new retro_midi_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_midi_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_midi_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_midi_interface * arg1 = (retro_midi_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_VULKAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_VULKAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_context_negotiation_interface_interface_type_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_context_negotiation_interface *arg1 = (retro_hw_render_context_negotiation_interface *) 0 ;
  enum retro_hw_render_context_negotiation_interface_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_context_negotiation_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_context_negotiation_interface_interface_type_set" "', argument " "1"" of type '" "retro_hw_render_context_negotiation_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_context_negotiation_interface * >(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_context_negotiation_interface_interface_type_set" "', argument " "2"" of type '" "enum retro_hw_render_context_negotiation_interface_type""'");
  } 
  arg2 = static_cast< enum retro_hw_render_context_negotiation_interface_type >(val2);
  if (arg1) (arg1)->interface_type = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_context_negotiation_interface_interface_type_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_context_negotiation_interface *arg1 = (retro_hw_render_context_negotiation_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum retro_hw_render_context_negotiation_interface_type result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_context_negotiation_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_context_negotiation_interface_interface_type_get" "', argument " "1"" of type '" "retro_hw_render_context_negotiation_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_context_negotiation_interface * >(argp1);
  result = (enum retro_hw_render_context_negotiation_interface_type) ((arg1)->interface_type);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_context_negotiation_interface_interface_version_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_context_negotiation_interface *arg1 = (retro_hw_render_context_negotiation_interface *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_context_negotiation_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_context_negotiation_interface_interface_version_set" "', argument " "1"" of type '" "retro_hw_render_context_negotiation_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_context_negotiation_interface * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_context_negotiation_interface_interface_version_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->interface_version = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_context_negotiation_interface_interface_version_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_context_negotiation_interface *arg1 = (retro_hw_render_context_negotiation_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_context_negotiation_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_context_negotiation_interface_interface_version_get" "', argument " "1"" of type '" "retro_hw_render_context_negotiation_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_context_negotiation_interface * >(argp1);
  result = (unsigned int) ((arg1)->interface_version);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_hw_render_context_negotiation_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_hw_render_context_negotiation_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_hw_render_context_negotiation_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_hw_render_context_negotiation_interface.");
  result = (retro_hw_render_context_negotiation_interface *)new retro_hw_render_context_negotiation_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_hw_render_context_negotiation_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_hw_render_context_negotiation_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_hw_render_context_negotiation_interface * arg1 = (retro_hw_render_context_negotiation_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_SERIALIZATION_QUIRK_INCOMPLETE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SERIALIZATION_QUIRK_MUST_INITIALIZE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SERIALIZATION_QUIRK_CORE_VARIABLE_SIZE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 2)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SERIALIZATION_QUIRK_FRONT_VARIABLE_SIZE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 3)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SERIALIZATION_QUIRK_SINGLE_SESSION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 4)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SERIALIZATION_QUIRK_ENDIAN_DEPENDENT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 5)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SERIALIZATION_QUIRK_PLATFORM_DEPENDENT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 6)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_CONST(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_BIGENDIAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_SYSTEM_RAM(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 2)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_SAVE_RAM(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 3)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_VIDEO_RAM(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 4)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_ALIGN_2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 16)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_ALIGN_4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((2 << 16)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_ALIGN_8(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((3 << 16)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_MINSIZE_2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 24)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_MINSIZE_4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((2 << 24)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMDESC_MINSIZE_8(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((3 << 24)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_flags_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_flags_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_memory_descriptor_flags_set" "', argument " "2"" of type '" "uint64_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_memory_descriptor_flags_set" "', argument " "2"" of type '" "uint64_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint64_t * >(argp2));
    }
  }
  if (arg1) (arg1)->flags = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_flags_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_flags_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result =  ((arg1)->flags);
  jsresult = SWIG_NewPointerObj((new uint64_t(result)), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_ptr_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_ptr_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  res2 = SWIG_ConvertPtr(value,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_memory_descriptor_ptr_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->ptr = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_ptr_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_ptr_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result = (void *) ((arg1)->ptr);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_offset_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_offset_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_memory_descriptor_offset_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->offset = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_offset_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_offset_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result =  ((arg1)->offset);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_start_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_start_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_memory_descriptor_start_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->start = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_start_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_start_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result =  ((arg1)->start);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_select_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_select_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_memory_descriptor_select_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->select = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_select_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_select_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result =  ((arg1)->select);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_disconnect_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_disconnect_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_memory_descriptor_disconnect_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->disconnect = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_disconnect_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_disconnect_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result =  ((arg1)->disconnect);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_len_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_len_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_memory_descriptor_len_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->len = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_len_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_len_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result =  ((arg1)->len);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_descriptor_addrspace_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_addrspace_set" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_memory_descriptor_addrspace_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->addrspace = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->addrspace = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_descriptor_addrspace_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_descriptor *arg1 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_descriptor_addrspace_get" "', argument " "1"" of type '" "retro_memory_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_descriptor * >(argp1);
  result = (char *) ((arg1)->addrspace);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_memory_descriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_memory_descriptor *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_memory_descriptor.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_memory_descriptor.");
  result = (retro_memory_descriptor *)new retro_memory_descriptor();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_memory_descriptor, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_memory_descriptor(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_memory_descriptor * arg1 = (retro_memory_descriptor *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_memory_map_descriptors_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_map *arg1 = (retro_memory_map *) 0 ;
  retro_memory_descriptor *arg2 = (retro_memory_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_map_descriptors_set" "', argument " "1"" of type '" "retro_memory_map *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_map * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_memory_descriptor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_memory_map_descriptors_set" "', argument " "2"" of type '" "retro_memory_descriptor const *""'"); 
  }
  arg2 = reinterpret_cast< retro_memory_descriptor * >(argp2);
  if (arg1) (arg1)->descriptors = (retro_memory_descriptor const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_map_descriptors_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_map *arg1 = (retro_memory_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_memory_descriptor *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_map_descriptors_get" "', argument " "1"" of type '" "retro_memory_map *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_map * >(argp1);
  result = (retro_memory_descriptor *) ((arg1)->descriptors);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_memory_descriptor, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_memory_map_num_descriptors_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_memory_map *arg1 = (retro_memory_map *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_map_num_descriptors_set" "', argument " "1"" of type '" "retro_memory_map *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_map * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_memory_map_num_descriptors_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->num_descriptors = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_memory_map_num_descriptors_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_memory_map *arg1 = (retro_memory_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_memory_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_memory_map_num_descriptors_get" "', argument " "1"" of type '" "retro_memory_map *""'"); 
  }
  arg1 = reinterpret_cast< retro_memory_map * >(argp1);
  result = (unsigned int) ((arg1)->num_descriptors);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_memory_map(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_memory_map *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_memory_map.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_memory_map.");
  result = (retro_memory_map *)new retro_memory_map();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_memory_map, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_memory_map(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_memory_map * arg1 = (retro_memory_map *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_controller_description_desc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_controller_description *arg1 = (retro_controller_description *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_description, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_description_desc_set" "', argument " "1"" of type '" "retro_controller_description *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_description * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_controller_description_desc_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->desc = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->desc = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_controller_description_desc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_controller_description *arg1 = (retro_controller_description *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_description, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_description_desc_get" "', argument " "1"" of type '" "retro_controller_description *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_description * >(argp1);
  result = (char *) ((arg1)->desc);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_controller_description_id_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_controller_description *arg1 = (retro_controller_description *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_description, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_description_id_set" "', argument " "1"" of type '" "retro_controller_description *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_description * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_controller_description_id_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->id = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_controller_description_id_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_controller_description *arg1 = (retro_controller_description *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_description, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_description_id_get" "', argument " "1"" of type '" "retro_controller_description *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_description * >(argp1);
  result = (unsigned int) ((arg1)->id);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_controller_description(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_controller_description *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_controller_description.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_controller_description.");
  result = (retro_controller_description *)new retro_controller_description();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_controller_description, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_controller_description(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_controller_description * arg1 = (retro_controller_description *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_controller_info_types_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_controller_info *arg1 = (retro_controller_info *) 0 ;
  retro_controller_description *arg2 = (retro_controller_description *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_info_types_set" "', argument " "1"" of type '" "retro_controller_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_info * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_controller_description, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_controller_info_types_set" "', argument " "2"" of type '" "retro_controller_description const *""'"); 
  }
  arg2 = reinterpret_cast< retro_controller_description * >(argp2);
  if (arg1) (arg1)->types = (retro_controller_description const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_controller_info_types_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_controller_info *arg1 = (retro_controller_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_controller_description *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_info_types_get" "', argument " "1"" of type '" "retro_controller_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_info * >(argp1);
  result = (retro_controller_description *) ((arg1)->types);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_controller_description, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_controller_info_num_types_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_controller_info *arg1 = (retro_controller_info *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_info_num_types_set" "', argument " "1"" of type '" "retro_controller_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_info * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_controller_info_num_types_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->num_types = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_controller_info_num_types_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_controller_info *arg1 = (retro_controller_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_controller_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_controller_info_num_types_get" "', argument " "1"" of type '" "retro_controller_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_controller_info * >(argp1);
  result = (unsigned int) ((arg1)->num_types);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_controller_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_controller_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_controller_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_controller_info.");
  result = (retro_controller_info *)new retro_controller_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_controller_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_controller_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_controller_info * arg1 = (retro_controller_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_subsystem_memory_info_extension_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_memory_info *arg1 = (retro_subsystem_memory_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_memory_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_memory_info_extension_set" "', argument " "1"" of type '" "retro_subsystem_memory_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_memory_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_subsystem_memory_info_extension_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->extension = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->extension = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_memory_info_extension_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_memory_info *arg1 = (retro_subsystem_memory_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_memory_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_memory_info_extension_get" "', argument " "1"" of type '" "retro_subsystem_memory_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_memory_info * >(argp1);
  result = (char *) ((arg1)->extension);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_memory_info_type_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_memory_info *arg1 = (retro_subsystem_memory_info *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_memory_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_memory_info_type_set" "', argument " "1"" of type '" "retro_subsystem_memory_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_memory_info * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_subsystem_memory_info_type_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->type = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_memory_info_type_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_memory_info *arg1 = (retro_subsystem_memory_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_memory_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_memory_info_type_get" "', argument " "1"" of type '" "retro_subsystem_memory_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_memory_info * >(argp1);
  result = (unsigned int) ((arg1)->type);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_subsystem_memory_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_subsystem_memory_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_subsystem_memory_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_subsystem_memory_info.");
  result = (retro_subsystem_memory_info *)new retro_subsystem_memory_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_subsystem_memory_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_subsystem_memory_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_subsystem_memory_info * arg1 = (retro_subsystem_memory_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_subsystem_rom_info_desc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_desc_set" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_subsystem_rom_info_desc_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->desc = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->desc = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_rom_info_desc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_desc_get" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  result = (char *) ((arg1)->desc);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_rom_info_valid_extensions_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_valid_extensions_set" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_subsystem_rom_info_valid_extensions_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->valid_extensions = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->valid_extensions = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_rom_info_valid_extensions_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_valid_extensions_get" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  result = (char *) ((arg1)->valid_extensions);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_rom_info_need_fullpath_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_need_fullpath_set" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_subsystem_rom_info_need_fullpath_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->need_fullpath = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_rom_info_need_fullpath_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_need_fullpath_get" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  result = (bool) ((arg1)->need_fullpath);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_rom_info_block_extract_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_block_extract_set" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_subsystem_rom_info_block_extract_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->block_extract = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_rom_info_block_extract_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_block_extract_get" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  result = (bool) ((arg1)->block_extract);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_rom_info_required_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_required_set" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_subsystem_rom_info_required_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->required = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_rom_info_required_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_required_get" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  result = (bool) ((arg1)->required);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_rom_info_memory_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  retro_subsystem_memory_info *arg2 = (retro_subsystem_memory_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_memory_set" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_subsystem_memory_info, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_subsystem_rom_info_memory_set" "', argument " "2"" of type '" "retro_subsystem_memory_info const *""'"); 
  }
  arg2 = reinterpret_cast< retro_subsystem_memory_info * >(argp2);
  if (arg1) (arg1)->memory = (retro_subsystem_memory_info const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_rom_info_memory_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_subsystem_memory_info *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_memory_get" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  result = (retro_subsystem_memory_info *) ((arg1)->memory);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_subsystem_memory_info, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_rom_info_num_memory_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_num_memory_set" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_subsystem_rom_info_num_memory_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->num_memory = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_rom_info_num_memory_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_rom_info *arg1 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_rom_info_num_memory_get" "', argument " "1"" of type '" "retro_subsystem_rom_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_rom_info * >(argp1);
  result = (unsigned int) ((arg1)->num_memory);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_subsystem_rom_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_subsystem_rom_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_subsystem_rom_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_subsystem_rom_info.");
  result = (retro_subsystem_rom_info *)new retro_subsystem_rom_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_subsystem_rom_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_subsystem_rom_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_subsystem_rom_info * arg1 = (retro_subsystem_rom_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_subsystem_info_desc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_desc_set" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_subsystem_info_desc_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->desc = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->desc = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_info_desc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_desc_get" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  result = (char *) ((arg1)->desc);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_info_ident_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_ident_set" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_subsystem_info_ident_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->ident = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->ident = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_info_ident_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_ident_get" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  result = (char *) ((arg1)->ident);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_info_roms_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  retro_subsystem_rom_info *arg2 = (retro_subsystem_rom_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_roms_set" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_subsystem_rom_info, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_subsystem_info_roms_set" "', argument " "2"" of type '" "retro_subsystem_rom_info const *""'"); 
  }
  arg2 = reinterpret_cast< retro_subsystem_rom_info * >(argp2);
  if (arg1) (arg1)->roms = (retro_subsystem_rom_info const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_info_roms_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_subsystem_rom_info *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_roms_get" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  result = (retro_subsystem_rom_info *) ((arg1)->roms);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_subsystem_rom_info, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_info_num_roms_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_num_roms_set" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_subsystem_info_num_roms_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->num_roms = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_info_num_roms_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_num_roms_get" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  result = (unsigned int) ((arg1)->num_roms);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_subsystem_info_id_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_id_set" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_subsystem_info_id_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->id = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_subsystem_info_id_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_subsystem_info *arg1 = (retro_subsystem_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_subsystem_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_subsystem_info_id_get" "', argument " "1"" of type '" "retro_subsystem_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_subsystem_info * >(argp1);
  result = (unsigned int) ((arg1)->id);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_subsystem_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_subsystem_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_subsystem_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_subsystem_info.");
  result = (retro_subsystem_info *)new retro_subsystem_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_subsystem_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_subsystem_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_subsystem_info * arg1 = (retro_subsystem_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_get_proc_address_interface_get_proc_address_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_get_proc_address_interface *arg1 = (retro_get_proc_address_interface *) 0 ;
  retro_get_proc_address_t arg2 = (retro_get_proc_address_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_get_proc_address_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_get_proc_address_interface_get_proc_address_set" "', argument " "1"" of type '" "retro_get_proc_address_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_get_proc_address_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_get_proc_address_interface_get_proc_address_set" "', argument " "2"" of type '" "retro_get_proc_address_t""'"); 
    }
  }
  if (arg1) (arg1)->get_proc_address = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_get_proc_address_interface_get_proc_address_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_get_proc_address_interface *arg1 = (retro_get_proc_address_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_proc_address_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_get_proc_address_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_get_proc_address_interface_get_proc_address_get" "', argument " "1"" of type '" "retro_get_proc_address_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_get_proc_address_interface * >(argp1);
  result = (retro_get_proc_address_t) ((arg1)->get_proc_address);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_get_proc_address_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_get_proc_address_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_get_proc_address_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_get_proc_address_interface.");
  result = (retro_get_proc_address_interface *)new retro_get_proc_address_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_get_proc_address_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_get_proc_address_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_get_proc_address_interface * arg1 = (retro_get_proc_address_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_LOG_DEBUG(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LOG_DEBUG));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LOG_INFO(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LOG_INFO));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LOG_WARN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LOG_WARN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LOG_ERROR(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LOG_ERROR));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_LOG_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_LOG_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_log_callback_log_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_log_callback *arg1 = (retro_log_callback *) 0 ;
  retro_log_printf_t arg2 = (retro_log_printf_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_log_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_log_callback_log_set" "', argument " "1"" of type '" "retro_log_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_log_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_enum_retro_log_level_p_q_const__char_v_______void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_log_callback_log_set" "', argument " "2"" of type '" "retro_log_printf_t""'"); 
    }
  }
  if (arg1) (arg1)->log = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_log_callback_log_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_log_callback *arg1 = (retro_log_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_log_printf_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_log_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_log_callback_log_get" "', argument " "1"" of type '" "retro_log_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_log_callback * >(argp1);
  result = (retro_log_printf_t) ((arg1)->log);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_enum_retro_log_level_p_q_const__char_v_______void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_log_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_log_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_log_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_log_callback.");
  result = (retro_log_callback *)new retro_log_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_log_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_log_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_log_callback * arg1 = (retro_log_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_SSE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_SSE2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_VMX(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 2)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_VMX128(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 3)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_AVX(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 4)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_NEON(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 5)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_SSE3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 6)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_SSSE3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 7)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_MMX(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 8)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_MMXEXT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 9)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_SSE4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 10)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_SSE42(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 11)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_AVX2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 12)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_VFPU(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 13)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_PS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 14)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_AES(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 15)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_VFPV3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 16)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_VFPV4(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 17)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_POPCNT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 18)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_MOVBE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 19)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_CMOV(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 20)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SIMD_ASIMD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 21)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_counter_ident_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_ident_set" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_perf_counter_ident_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->ident = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->ident = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_counter_ident_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_ident_get" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  result = (char *) ((arg1)->ident);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_counter_start_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  retro_perf_tick_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_start_set" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_perf_counter_start_set" "', argument " "2"" of type '" "retro_perf_tick_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_perf_counter_start_set" "', argument " "2"" of type '" "retro_perf_tick_t""'");
    } else {
      arg2 = *(reinterpret_cast< retro_perf_tick_t * >(argp2));
    }
  }
  if (arg1) (arg1)->start = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_counter_start_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_tick_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_start_get" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  result =  ((arg1)->start);
  jsresult = SWIG_NewPointerObj((new retro_perf_tick_t(result)), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_counter_total_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  retro_perf_tick_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_total_set" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_perf_counter_total_set" "', argument " "2"" of type '" "retro_perf_tick_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_perf_counter_total_set" "', argument " "2"" of type '" "retro_perf_tick_t""'");
    } else {
      arg2 = *(reinterpret_cast< retro_perf_tick_t * >(argp2));
    }
  }
  if (arg1) (arg1)->total = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_counter_total_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_tick_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_total_get" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  result =  ((arg1)->total);
  jsresult = SWIG_NewPointerObj((new retro_perf_tick_t(result)), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_counter_call_cnt_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  retro_perf_tick_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_call_cnt_set" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_perf_counter_call_cnt_set" "', argument " "2"" of type '" "retro_perf_tick_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_perf_counter_call_cnt_set" "', argument " "2"" of type '" "retro_perf_tick_t""'");
    } else {
      arg2 = *(reinterpret_cast< retro_perf_tick_t * >(argp2));
    }
  }
  if (arg1) (arg1)->call_cnt = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_counter_call_cnt_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_tick_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_call_cnt_get" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  result =  ((arg1)->call_cnt);
  jsresult = SWIG_NewPointerObj((new retro_perf_tick_t(result)), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_counter_registered_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_registered_set" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_perf_counter_registered_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->registered = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_counter_registered_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_counter *arg1 = (retro_perf_counter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_counter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_counter_registered_get" "', argument " "1"" of type '" "retro_perf_counter *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_counter * >(argp1);
  result = (bool) ((arg1)->registered);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_perf_counter(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_perf_counter *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_perf_counter.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_perf_counter.");
  result = (retro_perf_counter *)new retro_perf_counter();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_perf_counter, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_perf_counter(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_perf_counter * arg1 = (retro_perf_counter *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_perf_callback_get_time_usec_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  retro_perf_get_time_usec_t arg2 = (retro_perf_get_time_usec_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_get_time_usec_set" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__int64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_perf_callback_get_time_usec_set" "', argument " "2"" of type '" "retro_perf_get_time_usec_t""'"); 
    }
  }
  if (arg1) (arg1)->get_time_usec = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_callback_get_time_usec_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_get_time_usec_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_get_time_usec_get" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  result = (retro_perf_get_time_usec_t) ((arg1)->get_time_usec);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__int64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_callback_get_cpu_features_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  retro_get_cpu_features_t arg2 = (retro_get_cpu_features_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_get_cpu_features_set" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__uint64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_perf_callback_get_cpu_features_set" "', argument " "2"" of type '" "retro_get_cpu_features_t""'"); 
    }
  }
  if (arg1) (arg1)->get_cpu_features = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_callback_get_cpu_features_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_cpu_features_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_get_cpu_features_get" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  result = (retro_get_cpu_features_t) ((arg1)->get_cpu_features);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__uint64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_callback_get_perf_counter_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  retro_perf_get_counter_t arg2 = (retro_perf_get_counter_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_get_perf_counter_set" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__uint64_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_perf_callback_get_perf_counter_set" "', argument " "2"" of type '" "retro_perf_get_counter_t""'"); 
    }
  }
  if (arg1) (arg1)->get_perf_counter = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_callback_get_perf_counter_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_get_counter_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_get_perf_counter_get" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  result = (retro_perf_get_counter_t) ((arg1)->get_perf_counter);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__uint64_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_callback_perf_register_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  retro_perf_register_t arg2 = (retro_perf_register_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_register_set" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_perf_counter__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_perf_callback_perf_register_set" "', argument " "2"" of type '" "retro_perf_register_t""'"); 
    }
  }
  if (arg1) (arg1)->perf_register = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_callback_perf_register_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_register_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_register_get" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  result = (retro_perf_register_t) ((arg1)->perf_register);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_perf_counter__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_callback_perf_start_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  retro_perf_start_t arg2 = (retro_perf_start_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_start_set" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_perf_counter__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_perf_callback_perf_start_set" "', argument " "2"" of type '" "retro_perf_start_t""'"); 
    }
  }
  if (arg1) (arg1)->perf_start = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_callback_perf_start_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_start_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_start_get" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  result = (retro_perf_start_t) ((arg1)->perf_start);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_perf_counter__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_callback_perf_stop_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  retro_perf_stop_t arg2 = (retro_perf_stop_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_stop_set" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_retro_perf_counter__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_perf_callback_perf_stop_set" "', argument " "2"" of type '" "retro_perf_stop_t""'"); 
    }
  }
  if (arg1) (arg1)->perf_stop = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_callback_perf_stop_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_stop_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_stop_get" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  result = (retro_perf_stop_t) ((arg1)->perf_stop);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_retro_perf_counter__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_perf_callback_perf_log_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  retro_perf_log_t arg2 = (retro_perf_log_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_log_set" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_perf_callback_perf_log_set" "', argument " "2"" of type '" "retro_perf_log_t""'"); 
    }
  }
  if (arg1) (arg1)->perf_log = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_perf_callback_perf_log_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_perf_callback *arg1 = (retro_perf_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_perf_log_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_perf_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_perf_callback_perf_log_get" "', argument " "1"" of type '" "retro_perf_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_perf_callback * >(argp1);
  result = (retro_perf_log_t) ((arg1)->perf_log);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_perf_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_perf_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_perf_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_perf_callback.");
  result = (retro_perf_callback *)new retro_perf_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_perf_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_perf_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_perf_callback * arg1 = (retro_perf_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ACCELEROMETER_ENABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_SENSOR_ACCELEROMETER_ENABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ACCELEROMETER_DISABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_SENSOR_ACCELEROMETER_DISABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_GYROSCOPE_ENABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_SENSOR_GYROSCOPE_ENABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_GYROSCOPE_DISABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_SENSOR_GYROSCOPE_DISABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ILLUMINANCE_ENABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_SENSOR_ILLUMINANCE_ENABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ILLUMINANCE_DISABLE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_SENSOR_ILLUMINANCE_DISABLE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_SENSOR_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ACCELEROMETER_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ACCELEROMETER_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ACCELEROMETER_Z(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_GYROSCOPE_X(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_GYROSCOPE_Y(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_GYROSCOPE_Z(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_SENSOR_ILLUMINANCE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_sensor_interface_set_sensor_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_sensor_interface *arg1 = (retro_sensor_interface *) 0 ;
  retro_set_sensor_state_t arg2 = (retro_set_sensor_state_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_sensor_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_sensor_interface_set_sensor_state_set" "', argument " "1"" of type '" "retro_sensor_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_sensor_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_sensor_interface_set_sensor_state_set" "', argument " "2"" of type '" "retro_set_sensor_state_t""'"); 
    }
  }
  if (arg1) (arg1)->set_sensor_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_sensor_interface_set_sensor_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_sensor_interface *arg1 = (retro_sensor_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_sensor_state_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_sensor_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_sensor_interface_set_sensor_state_get" "', argument " "1"" of type '" "retro_sensor_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_sensor_interface * >(argp1);
  result = (retro_set_sensor_state_t) ((arg1)->set_sensor_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_sensor_interface_get_sensor_input_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_sensor_interface *arg1 = (retro_sensor_interface *) 0 ;
  retro_sensor_get_input_t arg2 = (retro_sensor_get_input_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_sensor_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_sensor_interface_get_sensor_input_set" "', argument " "1"" of type '" "retro_sensor_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_sensor_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_unsigned_int__float);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_sensor_interface_get_sensor_input_set" "', argument " "2"" of type '" "retro_sensor_get_input_t""'"); 
    }
  }
  if (arg1) (arg1)->get_sensor_input = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_sensor_interface_get_sensor_input_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_sensor_interface *arg1 = (retro_sensor_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_sensor_get_input_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_sensor_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_sensor_interface_get_sensor_input_get" "', argument " "1"" of type '" "retro_sensor_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_sensor_interface * >(argp1);
  result = (retro_sensor_get_input_t) ((arg1)->get_sensor_input);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_unsigned_int__float);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_sensor_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_sensor_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_sensor_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_sensor_interface.");
  result = (retro_sensor_interface *)new retro_sensor_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_sensor_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_sensor_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_sensor_interface * arg1 = (retro_sensor_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_CAMERA_BUFFER_OPENGL_TEXTURE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_CAMERA_BUFFER_OPENGL_TEXTURE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_CAMERA_BUFFER_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_CAMERA_BUFFER_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_caps_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  uint64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_caps_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_uint64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_camera_callback_caps_set" "', argument " "2"" of type '" "uint64_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_camera_callback_caps_set" "', argument " "2"" of type '" "uint64_t""'");
    } else {
      arg2 = *(reinterpret_cast< uint64_t * >(argp2));
    }
  }
  if (arg1) (arg1)->caps = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_caps_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  uint64_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_caps_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result =  ((arg1)->caps);
  jsresult = SWIG_NewPointerObj((new uint64_t(result)), SWIGTYPE_p_uint64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_width_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_width_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_camera_callback_width_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->width = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_width_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_width_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (unsigned int) ((arg1)->width);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_height_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_height_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_camera_callback_height_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->height = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_height_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_height_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (unsigned int) ((arg1)->height);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_start_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  retro_camera_start_t arg2 = (retro_camera_start_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_start_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_camera_callback_start_set" "', argument " "2"" of type '" "retro_camera_start_t""'"); 
    }
  }
  if (arg1) (arg1)->start = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_start_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_camera_start_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_start_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (retro_camera_start_t) ((arg1)->start);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_stop_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  retro_camera_stop_t arg2 = (retro_camera_stop_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_stop_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_camera_callback_stop_set" "', argument " "2"" of type '" "retro_camera_stop_t""'"); 
    }
  }
  if (arg1) (arg1)->stop = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_stop_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_camera_stop_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_stop_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (retro_camera_stop_t) ((arg1)->stop);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_frame_raw_framebuffer_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  retro_camera_frame_raw_framebuffer_t arg2 = (retro_camera_frame_raw_framebuffer_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_frame_raw_framebuffer_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_camera_callback_frame_raw_framebuffer_set" "', argument " "2"" of type '" "retro_camera_frame_raw_framebuffer_t""'"); 
    }
  }
  if (arg1) (arg1)->frame_raw_framebuffer = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_frame_raw_framebuffer_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_camera_frame_raw_framebuffer_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_frame_raw_framebuffer_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (retro_camera_frame_raw_framebuffer_t) ((arg1)->frame_raw_framebuffer);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_frame_opengl_texture_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  retro_camera_frame_opengl_texture_t arg2 = (retro_camera_frame_opengl_texture_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_frame_opengl_texture_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_camera_callback_frame_opengl_texture_set" "', argument " "2"" of type '" "retro_camera_frame_opengl_texture_t""'"); 
    }
  }
  if (arg1) (arg1)->frame_opengl_texture = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_frame_opengl_texture_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_camera_frame_opengl_texture_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_frame_opengl_texture_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (retro_camera_frame_opengl_texture_t) ((arg1)->frame_opengl_texture);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_initialized_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  retro_camera_lifetime_status_t arg2 = (retro_camera_lifetime_status_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_initialized_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_camera_callback_initialized_set" "', argument " "2"" of type '" "retro_camera_lifetime_status_t""'"); 
    }
  }
  if (arg1) (arg1)->initialized = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_initialized_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_camera_lifetime_status_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_initialized_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (retro_camera_lifetime_status_t) ((arg1)->initialized);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_camera_callback_deinitialized_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  retro_camera_lifetime_status_t arg2 = (retro_camera_lifetime_status_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_deinitialized_set" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_camera_callback_deinitialized_set" "', argument " "2"" of type '" "retro_camera_lifetime_status_t""'"); 
    }
  }
  if (arg1) (arg1)->deinitialized = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_camera_callback_deinitialized_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_camera_callback *arg1 = (retro_camera_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_camera_lifetime_status_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_camera_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_camera_callback_deinitialized_get" "', argument " "1"" of type '" "retro_camera_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_camera_callback * >(argp1);
  result = (retro_camera_lifetime_status_t) ((arg1)->deinitialized);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_camera_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_camera_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_camera_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_camera_callback.");
  result = (retro_camera_callback *)new retro_camera_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_camera_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_camera_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_camera_callback * arg1 = (retro_camera_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_location_callback_start_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  retro_location_start_t arg2 = (retro_location_start_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_start_set" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_location_callback_start_set" "', argument " "2"" of type '" "retro_location_start_t""'"); 
    }
  }
  if (arg1) (arg1)->start = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_location_callback_start_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_location_start_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_start_get" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  result = (retro_location_start_t) ((arg1)->start);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_location_callback_stop_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  retro_location_stop_t arg2 = (retro_location_stop_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_stop_set" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_location_callback_stop_set" "', argument " "2"" of type '" "retro_location_stop_t""'"); 
    }
  }
  if (arg1) (arg1)->stop = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_location_callback_stop_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_location_stop_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_stop_get" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  result = (retro_location_stop_t) ((arg1)->stop);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_location_callback_get_position_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  retro_location_get_position_t arg2 = (retro_location_get_position_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_get_position_set" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_double_p_double_p_double_p_double__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_location_callback_get_position_set" "', argument " "2"" of type '" "retro_location_get_position_t""'"); 
    }
  }
  if (arg1) (arg1)->get_position = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_location_callback_get_position_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_location_get_position_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_get_position_get" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  result = (retro_location_get_position_t) ((arg1)->get_position);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_double_p_double_p_double_p_double__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_location_callback_set_interval_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  retro_location_set_interval_t arg2 = (retro_location_set_interval_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_set_interval_set" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_location_callback_set_interval_set" "', argument " "2"" of type '" "retro_location_set_interval_t""'"); 
    }
  }
  if (arg1) (arg1)->set_interval = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_location_callback_set_interval_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_location_set_interval_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_set_interval_get" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  result = (retro_location_set_interval_t) ((arg1)->set_interval);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_location_callback_initialized_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  retro_location_lifetime_status_t arg2 = (retro_location_lifetime_status_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_initialized_set" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_location_callback_initialized_set" "', argument " "2"" of type '" "retro_location_lifetime_status_t""'"); 
    }
  }
  if (arg1) (arg1)->initialized = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_location_callback_initialized_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_location_lifetime_status_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_initialized_get" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  result = (retro_location_lifetime_status_t) ((arg1)->initialized);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_location_callback_deinitialized_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  retro_location_lifetime_status_t arg2 = (retro_location_lifetime_status_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_deinitialized_set" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_location_callback_deinitialized_set" "', argument " "2"" of type '" "retro_location_lifetime_status_t""'"); 
    }
  }
  if (arg1) (arg1)->deinitialized = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_location_callback_deinitialized_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_location_callback *arg1 = (retro_location_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_location_lifetime_status_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_location_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_location_callback_deinitialized_get" "', argument " "1"" of type '" "retro_location_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_location_callback * >(argp1);
  result = (retro_location_lifetime_status_t) ((arg1)->deinitialized);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_location_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_location_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_location_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_location_callback.");
  result = (retro_location_callback *)new retro_location_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_location_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_location_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_location_callback * arg1 = (retro_location_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_RUMBLE_STRONG(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_RUMBLE_STRONG));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_RUMBLE_WEAK(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_RUMBLE_WEAK));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_RUMBLE_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_RUMBLE_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_rumble_interface_set_rumble_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_rumble_interface *arg1 = (retro_rumble_interface *) 0 ;
  retro_set_rumble_state_t arg2 = (retro_set_rumble_state_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_rumble_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_rumble_interface_set_rumble_state_set" "', argument " "1"" of type '" "retro_rumble_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_rumble_interface * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_rumble_interface_set_rumble_state_set" "', argument " "2"" of type '" "retro_set_rumble_state_t""'"); 
    }
  }
  if (arg1) (arg1)->set_rumble_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_rumble_interface_set_rumble_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_rumble_interface *arg1 = (retro_rumble_interface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_rumble_state_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_rumble_interface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_rumble_interface_set_rumble_state_get" "', argument " "1"" of type '" "retro_rumble_interface *""'"); 
  }
  arg1 = reinterpret_cast< retro_rumble_interface * >(argp1);
  result = (retro_set_rumble_state_t) ((arg1)->set_rumble_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_rumble_interface(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_rumble_interface *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_rumble_interface.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_rumble_interface.");
  result = (retro_rumble_interface *)new retro_rumble_interface();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_rumble_interface, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_rumble_interface(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_rumble_interface * arg1 = (retro_rumble_interface *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_audio_callback_callback_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_audio_callback *arg1 = (retro_audio_callback *) 0 ;
  retro_audio_callback_t arg2 = (retro_audio_callback_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_audio_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_audio_callback_callback_set" "', argument " "1"" of type '" "retro_audio_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_audio_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_audio_callback_callback_set" "', argument " "2"" of type '" "retro_audio_callback_t""'"); 
    }
  }
  if (arg1) (arg1)->callback = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_audio_callback_callback_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_audio_callback *arg1 = (retro_audio_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_audio_callback_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_audio_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_audio_callback_callback_get" "', argument " "1"" of type '" "retro_audio_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_audio_callback * >(argp1);
  result = (retro_audio_callback_t) ((arg1)->callback);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_audio_callback_set_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_audio_callback *arg1 = (retro_audio_callback *) 0 ;
  retro_audio_set_state_callback_t arg2 = (retro_audio_set_state_callback_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_audio_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_audio_callback_set_state_set" "', argument " "1"" of type '" "retro_audio_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_audio_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_bool__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_audio_callback_set_state_set" "', argument " "2"" of type '" "retro_audio_set_state_callback_t""'"); 
    }
  }
  if (arg1) (arg1)->set_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_audio_callback_set_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_audio_callback *arg1 = (retro_audio_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_audio_set_state_callback_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_audio_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_audio_callback_set_state_get" "', argument " "1"" of type '" "retro_audio_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_audio_callback * >(argp1);
  result = (retro_audio_set_state_callback_t) ((arg1)->set_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_bool__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_audio_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_audio_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_audio_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_audio_callback.");
  result = (retro_audio_callback *)new retro_audio_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_audio_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_audio_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_audio_callback * arg1 = (retro_audio_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_frame_time_callback_callback_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_frame_time_callback *arg1 = (retro_frame_time_callback *) 0 ;
  retro_frame_time_callback_t arg2 = (retro_frame_time_callback_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_frame_time_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_frame_time_callback_callback_set" "', argument " "1"" of type '" "retro_frame_time_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_frame_time_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_int64_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_frame_time_callback_callback_set" "', argument " "2"" of type '" "retro_frame_time_callback_t""'"); 
    }
  }
  if (arg1) (arg1)->callback = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_frame_time_callback_callback_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_frame_time_callback *arg1 = (retro_frame_time_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_frame_time_callback_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_frame_time_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_frame_time_callback_callback_get" "', argument " "1"" of type '" "retro_frame_time_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_frame_time_callback * >(argp1);
  result = (retro_frame_time_callback_t) ((arg1)->callback);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_int64_t__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_frame_time_callback_reference_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_frame_time_callback *arg1 = (retro_frame_time_callback *) 0 ;
  retro_usec_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_frame_time_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_frame_time_callback_reference_set" "', argument " "1"" of type '" "retro_frame_time_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_frame_time_callback * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_int64_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_frame_time_callback_reference_set" "', argument " "2"" of type '" "retro_usec_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_frame_time_callback_reference_set" "', argument " "2"" of type '" "retro_usec_t""'");
    } else {
      arg2 = *(reinterpret_cast< retro_usec_t * >(argp2));
    }
  }
  if (arg1) (arg1)->reference = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_frame_time_callback_reference_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_frame_time_callback *arg1 = (retro_frame_time_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_usec_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_frame_time_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_frame_time_callback_reference_get" "', argument " "1"" of type '" "retro_frame_time_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_frame_time_callback * >(argp1);
  result =  ((arg1)->reference);
  jsresult = SWIG_NewPointerObj((new retro_usec_t(result)), SWIGTYPE_p_int64_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_frame_time_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_frame_time_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_frame_time_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_frame_time_callback.");
  result = (retro_frame_time_callback *)new retro_frame_time_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_frame_time_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_frame_time_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_frame_time_callback * arg1 = (retro_frame_time_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_audio_buffer_status_callback_callback_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_audio_buffer_status_callback *arg1 = (retro_audio_buffer_status_callback *) 0 ;
  retro_audio_buffer_status_callback_t arg2 = (retro_audio_buffer_status_callback_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_audio_buffer_status_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_audio_buffer_status_callback_callback_set" "', argument " "1"" of type '" "retro_audio_buffer_status_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_audio_buffer_status_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_bool_unsigned_int_bool__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_audio_buffer_status_callback_callback_set" "', argument " "2"" of type '" "retro_audio_buffer_status_callback_t""'"); 
    }
  }
  if (arg1) (arg1)->callback = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_audio_buffer_status_callback_callback_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_audio_buffer_status_callback *arg1 = (retro_audio_buffer_status_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_audio_buffer_status_callback_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_audio_buffer_status_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_audio_buffer_status_callback_callback_get" "', argument " "1"" of type '" "retro_audio_buffer_status_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_audio_buffer_status_callback * >(argp1);
  result = (retro_audio_buffer_status_callback_t) ((arg1)->callback);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_bool_unsigned_int_bool__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_audio_buffer_status_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_audio_buffer_status_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_audio_buffer_status_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_audio_buffer_status_callback.");
  result = (retro_audio_buffer_status_callback *)new retro_audio_buffer_status_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_audio_buffer_status_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_audio_buffer_status_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_audio_buffer_status_callback * arg1 = (retro_audio_buffer_status_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_NONE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_NONE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_OPENGL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_OPENGL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_OPENGLES2(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_OPENGLES2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_OPENGL_CORE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_OPENGL_CORE));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_OPENGLES3(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_OPENGLES3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_OPENGLES_VERSION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_OPENGLES_VERSION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_VULKAN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_VULKAN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_DIRECT3D(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_DIRECT3D));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_HW_CONTEXT_DUMMY(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_HW_CONTEXT_DUMMY));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_context_type_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  enum retro_hw_context_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_context_type_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_context_type_set" "', argument " "2"" of type '" "enum retro_hw_context_type""'");
  } 
  arg2 = static_cast< enum retro_hw_context_type >(val2);
  if (arg1) (arg1)->context_type = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_context_type_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum retro_hw_context_type result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_context_type_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (enum retro_hw_context_type) ((arg1)->context_type);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_context_reset_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  retro_hw_context_reset_t arg2 = (retro_hw_context_reset_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_context_reset_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_hw_render_callback_context_reset_set" "', argument " "2"" of type '" "retro_hw_context_reset_t""'"); 
    }
  }
  if (arg1) (arg1)->context_reset = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_context_reset_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_hw_context_reset_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_context_reset_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (retro_hw_context_reset_t) ((arg1)->context_reset);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_get_current_framebuffer_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  retro_hw_get_current_framebuffer_t arg2 = (retro_hw_get_current_framebuffer_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_get_current_framebuffer_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__uintptr_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_hw_render_callback_get_current_framebuffer_set" "', argument " "2"" of type '" "retro_hw_get_current_framebuffer_t""'"); 
    }
  }
  if (arg1) (arg1)->get_current_framebuffer = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_get_current_framebuffer_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_hw_get_current_framebuffer_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_get_current_framebuffer_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (retro_hw_get_current_framebuffer_t) ((arg1)->get_current_framebuffer);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__uintptr_t);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_get_proc_address_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  retro_hw_get_proc_address_t arg2 = (retro_hw_get_proc_address_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_get_proc_address_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_hw_render_callback_get_proc_address_set" "', argument " "2"" of type '" "retro_hw_get_proc_address_t""'"); 
    }
  }
  if (arg1) (arg1)->get_proc_address = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_get_proc_address_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_hw_get_proc_address_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_get_proc_address_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (retro_hw_get_proc_address_t) ((arg1)->get_proc_address);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_depth_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_depth_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_depth_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->depth = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_depth_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_depth_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (bool) ((arg1)->depth);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_stencil_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_stencil_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_stencil_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->stencil = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_stencil_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_stencil_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (bool) ((arg1)->stencil);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_bottom_left_origin_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_bottom_left_origin_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_bottom_left_origin_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->bottom_left_origin = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_bottom_left_origin_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_bottom_left_origin_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (bool) ((arg1)->bottom_left_origin);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_version_major_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_version_major_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_version_major_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->version_major = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_version_major_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_version_major_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (unsigned int) ((arg1)->version_major);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_version_minor_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_version_minor_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_version_minor_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->version_minor = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_version_minor_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_version_minor_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (unsigned int) ((arg1)->version_minor);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_cache_context_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_cache_context_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_cache_context_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->cache_context = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_cache_context_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_cache_context_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (bool) ((arg1)->cache_context);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_context_destroy_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  retro_hw_context_reset_t arg2 = (retro_hw_context_reset_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_context_destroy_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_hw_render_callback_context_destroy_set" "', argument " "2"" of type '" "retro_hw_context_reset_t""'"); 
    }
  }
  if (arg1) (arg1)->context_destroy = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_context_destroy_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_hw_context_reset_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_context_destroy_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (retro_hw_context_reset_t) ((arg1)->context_destroy);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_hw_render_callback_debug_context_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_debug_context_set" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_hw_render_callback_debug_context_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->debug_context = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_hw_render_callback_debug_context_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_hw_render_callback *arg1 = (retro_hw_render_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_hw_render_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_hw_render_callback_debug_context_get" "', argument " "1"" of type '" "retro_hw_render_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_hw_render_callback * >(argp1);
  result = (bool) ((arg1)->debug_context);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_hw_render_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_hw_render_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_hw_render_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_hw_render_callback.");
  result = (retro_hw_render_callback *)new retro_hw_render_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_hw_render_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_hw_render_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_hw_render_callback * arg1 = (retro_hw_render_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_keyboard_callback_callback_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_keyboard_callback *arg1 = (retro_keyboard_callback *) 0 ;
  retro_keyboard_event_t arg2 = (retro_keyboard_event_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_keyboard_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_keyboard_callback_callback_set" "', argument " "1"" of type '" "retro_keyboard_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_keyboard_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_bool_unsigned_int_uint32_t_uint16_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_keyboard_callback_callback_set" "', argument " "2"" of type '" "retro_keyboard_event_t""'"); 
    }
  }
  if (arg1) (arg1)->callback = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_keyboard_callback_callback_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_keyboard_callback *arg1 = (retro_keyboard_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_keyboard_event_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_keyboard_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_keyboard_callback_callback_get" "', argument " "1"" of type '" "retro_keyboard_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_keyboard_callback * >(argp1);
  result = (retro_keyboard_event_t) ((arg1)->callback);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_bool_unsigned_int_uint32_t_uint16_t__void);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_keyboard_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_keyboard_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_keyboard_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_keyboard_callback.");
  result = (retro_keyboard_callback *)new retro_keyboard_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_keyboard_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_keyboard_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_keyboard_callback * arg1 = (retro_keyboard_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_disk_control_callback_set_eject_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  retro_set_eject_state_t arg2 = (retro_set_eject_state_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_set_eject_state_set" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_bool__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_callback_set_eject_state_set" "', argument " "2"" of type '" "retro_set_eject_state_t""'"); 
    }
  }
  if (arg1) (arg1)->set_eject_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_callback_set_eject_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_eject_state_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_set_eject_state_get" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  result = (retro_set_eject_state_t) ((arg1)->set_eject_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_bool__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_callback_get_eject_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  retro_get_eject_state_t arg2 = (retro_get_eject_state_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_get_eject_state_set" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_callback_get_eject_state_set" "', argument " "2"" of type '" "retro_get_eject_state_t""'"); 
    }
  }
  if (arg1) (arg1)->get_eject_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_callback_get_eject_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_eject_state_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_get_eject_state_get" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  result = (retro_get_eject_state_t) ((arg1)->get_eject_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_callback_get_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  retro_get_image_index_t arg2 = (retro_get_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_get_image_index_set" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_callback_get_image_index_set" "', argument " "2"" of type '" "retro_get_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->get_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_callback_get_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_get_image_index_get" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  result = (retro_get_image_index_t) ((arg1)->get_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__unsigned_int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_callback_set_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  retro_set_image_index_t arg2 = (retro_set_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_set_image_index_set" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_callback_set_image_index_set" "', argument " "2"" of type '" "retro_set_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->set_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_callback_set_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_set_image_index_get" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  result = (retro_set_image_index_t) ((arg1)->set_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_callback_get_num_images_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  retro_get_num_images_t arg2 = (retro_get_num_images_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_get_num_images_set" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_callback_get_num_images_set" "', argument " "2"" of type '" "retro_get_num_images_t""'"); 
    }
  }
  if (arg1) (arg1)->get_num_images = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_callback_get_num_images_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_num_images_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_get_num_images_get" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  result = (retro_get_num_images_t) ((arg1)->get_num_images);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__unsigned_int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_callback_replace_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  retro_replace_image_index_t arg2 = (retro_replace_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_replace_image_index_set" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_p_q_const__retro_game_info__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_callback_replace_image_index_set" "', argument " "2"" of type '" "retro_replace_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->replace_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_callback_replace_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_replace_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_replace_image_index_get" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  result = (retro_replace_image_index_t) ((arg1)->replace_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_p_q_const__retro_game_info__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_callback_add_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  retro_add_image_index_t arg2 = (retro_add_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_add_image_index_set" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_callback_add_image_index_set" "', argument " "2"" of type '" "retro_add_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->add_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_callback_add_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_callback *arg1 = (retro_disk_control_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_add_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_callback_add_image_index_get" "', argument " "1"" of type '" "retro_disk_control_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_callback * >(argp1);
  result = (retro_add_image_index_t) ((arg1)->add_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_disk_control_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_disk_control_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_disk_control_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_disk_control_callback.");
  result = (retro_disk_control_callback *)new retro_disk_control_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_disk_control_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_disk_control_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_disk_control_callback * arg1 = (retro_disk_control_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_disk_control_ext_callback_set_eject_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_set_eject_state_t arg2 = (retro_set_eject_state_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_set_eject_state_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_bool__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_set_eject_state_set" "', argument " "2"" of type '" "retro_set_eject_state_t""'"); 
    }
  }
  if (arg1) (arg1)->set_eject_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_set_eject_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_eject_state_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_set_eject_state_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_set_eject_state_t) ((arg1)->set_eject_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_bool__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_get_eject_state_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_get_eject_state_t arg2 = (retro_get_eject_state_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_eject_state_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_get_eject_state_set" "', argument " "2"" of type '" "retro_get_eject_state_t""'"); 
    }
  }
  if (arg1) (arg1)->get_eject_state = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_get_eject_state_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_eject_state_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_eject_state_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_get_eject_state_t) ((arg1)->get_eject_state);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_get_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_get_image_index_t arg2 = (retro_get_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_image_index_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_get_image_index_set" "', argument " "2"" of type '" "retro_get_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->get_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_get_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_image_index_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_get_image_index_t) ((arg1)->get_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__unsigned_int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_set_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_set_image_index_t arg2 = (retro_set_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_set_image_index_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_set_image_index_set" "', argument " "2"" of type '" "retro_set_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->set_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_set_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_set_image_index_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_set_image_index_t) ((arg1)->set_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_get_num_images_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_get_num_images_t arg2 = (retro_get_num_images_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_num_images_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_get_num_images_set" "', argument " "2"" of type '" "retro_get_num_images_t""'"); 
    }
  }
  if (arg1) (arg1)->get_num_images = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_get_num_images_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_num_images_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_num_images_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_get_num_images_t) ((arg1)->get_num_images);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__unsigned_int);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_replace_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_replace_image_index_t arg2 = (retro_replace_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_replace_image_index_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_p_q_const__retro_game_info__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_replace_image_index_set" "', argument " "2"" of type '" "retro_replace_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->replace_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_replace_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_replace_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_replace_image_index_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_replace_image_index_t) ((arg1)->replace_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_p_q_const__retro_game_info__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_add_image_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_add_image_index_t arg2 = (retro_add_image_index_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_add_image_index_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_add_image_index_set" "', argument " "2"" of type '" "retro_add_image_index_t""'"); 
    }
  }
  if (arg1) (arg1)->add_image_index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_add_image_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_add_image_index_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_add_image_index_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_add_image_index_t) ((arg1)->add_image_index);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_set_initial_image_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_set_initial_image_t arg2 = (retro_set_initial_image_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_set_initial_image_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_p_q_const__char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_set_initial_image_set" "', argument " "2"" of type '" "retro_set_initial_image_t""'"); 
    }
  }
  if (arg1) (arg1)->set_initial_image = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_set_initial_image_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_set_initial_image_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_set_initial_image_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_set_initial_image_t) ((arg1)->set_initial_image);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_p_q_const__char__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_get_image_path_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_get_image_path_t arg2 = (retro_get_image_path_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_image_path_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_p_char_size_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_get_image_path_set" "', argument " "2"" of type '" "retro_get_image_path_t""'"); 
    }
  }
  if (arg1) (arg1)->get_image_path = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_get_image_path_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_image_path_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_image_path_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_get_image_path_t) ((arg1)->get_image_path);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_p_char_size_t__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_disk_control_ext_callback_get_image_label_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  retro_get_image_label_t arg2 = (retro_get_image_label_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_image_label_set" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int_p_char_size_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_disk_control_ext_callback_get_image_label_set" "', argument " "2"" of type '" "retro_get_image_label_t""'"); 
    }
  }
  if (arg1) (arg1)->get_image_label = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_disk_control_ext_callback_get_image_label_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_disk_control_ext_callback *arg1 = (retro_disk_control_ext_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_get_image_label_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_disk_control_ext_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_disk_control_ext_callback_get_image_label_get" "', argument " "1"" of type '" "retro_disk_control_ext_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_disk_control_ext_callback * >(argp1);
  result = (retro_get_image_label_t) ((arg1)->get_image_label);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int_p_char_size_t__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_disk_control_ext_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_disk_control_ext_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_disk_control_ext_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_disk_control_ext_callback.");
  result = (retro_disk_control_ext_callback *)new retro_disk_control_ext_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_disk_control_ext_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_disk_control_ext_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_disk_control_ext_callback * arg1 = (retro_disk_control_ext_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_PIXEL_FORMAT_0RGB1555(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_PIXEL_FORMAT_0RGB1555));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_PIXEL_FORMAT_XRGB8888(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_PIXEL_FORMAT_XRGB8888));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_PIXEL_FORMAT_RGB565(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_PIXEL_FORMAT_RGB565));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_PIXEL_FORMAT_UNKNOWN(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_PIXEL_FORMAT_UNKNOWN));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_msg_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message *arg1 = (retro_message *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_msg_set" "', argument " "1"" of type '" "retro_message *""'"); 
  }
  arg1 = reinterpret_cast< retro_message * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_message_msg_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->msg = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->msg = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_msg_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message *arg1 = (retro_message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_msg_get" "', argument " "1"" of type '" "retro_message *""'"); 
  }
  arg1 = reinterpret_cast< retro_message * >(argp1);
  result = (char *) ((arg1)->msg);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_frames_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message *arg1 = (retro_message *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_frames_set" "', argument " "1"" of type '" "retro_message *""'"); 
  }
  arg1 = reinterpret_cast< retro_message * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_message_frames_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->frames = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_frames_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message *arg1 = (retro_message *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_frames_get" "', argument " "1"" of type '" "retro_message *""'"); 
  }
  arg1 = reinterpret_cast< retro_message * >(argp1);
  result = (unsigned int) ((arg1)->frames);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_message(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_message *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_message.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_message.");
  result = (retro_message *)new retro_message();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_message, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_message(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_message * arg1 = (retro_message *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_MESSAGE_TARGET_ALL(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_MESSAGE_TARGET_ALL));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MESSAGE_TARGET_OSD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_MESSAGE_TARGET_OSD));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MESSAGE_TARGET_LOG(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_MESSAGE_TARGET_LOG));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MESSAGE_TYPE_NOTIFICATION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_MESSAGE_TYPE_NOTIFICATION));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MESSAGE_TYPE_NOTIFICATION_ALT(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_MESSAGE_TYPE_NOTIFICATION_ALT));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MESSAGE_TYPE_STATUS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_MESSAGE_TYPE_STATUS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MESSAGE_TYPE_PROGRESS(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(RETRO_MESSAGE_TYPE_PROGRESS));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_ext_msg_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_msg_set" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_message_ext_msg_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->msg = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->msg = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_ext_msg_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_msg_get" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  result = (char *) ((arg1)->msg);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_ext_duration_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_duration_set" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_message_ext_duration_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->duration = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_ext_duration_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_duration_get" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  result = (unsigned int) ((arg1)->duration);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_ext_priority_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_priority_set" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_message_ext_priority_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->priority = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_ext_priority_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_priority_get" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  result = (unsigned int) ((arg1)->priority);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_ext_level_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  enum retro_log_level arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_level_set" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_message_ext_level_set" "', argument " "2"" of type '" "enum retro_log_level""'");
  } 
  arg2 = static_cast< enum retro_log_level >(val2);
  if (arg1) (arg1)->level = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_ext_level_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum retro_log_level result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_level_get" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  result = (enum retro_log_level) ((arg1)->level);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_ext_target_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  enum retro_message_target arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_target_set" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_message_ext_target_set" "', argument " "2"" of type '" "enum retro_message_target""'");
  } 
  arg2 = static_cast< enum retro_message_target >(val2);
  if (arg1) (arg1)->target = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_ext_target_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum retro_message_target result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_target_get" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  result = (enum retro_message_target) ((arg1)->target);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_ext_type_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  enum retro_message_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_type_set" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_message_ext_type_set" "', argument " "2"" of type '" "enum retro_message_type""'");
  } 
  arg2 = static_cast< enum retro_message_type >(val2);
  if (arg1) (arg1)->type = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_ext_type_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum retro_message_type result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_type_get" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  result = (enum retro_message_type) ((arg1)->type);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_message_ext_progress_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  int8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_progress_set" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  {
    res2 = SWIG_ConvertPtr(value, &argp2, SWIGTYPE_p_int8_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_message_ext_progress_set" "', argument " "2"" of type '" "int8_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "retro_message_ext_progress_set" "', argument " "2"" of type '" "int8_t""'");
    } else {
      arg2 = *(reinterpret_cast< int8_t * >(argp2));
    }
  }
  if (arg1) (arg1)->progress = arg2;
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_message_ext_progress_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_message_ext *arg1 = (retro_message_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int8_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_message_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_message_ext_progress_get" "', argument " "1"" of type '" "retro_message_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_message_ext * >(argp1);
  result =  ((arg1)->progress);
  jsresult = SWIG_NewPointerObj((new int8_t(result)), SWIGTYPE_p_int8_t, SWIG_POINTER_OWN |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_message_ext(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_message_ext *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_message_ext.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_message_ext.");
  result = (retro_message_ext *)new retro_message_ext();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_message_ext, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_message_ext(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_message_ext * arg1 = (retro_message_ext *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_input_descriptor_port_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_port_set" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_input_descriptor_port_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->port = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_input_descriptor_port_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_port_get" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  result = (unsigned int) ((arg1)->port);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_input_descriptor_device_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_device_set" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_input_descriptor_device_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->device = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_input_descriptor_device_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_device_get" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  result = (unsigned int) ((arg1)->device);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_input_descriptor_index_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_index_set" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_input_descriptor_index_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->index = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_input_descriptor_index_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_index_get" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  result = (unsigned int) ((arg1)->index);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_input_descriptor_id_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_id_set" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_input_descriptor_id_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->id = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_input_descriptor_id_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_id_get" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  result = (unsigned int) ((arg1)->id);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_input_descriptor_description_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_description_set" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_input_descriptor_description_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->description = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->description = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_input_descriptor_description_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_input_descriptor *arg1 = (retro_input_descriptor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_input_descriptor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_input_descriptor_description_get" "', argument " "1"" of type '" "retro_input_descriptor *""'"); 
  }
  arg1 = reinterpret_cast< retro_input_descriptor * >(argp1);
  result = (char *) ((arg1)->description);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_input_descriptor(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_input_descriptor *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_input_descriptor.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_input_descriptor.");
  result = (retro_input_descriptor *)new retro_input_descriptor();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_input_descriptor, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_input_descriptor(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_input_descriptor * arg1 = (retro_input_descriptor *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_system_info_library_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_library_name_set" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_system_info_library_name_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->library_name = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->library_name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_info_library_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_library_name_get" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  result = (char *) ((arg1)->library_name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_info_library_version_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_library_version_set" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_system_info_library_version_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->library_version = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->library_version = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_info_library_version_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_library_version_get" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  result = (char *) ((arg1)->library_version);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_info_valid_extensions_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_valid_extensions_set" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_system_info_valid_extensions_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->valid_extensions = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->valid_extensions = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_info_valid_extensions_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_valid_extensions_get" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  result = (char *) ((arg1)->valid_extensions);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_info_need_fullpath_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_need_fullpath_set" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_system_info_need_fullpath_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->need_fullpath = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_info_need_fullpath_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_need_fullpath_get" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  result = (bool) ((arg1)->need_fullpath);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_info_block_extract_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_block_extract_set" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_system_info_block_extract_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->block_extract = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_info_block_extract_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_info_block_extract_get" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  result = (bool) ((arg1)->block_extract);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_system_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_system_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_system_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_system_info.");
  result = (retro_system_info *)new retro_system_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_system_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_system_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_system_info * arg1 = (retro_system_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_system_content_info_override_extensions_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_content_info_override *arg1 = (retro_system_content_info_override *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_content_info_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_content_info_override_extensions_set" "', argument " "1"" of type '" "retro_system_content_info_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_content_info_override * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_system_content_info_override_extensions_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->extensions = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->extensions = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_content_info_override_extensions_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_content_info_override *arg1 = (retro_system_content_info_override *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_content_info_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_content_info_override_extensions_get" "', argument " "1"" of type '" "retro_system_content_info_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_content_info_override * >(argp1);
  result = (char *) ((arg1)->extensions);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_content_info_override_need_fullpath_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_content_info_override *arg1 = (retro_system_content_info_override *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_content_info_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_content_info_override_need_fullpath_set" "', argument " "1"" of type '" "retro_system_content_info_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_content_info_override * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_system_content_info_override_need_fullpath_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->need_fullpath = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_content_info_override_need_fullpath_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_content_info_override *arg1 = (retro_system_content_info_override *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_content_info_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_content_info_override_need_fullpath_get" "', argument " "1"" of type '" "retro_system_content_info_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_content_info_override * >(argp1);
  result = (bool) ((arg1)->need_fullpath);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_content_info_override_persistent_data_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_content_info_override *arg1 = (retro_system_content_info_override *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_content_info_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_content_info_override_persistent_data_set" "', argument " "1"" of type '" "retro_system_content_info_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_content_info_override * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_system_content_info_override_persistent_data_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->persistent_data = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_content_info_override_persistent_data_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_content_info_override *arg1 = (retro_system_content_info_override *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_content_info_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_content_info_override_persistent_data_get" "', argument " "1"" of type '" "retro_system_content_info_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_content_info_override * >(argp1);
  result = (bool) ((arg1)->persistent_data);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_system_content_info_override(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_system_content_info_override *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_system_content_info_override.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_system_content_info_override.");
  result = (retro_system_content_info_override *)new retro_system_content_info_override();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_system_content_info_override, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_system_content_info_override(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_system_content_info_override * arg1 = (retro_system_content_info_override *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_game_info_ext_full_path_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_full_path_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_full_path_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->full_path = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->full_path = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_full_path_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_full_path_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (char *) ((arg1)->full_path);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_archive_path_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_archive_path_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_archive_path_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->archive_path = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->archive_path = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_archive_path_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_archive_path_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (char *) ((arg1)->archive_path);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_archive_file_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_archive_file_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_archive_file_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->archive_file = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->archive_file = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_archive_file_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_archive_file_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (char *) ((arg1)->archive_file);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_dir_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_dir_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_dir_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->dir = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->dir = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_dir_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_dir_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (char *) ((arg1)->dir);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_name_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_name_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_name_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->name = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_name_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_name_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (char *) ((arg1)->name);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_ext_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_ext_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_ext_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->ext = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->ext = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_ext_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_ext_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (char *) ((arg1)->ext);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_meta_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_meta_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_meta_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->meta = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->meta = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_meta_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_meta_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (char *) ((arg1)->meta);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_data_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_data_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  res2 = SWIG_ConvertPtr(value,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_ext_data_set" "', argument " "2"" of type '" "void const *""'"); 
  }
  if (arg1) (arg1)->data = (void const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_data_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_data_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (void *) ((arg1)->data);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_size_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_size_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_info_ext_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->size = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_size_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_size_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result =  ((arg1)->size);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_file_in_archive_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_file_in_archive_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_info_ext_file_in_archive_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->file_in_archive = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_file_in_archive_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_file_in_archive_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (bool) ((arg1)->file_in_archive);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_ext_persistent_data_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_persistent_data_set" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_info_ext_persistent_data_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->persistent_data = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_ext_persistent_data_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info_ext *arg1 = (retro_game_info_ext *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info_ext, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_ext_persistent_data_get" "', argument " "1"" of type '" "retro_game_info_ext *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info_ext * >(argp1);
  result = (bool) ((arg1)->persistent_data);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_game_info_ext(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_game_info_ext *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_game_info_ext.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_game_info_ext.");
  result = (retro_game_info_ext *)new retro_game_info_ext();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_game_info_ext, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_game_info_ext(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_game_info_ext * arg1 = (retro_game_info_ext *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_game_geometry_base_width_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_base_width_set" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_geometry_base_width_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->base_width = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_geometry_base_width_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_base_width_get" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  result = (unsigned int) ((arg1)->base_width);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_geometry_base_height_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_base_height_set" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_geometry_base_height_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->base_height = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_geometry_base_height_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_base_height_get" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  result = (unsigned int) ((arg1)->base_height);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_geometry_max_width_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_max_width_set" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_geometry_max_width_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->max_width = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_geometry_max_width_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_max_width_get" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  result = (unsigned int) ((arg1)->max_width);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_geometry_max_height_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_max_height_set" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_geometry_max_height_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->max_height = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_geometry_max_height_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_max_height_get" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  result = (unsigned int) ((arg1)->max_height);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_geometry_aspect_ratio_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_aspect_ratio_set" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  ecode2 = SWIG_AsVal_float(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_geometry_aspect_ratio_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->aspect_ratio = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_geometry_aspect_ratio_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_geometry *arg1 = (retro_game_geometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_geometry_aspect_ratio_get" "', argument " "1"" of type '" "retro_game_geometry *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_geometry * >(argp1);
  result = (float) ((arg1)->aspect_ratio);
  jsresult = SWIG_From_float(static_cast< float >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_game_geometry(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_game_geometry *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_game_geometry.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_game_geometry.");
  result = (retro_game_geometry *)new retro_game_geometry();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_game_geometry, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_game_geometry(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_game_geometry * arg1 = (retro_game_geometry *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_system_timing_fps_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_timing *arg1 = (retro_system_timing *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_timing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_timing_fps_set" "', argument " "1"" of type '" "retro_system_timing *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_timing * >(argp1);
  ecode2 = SWIG_AsVal_double(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_system_timing_fps_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->fps = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_timing_fps_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_timing *arg1 = (retro_system_timing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_timing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_timing_fps_get" "', argument " "1"" of type '" "retro_system_timing *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_timing * >(argp1);
  result = (double) ((arg1)->fps);
  jsresult = SWIG_From_double(static_cast< double >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_timing_sample_rate_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_timing *arg1 = (retro_system_timing *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_timing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_timing_sample_rate_set" "', argument " "1"" of type '" "retro_system_timing *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_timing * >(argp1);
  ecode2 = SWIG_AsVal_double(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_system_timing_sample_rate_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->sample_rate = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_timing_sample_rate_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_timing *arg1 = (retro_system_timing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_timing, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_timing_sample_rate_get" "', argument " "1"" of type '" "retro_system_timing *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_timing * >(argp1);
  result = (double) ((arg1)->sample_rate);
  jsresult = SWIG_From_double(static_cast< double >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_system_timing(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_system_timing *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_system_timing.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_system_timing.");
  result = (retro_system_timing *)new retro_system_timing();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_system_timing, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_system_timing(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_system_timing * arg1 = (retro_system_timing *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_system_av_info_geometry_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_av_info *arg1 = (retro_system_av_info *) 0 ;
  retro_game_geometry *arg2 = (retro_game_geometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_av_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_av_info_geometry_set" "', argument " "1"" of type '" "retro_system_av_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_av_info * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_system_av_info_geometry_set" "', argument " "2"" of type '" "retro_game_geometry *""'"); 
  }
  arg2 = reinterpret_cast< retro_game_geometry * >(argp2);
  if (arg1) (arg1)->geometry = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_av_info_geometry_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_av_info *arg1 = (retro_system_av_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_game_geometry *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_av_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_av_info_geometry_get" "', argument " "1"" of type '" "retro_system_av_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_av_info * >(argp1);
  result = (retro_game_geometry *)& ((arg1)->geometry);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_game_geometry, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_system_av_info_timing_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_system_av_info *arg1 = (retro_system_av_info *) 0 ;
  retro_system_timing *arg2 = (retro_system_timing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_av_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_av_info_timing_set" "', argument " "1"" of type '" "retro_system_av_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_av_info * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_system_timing, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_system_av_info_timing_set" "', argument " "2"" of type '" "retro_system_timing *""'"); 
  }
  arg2 = reinterpret_cast< retro_system_timing * >(argp2);
  if (arg1) (arg1)->timing = *arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_system_av_info_timing_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_av_info *arg1 = (retro_system_av_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_system_timing *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_system_av_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_system_av_info_timing_get" "', argument " "1"" of type '" "retro_system_av_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_av_info * >(argp1);
  result = (retro_system_timing *)& ((arg1)->timing);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_system_timing, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_system_av_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_system_av_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_system_av_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_system_av_info.");
  result = (retro_system_av_info *)new retro_system_av_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_system_av_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_system_av_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_system_av_info * arg1 = (retro_system_av_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_variable_key_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_variable *arg1 = (retro_variable *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_variable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_variable_key_set" "', argument " "1"" of type '" "retro_variable *""'"); 
  }
  arg1 = reinterpret_cast< retro_variable * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_variable_key_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->key = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->key = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_variable_key_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_variable *arg1 = (retro_variable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_variable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_variable_key_get" "', argument " "1"" of type '" "retro_variable *""'"); 
  }
  arg1 = reinterpret_cast< retro_variable * >(argp1);
  result = (char *) ((arg1)->key);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_variable_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_variable *arg1 = (retro_variable *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_variable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_variable_value_set" "', argument " "1"" of type '" "retro_variable *""'"); 
  }
  arg1 = reinterpret_cast< retro_variable * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_variable_value_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->value = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->value = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_variable_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_variable *arg1 = (retro_variable *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_variable, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_variable_value_get" "', argument " "1"" of type '" "retro_variable *""'"); 
  }
  arg1 = reinterpret_cast< retro_variable * >(argp1);
  result = (char *) ((arg1)->value);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_variable(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_variable *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_variable.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_variable.");
  result = (retro_variable *)new retro_variable();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_variable, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_variable(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_variable * arg1 = (retro_variable *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_option_display_key_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_display *arg1 = (retro_core_option_display *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_display, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_display_key_set" "', argument " "1"" of type '" "retro_core_option_display *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_display * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_display_key_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->key = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->key = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_display_key_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_display *arg1 = (retro_core_option_display *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_display, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_display_key_get" "', argument " "1"" of type '" "retro_core_option_display *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_display * >(argp1);
  result = (char *) ((arg1)->key);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_display_visible_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_display *arg1 = (retro_core_option_display *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_display, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_display_visible_set" "', argument " "1"" of type '" "retro_core_option_display *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_display * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_core_option_display_visible_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->visible = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_display_visible_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_display *arg1 = (retro_core_option_display *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_display, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_display_visible_get" "', argument " "1"" of type '" "retro_core_option_display *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_display * >(argp1);
  result = (bool) ((arg1)->visible);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_option_display(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_option_display *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_option_display.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_option_display.");
  result = (retro_core_option_display *)new retro_core_option_display();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_option_display, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_option_display(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_option_display * arg1 = (retro_core_option_display *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_NUM_CORE_OPTION_VALUES_MAX(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(128));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_value_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_value *arg1 = (retro_core_option_value *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_value_value_set" "', argument " "1"" of type '" "retro_core_option_value *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_value * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_value_value_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->value = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->value = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_value_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_value *arg1 = (retro_core_option_value *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_value_value_get" "', argument " "1"" of type '" "retro_core_option_value *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_value * >(argp1);
  result = (char *) ((arg1)->value);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_value_label_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_value *arg1 = (retro_core_option_value *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_value_label_set" "', argument " "1"" of type '" "retro_core_option_value *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_value * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_value_label_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->label = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->label = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_value_label_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_value *arg1 = (retro_core_option_value *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_value_label_get" "', argument " "1"" of type '" "retro_core_option_value *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_value * >(argp1);
  result = (char *) ((arg1)->label);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_option_value(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_option_value *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_option_value.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_option_value.");
  result = (retro_core_option_value *)new retro_core_option_value();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_option_value, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_option_value(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_option_value * arg1 = (retro_core_option_value *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_option_definition_key_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_key_set" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_definition_key_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->key = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->key = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_definition_key_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_key_get" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  result = (char *) ((arg1)->key);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_definition_desc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_desc_set" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_definition_desc_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->desc = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->desc = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_definition_desc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_desc_get" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  result = (char *) ((arg1)->desc);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_definition_info_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_info_set" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_definition_info_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->info = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->info = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_definition_info_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_info_get" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  result = (char *) ((arg1)->info);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_definition_values_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  retro_core_option_value *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_values_set" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_definition_values_set" "', argument " "2"" of type '" "retro_core_option_value [128]""'"); 
  } 
  arg2 = reinterpret_cast< retro_core_option_value * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)128; ++ii) *(retro_core_option_value *)&arg1->values[ii] = *((retro_core_option_value *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""values""' of type '""retro_core_option_value [128]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_definition_values_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_option_value *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_values_get" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  result = (retro_core_option_value *)(retro_core_option_value *) ((arg1)->values);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_definition_default_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_default_value_set" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_definition_default_value_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->default_value = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->default_value = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_definition_default_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_definition *arg1 = (retro_core_option_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_definition_default_value_get" "', argument " "1"" of type '" "retro_core_option_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_definition * >(argp1);
  result = (char *) ((arg1)->default_value);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_option_definition(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_option_definition *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_option_definition.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_option_definition.");
  result = (retro_core_option_definition *)new retro_core_option_definition();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_option_definition, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_option_definition(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_option_definition * arg1 = (retro_core_option_definition *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_options_intl_us_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_options_intl *arg1 = (retro_core_options_intl *) 0 ;
  retro_core_option_definition *arg2 = (retro_core_option_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_intl_us_set" "', argument " "1"" of type '" "retro_core_options_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_intl * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_option_definition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_options_intl_us_set" "', argument " "2"" of type '" "retro_core_option_definition *""'"); 
  }
  arg2 = reinterpret_cast< retro_core_option_definition * >(argp2);
  if (arg1) (arg1)->us = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_options_intl_us_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_options_intl *arg1 = (retro_core_options_intl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_option_definition *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_intl_us_get" "', argument " "1"" of type '" "retro_core_options_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_intl * >(argp1);
  result = (retro_core_option_definition *) ((arg1)->us);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_options_intl_local_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_options_intl *arg1 = (retro_core_options_intl *) 0 ;
  retro_core_option_definition *arg2 = (retro_core_option_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_intl_local_set" "', argument " "1"" of type '" "retro_core_options_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_intl * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_option_definition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_options_intl_local_set" "', argument " "2"" of type '" "retro_core_option_definition *""'"); 
  }
  arg2 = reinterpret_cast< retro_core_option_definition * >(argp2);
  if (arg1) (arg1)->local = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_options_intl_local_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_options_intl *arg1 = (retro_core_options_intl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_option_definition *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_intl_local_get" "', argument " "1"" of type '" "retro_core_options_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_intl * >(argp1);
  result = (retro_core_option_definition *) ((arg1)->local);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_option_definition, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_options_intl(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_options_intl *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_options_intl.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_options_intl.");
  result = (retro_core_options_intl *)new retro_core_options_intl();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_options_intl, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_options_intl(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_options_intl * arg1 = (retro_core_options_intl *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_option_v2_category_key_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_category *arg1 = (retro_core_option_v2_category *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_category, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_category_key_set" "', argument " "1"" of type '" "retro_core_option_v2_category *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_category * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_category_key_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->key = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->key = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_category_key_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_category *arg1 = (retro_core_option_v2_category *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_category, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_category_key_get" "', argument " "1"" of type '" "retro_core_option_v2_category *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_category * >(argp1);
  result = (char *) ((arg1)->key);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_category_desc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_category *arg1 = (retro_core_option_v2_category *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_category, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_category_desc_set" "', argument " "1"" of type '" "retro_core_option_v2_category *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_category * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_category_desc_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->desc = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->desc = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_category_desc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_category *arg1 = (retro_core_option_v2_category *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_category, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_category_desc_get" "', argument " "1"" of type '" "retro_core_option_v2_category *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_category * >(argp1);
  result = (char *) ((arg1)->desc);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_category_info_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_category *arg1 = (retro_core_option_v2_category *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_category, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_category_info_set" "', argument " "1"" of type '" "retro_core_option_v2_category *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_category * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_category_info_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->info = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->info = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_category_info_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_category *arg1 = (retro_core_option_v2_category *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_category, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_category_info_get" "', argument " "1"" of type '" "retro_core_option_v2_category *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_category * >(argp1);
  result = (char *) ((arg1)->info);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_option_v2_category(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_option_v2_category *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_option_v2_category.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_option_v2_category.");
  result = (retro_core_option_v2_category *)new retro_core_option_v2_category();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_option_v2_category, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_option_v2_category(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_option_v2_category * arg1 = (retro_core_option_v2_category *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_option_v2_definition_key_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_key_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_key_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->key = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->key = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_key_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_key_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (char *) ((arg1)->key);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_definition_desc_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_desc_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_desc_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->desc = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->desc = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_desc_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_desc_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (char *) ((arg1)->desc);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_definition_desc_categorized_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_desc_categorized_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_desc_categorized_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->desc_categorized = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->desc_categorized = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_desc_categorized_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_desc_categorized_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (char *) ((arg1)->desc_categorized);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_definition_info_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_info_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_info_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->info = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->info = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_info_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_info_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (char *) ((arg1)->info);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_definition_info_categorized_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_info_categorized_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_info_categorized_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->info_categorized = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->info_categorized = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_info_categorized_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_info_categorized_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (char *) ((arg1)->info_categorized);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_definition_category_key_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_category_key_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_category_key_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->category_key = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->category_key = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_category_key_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_category_key_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (char *) ((arg1)->category_key);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_definition_values_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  retro_core_option_value *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_values_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_values_set" "', argument " "2"" of type '" "retro_core_option_value [128]""'"); 
  } 
  arg2 = reinterpret_cast< retro_core_option_value * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)128; ++ii) *(retro_core_option_value *)&arg1->values[ii] = *((retro_core_option_value *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""values""' of type '""retro_core_option_value [128]""'");
    }
  }
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_values_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_option_value *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_values_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (retro_core_option_value *)(retro_core_option_value *) ((arg1)->values);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_option_value, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_option_v2_definition_default_value_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_default_value_set" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_option_v2_definition_default_value_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->default_value = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->default_value = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_option_v2_definition_default_value_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_option_v2_definition *arg1 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_option_v2_definition_default_value_get" "', argument " "1"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_option_v2_definition * >(argp1);
  result = (char *) ((arg1)->default_value);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_option_v2_definition(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_option_v2_definition *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_option_v2_definition.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_option_v2_definition.");
  result = (retro_core_option_v2_definition *)new retro_core_option_v2_definition();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_option_v2_definition, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_option_v2_definition(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_option_v2_definition * arg1 = (retro_core_option_v2_definition *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_options_v2_categories_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_options_v2 *arg1 = (retro_core_options_v2 *) 0 ;
  retro_core_option_v2_category *arg2 = (retro_core_option_v2_category *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_categories_set" "', argument " "1"" of type '" "retro_core_options_v2 *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2 * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_option_v2_category, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_options_v2_categories_set" "', argument " "2"" of type '" "retro_core_option_v2_category *""'"); 
  }
  arg2 = reinterpret_cast< retro_core_option_v2_category * >(argp2);
  if (arg1) (arg1)->categories = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_options_v2_categories_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_options_v2 *arg1 = (retro_core_options_v2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_option_v2_category *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_categories_get" "', argument " "1"" of type '" "retro_core_options_v2 *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2 * >(argp1);
  result = (retro_core_option_v2_category *) ((arg1)->categories);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_option_v2_category, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_options_v2_definitions_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_options_v2 *arg1 = (retro_core_options_v2 *) 0 ;
  retro_core_option_v2_definition *arg2 = (retro_core_option_v2_definition *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_definitions_set" "', argument " "1"" of type '" "retro_core_options_v2 *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2 * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_option_v2_definition, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_options_v2_definitions_set" "', argument " "2"" of type '" "retro_core_option_v2_definition *""'"); 
  }
  arg2 = reinterpret_cast< retro_core_option_v2_definition * >(argp2);
  if (arg1) (arg1)->definitions = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_options_v2_definitions_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_options_v2 *arg1 = (retro_core_options_v2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_option_v2_definition *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_definitions_get" "', argument " "1"" of type '" "retro_core_options_v2 *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2 * >(argp1);
  result = (retro_core_option_v2_definition *) ((arg1)->definitions);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_option_v2_definition, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_options_v2(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_options_v2 *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_options_v2.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_options_v2.");
  result = (retro_core_options_v2 *)new retro_core_options_v2();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_options_v2, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_options_v2(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_options_v2 * arg1 = (retro_core_options_v2 *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_options_v2_intl_us_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_options_v2_intl *arg1 = (retro_core_options_v2_intl *) 0 ;
  retro_core_options_v2 *arg2 = (retro_core_options_v2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_intl_us_set" "', argument " "1"" of type '" "retro_core_options_v2_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2_intl * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_options_v2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_options_v2_intl_us_set" "', argument " "2"" of type '" "retro_core_options_v2 *""'"); 
  }
  arg2 = reinterpret_cast< retro_core_options_v2 * >(argp2);
  if (arg1) (arg1)->us = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_options_v2_intl_us_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_options_v2_intl *arg1 = (retro_core_options_v2_intl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_options_v2 *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_intl_us_get" "', argument " "1"" of type '" "retro_core_options_v2_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2_intl * >(argp1);
  result = (retro_core_options_v2 *) ((arg1)->us);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_options_v2, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_core_options_v2_intl_local_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_options_v2_intl *arg1 = (retro_core_options_v2_intl *) 0 ;
  retro_core_options_v2 *arg2 = (retro_core_options_v2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_intl_local_set" "', argument " "1"" of type '" "retro_core_options_v2_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2_intl * >(argp1);
  res2 = SWIG_ConvertPtr(value, &argp2,SWIGTYPE_p_retro_core_options_v2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_core_options_v2_intl_local_set" "', argument " "2"" of type '" "retro_core_options_v2 *""'"); 
  }
  arg2 = reinterpret_cast< retro_core_options_v2 * >(argp2);
  if (arg1) (arg1)->local = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_options_v2_intl_local_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_options_v2_intl *arg1 = (retro_core_options_v2_intl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_options_v2 *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_v2_intl, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_v2_intl_local_get" "', argument " "1"" of type '" "retro_core_options_v2_intl *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_v2_intl * >(argp1);
  result = (retro_core_options_v2 *) ((arg1)->local);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_retro_core_options_v2, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_options_v2_intl(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_options_v2_intl *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_options_v2_intl.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_options_v2_intl.");
  result = (retro_core_options_v2_intl *)new retro_core_options_v2_intl();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_options_v2_intl, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_options_v2_intl(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_options_v2_intl * arg1 = (retro_core_options_v2_intl *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_core_options_update_display_callback_callback_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_core_options_update_display_callback *arg1 = (retro_core_options_update_display_callback *) 0 ;
  retro_core_options_update_display_callback_t arg2 = (retro_core_options_update_display_callback_t) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_update_display_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_update_display_callback_callback_set" "', argument " "1"" of type '" "retro_core_options_update_display_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_update_display_callback * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(value, (void**)(&arg2), SWIGTYPE_p_f_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_core_options_update_display_callback_callback_set" "', argument " "2"" of type '" "retro_core_options_update_display_callback_t""'"); 
    }
  }
  if (arg1) (arg1)->callback = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_core_options_update_display_callback_callback_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_core_options_update_display_callback *arg1 = (retro_core_options_update_display_callback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  retro_core_options_update_display_callback_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_core_options_update_display_callback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_core_options_update_display_callback_callback_get" "', argument " "1"" of type '" "retro_core_options_update_display_callback *""'"); 
  }
  arg1 = reinterpret_cast< retro_core_options_update_display_callback * >(argp1);
  result = (retro_core_options_update_display_callback_t) ((arg1)->callback);
  jsresult = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_void__bool);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_core_options_update_display_callback(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_core_options_update_display_callback *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_core_options_update_display_callback.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_core_options_update_display_callback.");
  result = (retro_core_options_update_display_callback *)new retro_core_options_update_display_callback();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_core_options_update_display_callback, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_core_options_update_display_callback(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_core_options_update_display_callback * arg1 = (retro_core_options_update_display_callback *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_game_info_path_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_path_set" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_path_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->path = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->path = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_path_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_path_get" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  result = (char *) ((arg1)->path);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_data_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_data_set" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  res2 = SWIG_ConvertPtr(value,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_data_set" "', argument " "2"" of type '" "void const *""'"); 
  }
  if (arg1) (arg1)->data = (void const *)arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_data_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_data_get" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  result = (void *) ((arg1)->data);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_size_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_size_set" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_game_info_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->size = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_size_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_size_get" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  result =  ((arg1)->size);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_game_info_meta_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_meta_set" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(value, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_game_info_meta_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->meta = (char const *)reinterpret_cast< char* >(memcpy(new char[size], arg2, sizeof(char)*(size)));
  } else {
    arg1->meta = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_game_info_meta_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_game_info_meta_get" "', argument " "1"" of type '" "retro_game_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  result = (char *) ((arg1)->meta);
  jsresult = SWIG_FromCharPtr((const char *)result);
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_game_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_game_info *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_game_info.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_game_info.");
  result = (retro_game_info *)new retro_game_info();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_game_info, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_game_info(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_game_info * arg1 = (retro_game_info *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_ACCESS_WRITE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_ACCESS_READ(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 1)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_MEMORY_TYPE_CACHED(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >((1 << 0)));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_framebuffer_data_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_data_set" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  res2 = SWIG_ConvertPtr(value,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_framebuffer_data_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->data = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_framebuffer_data_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *result = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_data_get" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  result = (void *) ((arg1)->data);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_framebuffer_width_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_width_set" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_framebuffer_width_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->width = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_framebuffer_width_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_width_get" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  result = (unsigned int) ((arg1)->width);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_framebuffer_height_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_height_set" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_framebuffer_height_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->height = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_framebuffer_height_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_height_get" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  result = (unsigned int) ((arg1)->height);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_framebuffer_pitch_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_pitch_set" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  ecode2 = SWIG_AsVal_size_t(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_framebuffer_pitch_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->pitch = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_framebuffer_pitch_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_pitch_get" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  result =  ((arg1)->pitch);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_framebuffer_format_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  enum retro_pixel_format arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_format_set" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  ecode2 = SWIG_AsVal_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_framebuffer_format_set" "', argument " "2"" of type '" "enum retro_pixel_format""'");
  } 
  arg2 = static_cast< enum retro_pixel_format >(val2);
  if (arg1) (arg1)->format = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_framebuffer_format_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  enum retro_pixel_format result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_format_get" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  result = (enum retro_pixel_format) ((arg1)->format);
  jsresult = SWIG_From_int(static_cast< int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_framebuffer_access_flags_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_access_flags_set" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_framebuffer_access_flags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->access_flags = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_framebuffer_access_flags_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_access_flags_get" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  result = (unsigned int) ((arg1)->access_flags);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_framebuffer_memory_flags_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_memory_flags_set" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_framebuffer_memory_flags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->memory_flags = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_framebuffer_memory_flags_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_framebuffer *arg1 = (retro_framebuffer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_framebuffer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_framebuffer_memory_flags_get" "', argument " "1"" of type '" "retro_framebuffer *""'"); 
  }
  arg1 = reinterpret_cast< retro_framebuffer * >(argp1);
  result = (unsigned int) ((arg1)->memory_flags);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_framebuffer(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_framebuffer *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_framebuffer.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_framebuffer.");
  result = (retro_framebuffer *)new retro_framebuffer();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_framebuffer, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_framebuffer(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_framebuffer * arg1 = (retro_framebuffer *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static void _wrap_retro_fastforwarding_override_ratio_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_ratio_set" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  ecode2 = SWIG_AsVal_float(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_fastforwarding_override_ratio_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->ratio = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_fastforwarding_override_ratio_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_ratio_get" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  result = (float) ((arg1)->ratio);
  jsresult = SWIG_From_float(static_cast< float >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_fastforwarding_override_fastforward_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_fastforward_set" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_fastforwarding_override_fastforward_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->fastforward = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_fastforwarding_override_fastforward_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_fastforward_get" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  result = (bool) ((arg1)->fastforward);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_fastforwarding_override_notification_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_notification_set" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_fastforwarding_override_notification_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->notification = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_fastforwarding_override_notification_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_notification_get" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  result = (bool) ((arg1)->notification);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_fastforwarding_override_inhibit_toggle_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_inhibit_toggle_set" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  ecode2 = SWIG_AsVal_bool(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_fastforwarding_override_inhibit_toggle_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->inhibit_toggle = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_fastforwarding_override_inhibit_toggle_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_fastforwarding_override *arg1 = (retro_fastforwarding_override *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_fastforwarding_override, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_fastforwarding_override_inhibit_toggle_get" "', argument " "1"" of type '" "retro_fastforwarding_override *""'"); 
  }
  arg1 = reinterpret_cast< retro_fastforwarding_override * >(argp1);
  result = (bool) ((arg1)->inhibit_toggle);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_fastforwarding_override(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_fastforwarding_override *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_fastforwarding_override.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_fastforwarding_override.");
  result = (retro_fastforwarding_override *)new retro_fastforwarding_override();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_fastforwarding_override, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_fastforwarding_override(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_fastforwarding_override * arg1 = (retro_fastforwarding_override *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_RETRO_THROTTLE_NONE(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(0));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_THROTTLE_FRAME_STEPPING(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(1));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_THROTTLE_FAST_FORWARD(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(2));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_THROTTLE_SLOW_MOTION(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(3));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_THROTTLE_REWINDING(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(4));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_THROTTLE_VSYNC(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(5));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_RETRO_THROTTLE_UNBLOCKED(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  jsresult = SWIG_From_int(static_cast< int >(6));
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_throttle_state_mode_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_throttle_state *arg1 = (retro_throttle_state *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_throttle_state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_throttle_state_mode_set" "', argument " "1"" of type '" "retro_throttle_state *""'"); 
  }
  arg1 = reinterpret_cast< retro_throttle_state * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_throttle_state_mode_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mode = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_throttle_state_mode_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_throttle_state *arg1 = (retro_throttle_state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_throttle_state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_throttle_state_mode_get" "', argument " "1"" of type '" "retro_throttle_state *""'"); 
  }
  arg1 = reinterpret_cast< retro_throttle_state * >(argp1);
  result = (unsigned int) ((arg1)->mode);
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static void _wrap_retro_throttle_state_rate_set(v8::Local<v8::Name> property, v8::Local<v8::Value> value, const SwigV8PropertyCallbackInfoVoid &info) {
  SWIGV8_HANDLESCOPE();
  
  retro_throttle_state *arg1 = (retro_throttle_state *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_throttle_state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_throttle_state_rate_set" "', argument " "1"" of type '" "retro_throttle_state *""'"); 
  }
  arg1 = reinterpret_cast< retro_throttle_state * >(argp1);
  ecode2 = SWIG_AsVal_float(value, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_throttle_state_rate_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->rate = arg2;
  
  
  
  goto fail;
fail:
  return;
}


static SwigV8ReturnValue _wrap_retro_throttle_state_rate_get(v8::Local<v8::Name> property, const SwigV8PropertyCallbackInfo &info) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_throttle_state *arg1 = (retro_throttle_state *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float result;
  
  res1 = SWIG_ConvertPtr(info.Holder(), &argp1,SWIGTYPE_p_retro_throttle_state, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_throttle_state_rate_get" "', argument " "1"" of type '" "retro_throttle_state *""'"); 
  }
  arg1 = reinterpret_cast< retro_throttle_state * >(argp1);
  result = (float) ((arg1)->rate);
  jsresult = SWIG_From_float(static_cast< float >(result));
  
  
  SWIGV8_RETURN_INFO(jsresult, info);
  
  goto fail;
fail:
  SWIGV8_RETURN_INFO(SWIGV8_UNDEFINED(), info);
}


static SwigV8ReturnValue _wrap_new_retro_throttle_state(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_OBJECT self = args.Holder();
  retro_throttle_state *result;
  if(self->InternalFieldCount() < 1) SWIG_exception_fail(SWIG_ERROR, "Illegal call of constructor _wrap_new_retro_throttle_state.");
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_retro_throttle_state.");
  result = (retro_throttle_state *)new retro_throttle_state();
  
  
  
  SWIGV8_SetPrivateData(self, result, SWIGTYPE_p_retro_throttle_state, SWIG_POINTER_OWN);
  SWIGV8_RETURN(self);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static void _wrap_delete_retro_throttle_state(const v8::WeakCallbackInfo<SWIGV8_Proxy> &data) {
  SWIGV8_Proxy *proxy = data.GetParameter();
  
  if(proxy->swigCMemOwn && proxy->swigCObject) {
    retro_throttle_state * arg1 = (retro_throttle_state *)proxy->swigCObject;
    delete arg1;
  }
  delete proxy;
}


static SwigV8ReturnValue _wrap_retro_set_environment(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_environment_t arg1 = (retro_environment_t) 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_set_environment.");
  
  {
    int res = SWIG_ConvertFunctionPtr(args[0], (void**)(&arg1), SWIGTYPE_p_f_unsigned_int_p_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_set_environment" "', argument " "1"" of type '" "retro_environment_t""'"); 
    }
  }
  retro_set_environment(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_set_video_refresh(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_video_refresh_t arg1 = (retro_video_refresh_t) 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_set_video_refresh.");
  
  {
    int res = SWIG_ConvertFunctionPtr(args[0], (void**)(&arg1), SWIGTYPE_p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_set_video_refresh" "', argument " "1"" of type '" "retro_video_refresh_t""'"); 
    }
  }
  retro_set_video_refresh(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_set_audio_sample(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_audio_sample_t arg1 = (retro_audio_sample_t) 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_set_audio_sample.");
  
  {
    int res = SWIG_ConvertFunctionPtr(args[0], (void**)(&arg1), SWIGTYPE_p_f_int16_t_int16_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_set_audio_sample" "', argument " "1"" of type '" "retro_audio_sample_t""'"); 
    }
  }
  retro_set_audio_sample(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_set_audio_sample_batch(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_audio_sample_batch_t arg1 = (retro_audio_sample_batch_t) 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_set_audio_sample_batch.");
  
  {
    int res = SWIG_ConvertFunctionPtr(args[0], (void**)(&arg1), SWIGTYPE_p_f_p_q_const__int16_t_size_t__size_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_set_audio_sample_batch" "', argument " "1"" of type '" "retro_audio_sample_batch_t""'"); 
    }
  }
  retro_set_audio_sample_batch(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_set_input_poll(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_input_poll_t arg1 = (retro_input_poll_t) 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_set_input_poll.");
  
  {
    int res = SWIG_ConvertFunctionPtr(args[0], (void**)(&arg1), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_set_input_poll" "', argument " "1"" of type '" "retro_input_poll_t""'"); 
    }
  }
  retro_set_input_poll(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_set_input_state(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_input_state_t arg1 = (retro_input_state_t) 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_set_input_state.");
  
  {
    int res = SWIG_ConvertFunctionPtr(args[0], (void**)(&arg1), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "retro_set_input_state" "', argument " "1"" of type '" "retro_input_state_t""'"); 
    }
  }
  retro_set_input_state(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_init(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_init.");
  
  retro_init();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_deinit(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_deinit.");
  
  retro_deinit();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_api_version(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  unsigned int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_api_version.");
  
  result = (unsigned int)retro_api_version();
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_get_system_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_info *arg1 = (retro_system_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_get_system_info.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_retro_system_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_get_system_info" "', argument " "1"" of type '" "retro_system_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_info * >(argp1);
  retro_get_system_info(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_get_system_av_info(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_system_av_info *arg1 = (retro_system_av_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_get_system_av_info.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_retro_system_av_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_get_system_av_info" "', argument " "1"" of type '" "retro_system_av_info *""'"); 
  }
  arg1 = reinterpret_cast< retro_system_av_info * >(argp1);
  retro_get_system_av_info(arg1);
  jsresult = SWIGV8_UNDEFINED();
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_set_controller_port_device(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_set_controller_port_device.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "retro_set_controller_port_device" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_set_controller_port_device" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  retro_set_controller_port_device(arg1,arg2);
  jsresult = SWIGV8_UNDEFINED();
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_reset(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_reset.");
  
  retro_reset();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_run(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_run.");
  
  retro_run();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_serialize_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  size_t result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_serialize_size.");
  
  result = retro_serialize_size();
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_serialize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  int res1 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_serialize.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_serialize" "', argument " "1"" of type '" "void *""'"); 
  }
  ecode2 = SWIG_AsVal_size_t(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_serialize" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)retro_serialize(arg1,SWIG_STD_MOVE(arg2));
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_unserialize(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  int res1 ;
  size_t val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if(args.Length() != 2) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_unserialize.");
  
  res1 = SWIG_ConvertPtr(args[0],SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_unserialize" "', argument " "1"" of type '" "void const *""'"); 
  }
  ecode2 = SWIG_AsVal_size_t(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_unserialize" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)retro_unserialize((void const *)arg1,SWIG_STD_MOVE(arg2));
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_cheat_reset(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_cheat_reset.");
  
  retro_cheat_reset();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_cheat_set(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  unsigned int arg1 ;
  bool arg2 ;
  char *arg3 = (char *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_cheat_set.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "retro_cheat_set" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_bool(args[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "retro_cheat_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  res3 = SWIG_AsCharPtrAndSize(args[2], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "retro_cheat_set" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  retro_cheat_set(arg1,arg2,(char const *)arg3);
  jsresult = SWIGV8_UNDEFINED();
  
  
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_load_game(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  retro_game_info *arg1 = (retro_game_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_load_game.");
  
  res1 = SWIG_ConvertPtr(args[0], &argp1,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "retro_load_game" "', argument " "1"" of type '" "retro_game_info const *""'"); 
  }
  arg1 = reinterpret_cast< retro_game_info * >(argp1);
  result = (bool)retro_load_game((retro_game_info const *)arg1);
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_load_game_special(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  unsigned int arg1 ;
  retro_game_info *arg2 = (retro_game_info *) 0 ;
  size_t arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  bool result;
  
  if(args.Length() != 3) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_load_game_special.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "retro_load_game_special" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  res2 = SWIG_ConvertPtr(args[1], &argp2,SWIGTYPE_p_retro_game_info, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "retro_load_game_special" "', argument " "2"" of type '" "retro_game_info const *""'"); 
  }
  arg2 = reinterpret_cast< retro_game_info * >(argp2);
  ecode3 = SWIG_AsVal_size_t(args[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "retro_load_game_special" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  result = (bool)retro_load_game_special(arg1,(retro_game_info const *)arg2,SWIG_STD_MOVE(arg3));
  jsresult = SWIG_From_bool(static_cast< bool >(result));
  
  
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_unload_game(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_unload_game.");
  
  retro_unload_game();
  jsresult = SWIGV8_UNDEFINED();
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_get_region(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  unsigned int result;
  
  if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_get_region.");
  
  result = (unsigned int)retro_get_region();
  jsresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_get_memory_data(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *result = 0 ;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_get_memory_data.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "retro_get_memory_data" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (void *)retro_get_memory_data(arg1);
  jsresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


static SwigV8ReturnValue _wrap_retro_get_memory_size(const SwigV8Arguments &args) {
  SWIGV8_HANDLESCOPE();
  
  SWIGV8_VALUE jsresult;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  size_t result;
  
  if(args.Length() != 1) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_retro_get_memory_size.");
  
  ecode1 = SWIG_AsVal_unsigned_SS_int(args[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "retro_get_memory_size" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = retro_get_memory_size(arg1);
  jsresult = SWIG_From_size_t(static_cast< size_t >(result));
  
  
  SWIGV8_RETURN(jsresult);
  
  goto fail;
fail:
  SWIGV8_RETURN(SWIGV8_UNDEFINED());
}


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_bool__bool = {"_p_f_bool__bool", "bool (*)(bool)|retro_set_eject_state_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_bool__void = {"_p_f_bool__void", "void (*)(bool)|retro_audio_set_state_callback_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_bool_unsigned_int_bool__void = {"_p_f_bool_unsigned_int_bool__void", "void (*)(bool,unsigned int,bool)|retro_audio_buffer_status_callback_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_bool_unsigned_int_uint32_t_uint16_t__void = {"_p_f_bool_unsigned_int_uint32_t_uint16_t__void", "retro_keyboard_event_t|void (*)(bool,unsigned int,uint32_t,uint16_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_enum_retro_log_level_p_q_const__char_v_______void = {"_p_f_enum_retro_log_level_p_q_const__char_v_______void", "void (*)(enum retro_log_level,char const *,...)|retro_log_printf_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int16_t_int16_t__void = {"_p_f_int16_t_int16_t__void", "void (*)(int16_t,int16_t)|retro_audio_sample_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int64_t__void = {"_p_f_int64_t__void", "void (*)(int64_t)|retro_frame_time_callback_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int__void = {"_p_f_int_int__void", "retro_set_led_state_t|void (*)(int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_double_p_double_p_double_p_double__bool = {"_p_f_p_double_p_double_p_double_p_double__bool", "bool (*)(double *,double *,double *,double *)|retro_location_get_position_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__int = {"_p_f_p_q_const__char__int", "int (*)(char const *)|retro_vfs_remove_t|retro_vfs_mkdir_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__p_f_void__void = {"_p_f_p_q_const__char__p_f_void__void", "retro_get_proc_address_t|retro_hw_get_proc_address_t|void (*(*)(char const *))(void)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_bool__p_retro_vfs_dir_handle = {"_p_f_p_q_const__char_bool__p_retro_vfs_dir_handle", "retro_vfs_opendir_t|retro_vfs_dir_handle *(*)(char const *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_int32_t__int = {"_p_f_p_q_const__char_p_int32_t__int", "int (*)(char const *,int32_t *)|retro_vfs_stat_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_q_const__char__int = {"_p_f_p_q_const__char_p_q_const__char__int", "int (*)(char const *,char const *)|retro_vfs_rename_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle = {"_p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle", "retro_vfs_open_t|retro_vfs_file_handle *(*)(char const *,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__int16_t_size_t__size_t = {"_p_f_p_q_const__int16_t_size_t__size_t", "size_t (*)(int16_t const *,size_t)|retro_audio_sample_batch_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void = {"_p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void", "void (*)(uint32_t const *,unsigned int,unsigned int,size_t)|retro_camera_frame_raw_framebuffer_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void = {"_p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void", "retro_video_refresh_t|void (*)(void const *,unsigned int,unsigned int,size_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_perf_counter__void = {"_p_f_p_retro_perf_counter__void", "retro_perf_start_t|retro_perf_stop_t|retro_perf_register_t|void (*)(retro_perf_counter *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_dir_handle__bool = {"_p_f_p_retro_vfs_dir_handle__bool", "retro_vfs_dirent_is_dir_t|bool (*)(retro_vfs_dir_handle *)|retro_vfs_readdir_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_dir_handle__int = {"_p_f_p_retro_vfs_dir_handle__int", "retro_vfs_closedir_t|int (*)(retro_vfs_dir_handle *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_dir_handle__p_char = {"_p_f_p_retro_vfs_dir_handle__p_char", "char *(*)(retro_vfs_dir_handle *)|retro_vfs_dirent_get_name_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_file_handle__int = {"_p_f_p_retro_vfs_file_handle__int", "retro_vfs_close_t|int (*)(retro_vfs_file_handle *)|retro_vfs_flush_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_file_handle__int64_t = {"_p_f_p_retro_vfs_file_handle__int64_t", "int64_t (*)(retro_vfs_file_handle *)|retro_vfs_size_t|retro_vfs_tell_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_file_handle__p_char = {"_p_f_p_retro_vfs_file_handle__p_char", "retro_vfs_get_path_t|char *(*)(retro_vfs_file_handle *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_file_handle_int64_t__int64_t = {"_p_f_p_retro_vfs_file_handle_int64_t__int64_t", "int64_t (*)(retro_vfs_file_handle *,int64_t)|retro_vfs_truncate_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_file_handle_int64_t_int__int64_t = {"_p_f_p_retro_vfs_file_handle_int64_t_int__int64_t", "retro_vfs_seek_t|int64_t (*)(retro_vfs_file_handle *,int64_t,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t = {"_p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t", "int64_t (*)(retro_vfs_file_handle *,void const *,uint64_t)|retro_vfs_write_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t = {"_p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t", "retro_vfs_read_t|int64_t (*)(retro_vfs_file_handle *,void *,uint64_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_uint8_t__bool = {"_p_f_p_uint8_t__bool", "retro_midi_read_t|bool (*)(uint8_t *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_uint8_t_uint32_t__bool = {"_p_f_uint8_t_uint32_t__bool", "bool (*)(uint8_t,uint32_t)|retro_midi_write_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int__bool = {"_p_f_unsigned_int__bool", "bool (*)(unsigned int)|retro_set_image_index_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool = {"_p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool", "retro_set_rumble_state_t|bool (*)(unsigned int,enum retro_rumble_effect,uint16_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool = {"_p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool", "bool (*)(unsigned int,enum retro_sensor_action,unsigned int)|retro_set_sensor_state_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_char_size_t__bool = {"_p_f_unsigned_int_p_char_size_t__bool", "bool (*)(unsigned int,char *,size_t)|retro_get_image_path_t|retro_get_image_label_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__char__bool = {"_p_f_unsigned_int_p_q_const__char__bool", "bool (*)(unsigned int,char const *)|retro_set_initial_image_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__retro_game_info__bool = {"_p_f_unsigned_int_p_q_const__retro_game_info__bool", "bool (*)(unsigned int,retro_game_info const *)|retro_replace_image_index_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_void__bool = {"_p_f_unsigned_int_p_void__bool", "retro_environment_t|bool (*)(unsigned int,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int__float = {"_p_f_unsigned_int_unsigned_int__float", "float (*)(unsigned int,unsigned int)|retro_sensor_get_input_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int__void", "void (*)(unsigned int,unsigned int)|retro_location_set_interval_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_q_const__float__void = {"_p_f_unsigned_int_unsigned_int_p_q_const__float__void", "void (*)(unsigned int,unsigned int,float const *)|retro_camera_frame_opengl_texture_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t", "retro_input_state_t|int16_t (*)(unsigned int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__bool = {"_p_f_void__bool", "retro_midi_input_enabled_t|retro_midi_output_enabled_t|retro_midi_flush_t|retro_camera_start_t|retro_location_start_t|retro_get_eject_state_t|bool (*)(void)|retro_add_image_index_t|retro_core_options_update_display_callback_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__int64_t = {"_p_f_void__int64_t", "retro_perf_get_time_usec_t|int64_t (*)(void)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__uint64_t = {"_p_f_void__uint64_t", "retro_perf_get_counter_t|retro_get_cpu_features_t|uint64_t (*)(void)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__uintptr_t = {"_p_f_void__uintptr_t", "uintptr_t (*)(void)|retro_hw_get_current_framebuffer_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__unsigned_int = {"_p_f_void__unsigned_int", "retro_get_num_images_t|unsigned int (*)(void)|retro_get_image_index_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__void = {"_p_f_void__void", "retro_camera_lifetime_status_t|retro_location_lifetime_status_t|retro_input_poll_t|retro_camera_stop_t|retro_location_stop_t|void (*)(void)|retro_perf_log_t|retro_audio_callback_t|retro_hw_context_reset_t", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "retro_usec_t *|int64_t *|retro_time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int8_t = {"_p_int8_t", "int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_audio_buffer_status_callback = {"_p_retro_audio_buffer_status_callback", "retro_audio_buffer_status_callback *|p_retro_audio_buffer_status_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_audio_callback = {"_p_retro_audio_callback", "retro_audio_callback *|p_retro_audio_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_camera_callback = {"_p_retro_camera_callback", "retro_camera_callback *|p_retro_camera_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_controller_description = {"_p_retro_controller_description", "retro_controller_description *|p_retro_controller_description", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_controller_info = {"_p_retro_controller_info", "retro_controller_info *|p_retro_controller_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_option_definition = {"_p_retro_core_option_definition", "retro_core_option_definition *|p_retro_core_option_definition", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_option_display = {"_p_retro_core_option_display", "retro_core_option_display *|p_retro_core_option_display", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_option_v2_category = {"_p_retro_core_option_v2_category", "p_retro_core_option_v2_category|retro_core_option_v2_category *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_option_v2_definition = {"_p_retro_core_option_v2_definition", "retro_core_option_v2_definition *|p_retro_core_option_v2_definition", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_option_value = {"_p_retro_core_option_value", "retro_core_option_value *|p_retro_core_option_value", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_options_intl = {"_p_retro_core_options_intl", "p_retro_core_options_intl|retro_core_options_intl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_options_update_display_callback = {"_p_retro_core_options_update_display_callback", "retro_core_options_update_display_callback *|p_retro_core_options_update_display_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_options_v2 = {"_p_retro_core_options_v2", "retro_core_options_v2 *|p_retro_core_options_v2", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_core_options_v2_intl = {"_p_retro_core_options_v2_intl", "retro_core_options_v2_intl *|p_retro_core_options_v2_intl", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_disk_control_callback = {"_p_retro_disk_control_callback", "retro_disk_control_callback *|p_retro_disk_control_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_disk_control_ext_callback = {"_p_retro_disk_control_ext_callback", "retro_disk_control_ext_callback *|p_retro_disk_control_ext_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_fastforwarding_override = {"_p_retro_fastforwarding_override", "p_retro_fastforwarding_override|retro_fastforwarding_override *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_frame_time_callback = {"_p_retro_frame_time_callback", "retro_frame_time_callback *|p_retro_frame_time_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_framebuffer = {"_p_retro_framebuffer", "p_retro_framebuffer|retro_framebuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_game_geometry = {"_p_retro_game_geometry", "p_retro_game_geometry|retro_game_geometry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_game_info = {"_p_retro_game_info", "retro_game_info *|p_retro_game_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_game_info_ext = {"_p_retro_game_info_ext", "retro_game_info_ext *|p_retro_game_info_ext", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_get_proc_address_interface = {"_p_retro_get_proc_address_interface", "p_retro_get_proc_address_interface|retro_get_proc_address_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_hw_render_callback = {"_p_retro_hw_render_callback", "retro_hw_render_callback *|p_retro_hw_render_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_hw_render_context_negotiation_interface = {"_p_retro_hw_render_context_negotiation_interface", "p_retro_hw_render_context_negotiation_interface|retro_hw_render_context_negotiation_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_hw_render_interface = {"_p_retro_hw_render_interface", "p_retro_hw_render_interface|retro_hw_render_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_input_descriptor = {"_p_retro_input_descriptor", "p_retro_input_descriptor|retro_input_descriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_keyboard_callback = {"_p_retro_keyboard_callback", "retro_keyboard_callback *|p_retro_keyboard_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_led_interface = {"_p_retro_led_interface", "p_retro_led_interface|retro_led_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_location_callback = {"_p_retro_location_callback", "retro_location_callback *|p_retro_location_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_log_callback = {"_p_retro_log_callback", "retro_log_callback *|p_retro_log_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_memory_descriptor = {"_p_retro_memory_descriptor", "p_retro_memory_descriptor|retro_memory_descriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_memory_map = {"_p_retro_memory_map", "retro_memory_map *|p_retro_memory_map", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_message = {"_p_retro_message", "p_retro_message|retro_message *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_message_ext = {"_p_retro_message_ext", "retro_message_ext *|p_retro_message_ext", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_midi_interface = {"_p_retro_midi_interface", "p_retro_midi_interface|retro_midi_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_perf_callback = {"_p_retro_perf_callback", "retro_perf_callback *|p_retro_perf_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_perf_counter = {"_p_retro_perf_counter", "p_retro_perf_counter|retro_perf_counter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_rumble_interface = {"_p_retro_rumble_interface", "p_retro_rumble_interface|retro_rumble_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_sensor_interface = {"_p_retro_sensor_interface", "p_retro_sensor_interface|retro_sensor_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_subsystem_info = {"_p_retro_subsystem_info", "retro_subsystem_info *|p_retro_subsystem_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_subsystem_memory_info = {"_p_retro_subsystem_memory_info", "retro_subsystem_memory_info *|p_retro_subsystem_memory_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_subsystem_rom_info = {"_p_retro_subsystem_rom_info", "retro_subsystem_rom_info *|p_retro_subsystem_rom_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_system_av_info = {"_p_retro_system_av_info", "retro_system_av_info *|p_retro_system_av_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_system_content_info_override = {"_p_retro_system_content_info_override", "p_retro_system_content_info_override|retro_system_content_info_override *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_system_info = {"_p_retro_system_info", "retro_system_info *|p_retro_system_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_system_timing = {"_p_retro_system_timing", "retro_system_timing *|p_retro_system_timing", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_throttle_state = {"_p_retro_throttle_state", "p_retro_throttle_state|retro_throttle_state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_variable = {"_p_retro_variable", "p_retro_variable|retro_variable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_vfs_interface = {"_p_retro_vfs_interface", "p_retro_vfs_interface|retro_vfs_interface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_retro_vfs_interface_info = {"_p_retro_vfs_interface_info", "retro_vfs_interface_info *|p_retro_vfs_interface_info", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "retro_perf_tick_t *|uint64_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_char,
  &_swigt__p_f_bool__bool,
  &_swigt__p_f_bool__void,
  &_swigt__p_f_bool_unsigned_int_bool__void,
  &_swigt__p_f_bool_unsigned_int_uint32_t_uint16_t__void,
  &_swigt__p_f_enum_retro_log_level_p_q_const__char_v_______void,
  &_swigt__p_f_int16_t_int16_t__void,
  &_swigt__p_f_int64_t__void,
  &_swigt__p_f_int_int__void,
  &_swigt__p_f_p_double_p_double_p_double_p_double__bool,
  &_swigt__p_f_p_q_const__char__int,
  &_swigt__p_f_p_q_const__char__p_f_void__void,
  &_swigt__p_f_p_q_const__char_bool__p_retro_vfs_dir_handle,
  &_swigt__p_f_p_q_const__char_p_int32_t__int,
  &_swigt__p_f_p_q_const__char_p_q_const__char__int,
  &_swigt__p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle,
  &_swigt__p_f_p_q_const__int16_t_size_t__size_t,
  &_swigt__p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void,
  &_swigt__p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void,
  &_swigt__p_f_p_retro_perf_counter__void,
  &_swigt__p_f_p_retro_vfs_dir_handle__bool,
  &_swigt__p_f_p_retro_vfs_dir_handle__int,
  &_swigt__p_f_p_retro_vfs_dir_handle__p_char,
  &_swigt__p_f_p_retro_vfs_file_handle__int,
  &_swigt__p_f_p_retro_vfs_file_handle__int64_t,
  &_swigt__p_f_p_retro_vfs_file_handle__p_char,
  &_swigt__p_f_p_retro_vfs_file_handle_int64_t__int64_t,
  &_swigt__p_f_p_retro_vfs_file_handle_int64_t_int__int64_t,
  &_swigt__p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t,
  &_swigt__p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t,
  &_swigt__p_f_p_uint8_t__bool,
  &_swigt__p_f_uint8_t_uint32_t__bool,
  &_swigt__p_f_unsigned_int__bool,
  &_swigt__p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool,
  &_swigt__p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool,
  &_swigt__p_f_unsigned_int_p_char_size_t__bool,
  &_swigt__p_f_unsigned_int_p_q_const__char__bool,
  &_swigt__p_f_unsigned_int_p_q_const__retro_game_info__bool,
  &_swigt__p_f_unsigned_int_p_void__bool,
  &_swigt__p_f_unsigned_int_unsigned_int__float,
  &_swigt__p_f_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t,
  &_swigt__p_f_void__bool,
  &_swigt__p_f_void__int64_t,
  &_swigt__p_f_void__uint64_t,
  &_swigt__p_f_void__uintptr_t,
  &_swigt__p_f_void__unsigned_int,
  &_swigt__p_f_void__void,
  &_swigt__p_int,
  &_swigt__p_int64_t,
  &_swigt__p_int8_t,
  &_swigt__p_retro_audio_buffer_status_callback,
  &_swigt__p_retro_audio_callback,
  &_swigt__p_retro_camera_callback,
  &_swigt__p_retro_controller_description,
  &_swigt__p_retro_controller_info,
  &_swigt__p_retro_core_option_definition,
  &_swigt__p_retro_core_option_display,
  &_swigt__p_retro_core_option_v2_category,
  &_swigt__p_retro_core_option_v2_definition,
  &_swigt__p_retro_core_option_value,
  &_swigt__p_retro_core_options_intl,
  &_swigt__p_retro_core_options_update_display_callback,
  &_swigt__p_retro_core_options_v2,
  &_swigt__p_retro_core_options_v2_intl,
  &_swigt__p_retro_disk_control_callback,
  &_swigt__p_retro_disk_control_ext_callback,
  &_swigt__p_retro_fastforwarding_override,
  &_swigt__p_retro_frame_time_callback,
  &_swigt__p_retro_framebuffer,
  &_swigt__p_retro_game_geometry,
  &_swigt__p_retro_game_info,
  &_swigt__p_retro_game_info_ext,
  &_swigt__p_retro_get_proc_address_interface,
  &_swigt__p_retro_hw_render_callback,
  &_swigt__p_retro_hw_render_context_negotiation_interface,
  &_swigt__p_retro_hw_render_interface,
  &_swigt__p_retro_input_descriptor,
  &_swigt__p_retro_keyboard_callback,
  &_swigt__p_retro_led_interface,
  &_swigt__p_retro_location_callback,
  &_swigt__p_retro_log_callback,
  &_swigt__p_retro_memory_descriptor,
  &_swigt__p_retro_memory_map,
  &_swigt__p_retro_message,
  &_swigt__p_retro_message_ext,
  &_swigt__p_retro_midi_interface,
  &_swigt__p_retro_perf_callback,
  &_swigt__p_retro_perf_counter,
  &_swigt__p_retro_rumble_interface,
  &_swigt__p_retro_sensor_interface,
  &_swigt__p_retro_subsystem_info,
  &_swigt__p_retro_subsystem_memory_info,
  &_swigt__p_retro_subsystem_rom_info,
  &_swigt__p_retro_system_av_info,
  &_swigt__p_retro_system_content_info_override,
  &_swigt__p_retro_system_info,
  &_swigt__p_retro_system_timing,
  &_swigt__p_retro_throttle_state,
  &_swigt__p_retro_variable,
  &_swigt__p_retro_vfs_interface,
  &_swigt__p_retro_vfs_interface_info,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_bool__bool[] = {  {&_swigt__p_f_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_bool__void[] = {  {&_swigt__p_f_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_bool_unsigned_int_bool__void[] = {  {&_swigt__p_f_bool_unsigned_int_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_bool_unsigned_int_uint32_t_uint16_t__void[] = {  {&_swigt__p_f_bool_unsigned_int_uint32_t_uint16_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_enum_retro_log_level_p_q_const__char_v_______void[] = {  {&_swigt__p_f_enum_retro_log_level_p_q_const__char_v_______void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int16_t_int16_t__void[] = {  {&_swigt__p_f_int16_t_int16_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int64_t__void[] = {  {&_swigt__p_f_int64_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int__void[] = {  {&_swigt__p_f_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_double_p_double_p_double_p_double__bool[] = {  {&_swigt__p_f_p_double_p_double_p_double_p_double__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__int[] = {  {&_swigt__p_f_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__p_f_void__void[] = {  {&_swigt__p_f_p_q_const__char__p_f_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_bool__p_retro_vfs_dir_handle[] = {  {&_swigt__p_f_p_q_const__char_bool__p_retro_vfs_dir_handle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_int32_t__int[] = {  {&_swigt__p_f_p_q_const__char_p_int32_t__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_q_const__char__int[] = {  {&_swigt__p_f_p_q_const__char_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle[] = {  {&_swigt__p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__int16_t_size_t__size_t[] = {  {&_swigt__p_f_p_q_const__int16_t_size_t__size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void[] = {  {&_swigt__p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void[] = {  {&_swigt__p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_perf_counter__void[] = {  {&_swigt__p_f_p_retro_perf_counter__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_dir_handle__bool[] = {  {&_swigt__p_f_p_retro_vfs_dir_handle__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_dir_handle__int[] = {  {&_swigt__p_f_p_retro_vfs_dir_handle__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_dir_handle__p_char[] = {  {&_swigt__p_f_p_retro_vfs_dir_handle__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_file_handle__int[] = {  {&_swigt__p_f_p_retro_vfs_file_handle__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_file_handle__int64_t[] = {  {&_swigt__p_f_p_retro_vfs_file_handle__int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_file_handle__p_char[] = {  {&_swigt__p_f_p_retro_vfs_file_handle__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_file_handle_int64_t__int64_t[] = {  {&_swigt__p_f_p_retro_vfs_file_handle_int64_t__int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_file_handle_int64_t_int__int64_t[] = {  {&_swigt__p_f_p_retro_vfs_file_handle_int64_t_int__int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t[] = {  {&_swigt__p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t[] = {  {&_swigt__p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_uint8_t__bool[] = {  {&_swigt__p_f_p_uint8_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_uint8_t_uint32_t__bool[] = {  {&_swigt__p_f_uint8_t_uint32_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int__bool[] = {  {&_swigt__p_f_unsigned_int__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool[] = {  {&_swigt__p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool[] = {  {&_swigt__p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_char_size_t__bool[] = {  {&_swigt__p_f_unsigned_int_p_char_size_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__char__bool[] = {  {&_swigt__p_f_unsigned_int_p_q_const__char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__retro_game_info__bool[] = {  {&_swigt__p_f_unsigned_int_p_q_const__retro_game_info__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_void__bool[] = {  {&_swigt__p_f_unsigned_int_p_void__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int__float[] = {  {&_swigt__p_f_unsigned_int_unsigned_int__float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__bool[] = {  {&_swigt__p_f_void__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__int64_t[] = {  {&_swigt__p_f_void__int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__uint64_t[] = {  {&_swigt__p_f_void__uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__uintptr_t[] = {  {&_swigt__p_f_void__uintptr_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__unsigned_int[] = {  {&_swigt__p_f_void__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__void[] = {  {&_swigt__p_f_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int8_t[] = {  {&_swigt__p_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_audio_buffer_status_callback[] = {  {&_swigt__p_retro_audio_buffer_status_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_audio_callback[] = {  {&_swigt__p_retro_audio_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_camera_callback[] = {  {&_swigt__p_retro_camera_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_controller_description[] = {  {&_swigt__p_retro_controller_description, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_controller_info[] = {  {&_swigt__p_retro_controller_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_option_definition[] = {  {&_swigt__p_retro_core_option_definition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_option_display[] = {  {&_swigt__p_retro_core_option_display, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_option_v2_category[] = {  {&_swigt__p_retro_core_option_v2_category, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_option_v2_definition[] = {  {&_swigt__p_retro_core_option_v2_definition, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_option_value[] = {  {&_swigt__p_retro_core_option_value, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_options_intl[] = {  {&_swigt__p_retro_core_options_intl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_options_update_display_callback[] = {  {&_swigt__p_retro_core_options_update_display_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_options_v2[] = {  {&_swigt__p_retro_core_options_v2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_core_options_v2_intl[] = {  {&_swigt__p_retro_core_options_v2_intl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_disk_control_callback[] = {  {&_swigt__p_retro_disk_control_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_disk_control_ext_callback[] = {  {&_swigt__p_retro_disk_control_ext_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_fastforwarding_override[] = {  {&_swigt__p_retro_fastforwarding_override, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_frame_time_callback[] = {  {&_swigt__p_retro_frame_time_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_framebuffer[] = {  {&_swigt__p_retro_framebuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_game_geometry[] = {  {&_swigt__p_retro_game_geometry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_game_info[] = {  {&_swigt__p_retro_game_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_game_info_ext[] = {  {&_swigt__p_retro_game_info_ext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_get_proc_address_interface[] = {  {&_swigt__p_retro_get_proc_address_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_hw_render_callback[] = {  {&_swigt__p_retro_hw_render_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_hw_render_context_negotiation_interface[] = {  {&_swigt__p_retro_hw_render_context_negotiation_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_hw_render_interface[] = {  {&_swigt__p_retro_hw_render_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_input_descriptor[] = {  {&_swigt__p_retro_input_descriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_keyboard_callback[] = {  {&_swigt__p_retro_keyboard_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_led_interface[] = {  {&_swigt__p_retro_led_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_location_callback[] = {  {&_swigt__p_retro_location_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_log_callback[] = {  {&_swigt__p_retro_log_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_memory_descriptor[] = {  {&_swigt__p_retro_memory_descriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_memory_map[] = {  {&_swigt__p_retro_memory_map, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_message[] = {  {&_swigt__p_retro_message, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_message_ext[] = {  {&_swigt__p_retro_message_ext, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_midi_interface[] = {  {&_swigt__p_retro_midi_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_perf_callback[] = {  {&_swigt__p_retro_perf_callback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_perf_counter[] = {  {&_swigt__p_retro_perf_counter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_rumble_interface[] = {  {&_swigt__p_retro_rumble_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_sensor_interface[] = {  {&_swigt__p_retro_sensor_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_subsystem_info[] = {  {&_swigt__p_retro_subsystem_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_subsystem_memory_info[] = {  {&_swigt__p_retro_subsystem_memory_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_subsystem_rom_info[] = {  {&_swigt__p_retro_subsystem_rom_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_system_av_info[] = {  {&_swigt__p_retro_system_av_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_system_content_info_override[] = {  {&_swigt__p_retro_system_content_info_override, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_system_info[] = {  {&_swigt__p_retro_system_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_system_timing[] = {  {&_swigt__p_retro_system_timing, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_throttle_state[] = {  {&_swigt__p_retro_throttle_state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_variable[] = {  {&_swigt__p_retro_variable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_vfs_interface[] = {  {&_swigt__p_retro_vfs_interface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_retro_vfs_interface_info[] = {  {&_swigt__p_retro_vfs_interface_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_char,
  _swigc__p_f_bool__bool,
  _swigc__p_f_bool__void,
  _swigc__p_f_bool_unsigned_int_bool__void,
  _swigc__p_f_bool_unsigned_int_uint32_t_uint16_t__void,
  _swigc__p_f_enum_retro_log_level_p_q_const__char_v_______void,
  _swigc__p_f_int16_t_int16_t__void,
  _swigc__p_f_int64_t__void,
  _swigc__p_f_int_int__void,
  _swigc__p_f_p_double_p_double_p_double_p_double__bool,
  _swigc__p_f_p_q_const__char__int,
  _swigc__p_f_p_q_const__char__p_f_void__void,
  _swigc__p_f_p_q_const__char_bool__p_retro_vfs_dir_handle,
  _swigc__p_f_p_q_const__char_p_int32_t__int,
  _swigc__p_f_p_q_const__char_p_q_const__char__int,
  _swigc__p_f_p_q_const__char_unsigned_int_unsigned_int__p_retro_vfs_file_handle,
  _swigc__p_f_p_q_const__int16_t_size_t__size_t,
  _swigc__p_f_p_q_const__uint32_t_unsigned_int_unsigned_int_size_t__void,
  _swigc__p_f_p_q_const__void_unsigned_int_unsigned_int_size_t__void,
  _swigc__p_f_p_retro_perf_counter__void,
  _swigc__p_f_p_retro_vfs_dir_handle__bool,
  _swigc__p_f_p_retro_vfs_dir_handle__int,
  _swigc__p_f_p_retro_vfs_dir_handle__p_char,
  _swigc__p_f_p_retro_vfs_file_handle__int,
  _swigc__p_f_p_retro_vfs_file_handle__int64_t,
  _swigc__p_f_p_retro_vfs_file_handle__p_char,
  _swigc__p_f_p_retro_vfs_file_handle_int64_t__int64_t,
  _swigc__p_f_p_retro_vfs_file_handle_int64_t_int__int64_t,
  _swigc__p_f_p_retro_vfs_file_handle_p_q_const__void_uint64_t__int64_t,
  _swigc__p_f_p_retro_vfs_file_handle_p_void_uint64_t__int64_t,
  _swigc__p_f_p_uint8_t__bool,
  _swigc__p_f_uint8_t_uint32_t__bool,
  _swigc__p_f_unsigned_int__bool,
  _swigc__p_f_unsigned_int_enum_retro_rumble_effect_uint16_t__bool,
  _swigc__p_f_unsigned_int_enum_retro_sensor_action_unsigned_int__bool,
  _swigc__p_f_unsigned_int_p_char_size_t__bool,
  _swigc__p_f_unsigned_int_p_q_const__char__bool,
  _swigc__p_f_unsigned_int_p_q_const__retro_game_info__bool,
  _swigc__p_f_unsigned_int_p_void__bool,
  _swigc__p_f_unsigned_int_unsigned_int__float,
  _swigc__p_f_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__int16_t,
  _swigc__p_f_void__bool,
  _swigc__p_f_void__int64_t,
  _swigc__p_f_void__uint64_t,
  _swigc__p_f_void__uintptr_t,
  _swigc__p_f_void__unsigned_int,
  _swigc__p_f_void__void,
  _swigc__p_int,
  _swigc__p_int64_t,
  _swigc__p_int8_t,
  _swigc__p_retro_audio_buffer_status_callback,
  _swigc__p_retro_audio_callback,
  _swigc__p_retro_camera_callback,
  _swigc__p_retro_controller_description,
  _swigc__p_retro_controller_info,
  _swigc__p_retro_core_option_definition,
  _swigc__p_retro_core_option_display,
  _swigc__p_retro_core_option_v2_category,
  _swigc__p_retro_core_option_v2_definition,
  _swigc__p_retro_core_option_value,
  _swigc__p_retro_core_options_intl,
  _swigc__p_retro_core_options_update_display_callback,
  _swigc__p_retro_core_options_v2,
  _swigc__p_retro_core_options_v2_intl,
  _swigc__p_retro_disk_control_callback,
  _swigc__p_retro_disk_control_ext_callback,
  _swigc__p_retro_fastforwarding_override,
  _swigc__p_retro_frame_time_callback,
  _swigc__p_retro_framebuffer,
  _swigc__p_retro_game_geometry,
  _swigc__p_retro_game_info,
  _swigc__p_retro_game_info_ext,
  _swigc__p_retro_get_proc_address_interface,
  _swigc__p_retro_hw_render_callback,
  _swigc__p_retro_hw_render_context_negotiation_interface,
  _swigc__p_retro_hw_render_interface,
  _swigc__p_retro_input_descriptor,
  _swigc__p_retro_keyboard_callback,
  _swigc__p_retro_led_interface,
  _swigc__p_retro_location_callback,
  _swigc__p_retro_log_callback,
  _swigc__p_retro_memory_descriptor,
  _swigc__p_retro_memory_map,
  _swigc__p_retro_message,
  _swigc__p_retro_message_ext,
  _swigc__p_retro_midi_interface,
  _swigc__p_retro_perf_callback,
  _swigc__p_retro_perf_counter,
  _swigc__p_retro_rumble_interface,
  _swigc__p_retro_sensor_interface,
  _swigc__p_retro_subsystem_info,
  _swigc__p_retro_subsystem_memory_info,
  _swigc__p_retro_subsystem_rom_info,
  _swigc__p_retro_system_av_info,
  _swigc__p_retro_system_content_info_override,
  _swigc__p_retro_system_info,
  _swigc__p_retro_system_timing,
  _swigc__p_retro_throttle_state,
  _swigc__p_retro_variable,
  _swigc__p_retro_vfs_interface,
  _swigc__p_retro_vfs_interface_info,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */




SWIGRUNTIME void
SWIG_V8_SetModule(v8::Local<v8::Context> context, swig_module_info *swig_module) {
  v8::Local<v8::Object> global_obj = context->Global();
  v8::Local<v8::External> mod = SWIGV8_EXTERNAL_NEW(swig_module);
  assert(!mod.IsEmpty());
  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("swig_module_info_data"));
  global_obj->SetPrivate(context, privateKey, mod);
}

SWIGRUNTIME swig_module_info *
SWIG_V8_GetModule(v8::Local<v8::Context> context) {
  v8::Local<v8::Object> global_obj = context->Global();
  v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("swig_module_info_data"));
  v8::Local<v8::Value> moduleinfo;
  if (!global_obj->GetPrivate(context, privateKey).ToLocal(&moduleinfo))
    return 0;

  if (moduleinfo.IsEmpty() || moduleinfo->IsNull() || moduleinfo->IsUndefined())
  {
    // It's not yet loaded
    return 0;
  }

  v8::Local<v8::External> moduleinfo_extern = v8::Local<v8::External>::Cast(moduleinfo);

  if (moduleinfo_extern.IsEmpty() || moduleinfo_extern->IsNull() || moduleinfo_extern->IsUndefined())
  {
    // Something's not right
    return 0;
  }

  void *ptr = moduleinfo_extern->Value();
  assert(ptr);
  swig_module_info *retptr = static_cast<swig_module_info *>(ptr);
  assert(retptr);
  return retptr;
}

#define SWIG_GetModule(clientdata)                SWIG_V8_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)       SWIG_V8_SetModule(clientdata, pointer)
#define SWIG_INIT_CLIENT_DATA_TYPE                v8::Local<v8::Context>


/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

#ifndef SWIG_INIT_CLIENT_DATA_TYPE
#define SWIG_INIT_CLIENT_DATA_TYPE void *
#endif

SWIGRUNTIME void
SWIG_InitializeModule(SWIG_INIT_CLIENT_DATA_TYPE clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* When multiple interpreters are used, a module could have already been initialized in
     a different interpreter, but not yet have a pointer in this interpreter.
     In this case, we do not want to continue adding types... everything should be
     set up already */
  if (init == 0) return;

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;

#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {

      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif


#if !defined(NODE_MODULE_VERSION) || (NODE_MODULE_VERSION < 12)
// Note: 'extern "C"'' disables name mangling which makes it easier to load the symbol manually
extern "C" void SWIGV8_INIT (SWIGV8_OBJECT exports_obj)
#elif (NODE_MODULE_VERSION < 64)
void SWIGV8_INIT (SWIGV8_OBJECT exports_obj, SWIGV8_VALUE /*module*/, void*)
#else
void SWIGV8_INIT (SWIGV8_OBJECT exports_obj, SWIGV8_VALUE /*module*/, v8::Local<v8::Context> context, void*)
#endif
{
#if !defined(NODE_MODULE_VERSION) || NODE_MODULE_VERSION < 64
  v8::Local<v8::Context> context = SWIGV8_CURRENT_CONTEXT();
#endif

  SWIG_InitializeModule(context);


  // a class template for creating proxies of undefined types
  SWIGV8_SET_CLASS_TEMPL(SWIGV8_SWIGTYPE_Proxy_class_templ, SWIGV8_CreateClassTemplate("SwigProxy"));

  /* create objects for namespaces */
  

  /* create class templates */
  /* Name: _exports_retro_vfs_interface, Type: p_retro_vfs_interface, Dtor: _wrap_delete_retro_vfs_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_vfs_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_vfs_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_vfs_interface_clientData.class_templ, _exports_retro_vfs_interface_class);
_exports_retro_vfs_interface_clientData.dtor = _wrap_delete_retro_vfs_interface;
if (SWIGTYPE_p_retro_vfs_interface->clientdata == 0) {
  SWIGTYPE_p_retro_vfs_interface->clientdata = &_exports_retro_vfs_interface_clientData;
}
/* Name: _exports_retro_vfs_interface_info, Type: p_retro_vfs_interface_info, Dtor: _wrap_delete_retro_vfs_interface_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_vfs_interface_info_class = SWIGV8_CreateClassTemplate("_exports_retro_vfs_interface_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_vfs_interface_info_clientData.class_templ, _exports_retro_vfs_interface_info_class);
_exports_retro_vfs_interface_info_clientData.dtor = _wrap_delete_retro_vfs_interface_info;
if (SWIGTYPE_p_retro_vfs_interface_info->clientdata == 0) {
  SWIGTYPE_p_retro_vfs_interface_info->clientdata = &_exports_retro_vfs_interface_info_clientData;
}
/* Name: _exports_retro_hw_render_interface, Type: p_retro_hw_render_interface, Dtor: _wrap_delete_retro_hw_render_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_hw_render_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_hw_render_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_hw_render_interface_clientData.class_templ, _exports_retro_hw_render_interface_class);
_exports_retro_hw_render_interface_clientData.dtor = _wrap_delete_retro_hw_render_interface;
if (SWIGTYPE_p_retro_hw_render_interface->clientdata == 0) {
  SWIGTYPE_p_retro_hw_render_interface->clientdata = &_exports_retro_hw_render_interface_clientData;
}
/* Name: _exports_retro_led_interface, Type: p_retro_led_interface, Dtor: _wrap_delete_retro_led_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_led_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_led_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_led_interface_clientData.class_templ, _exports_retro_led_interface_class);
_exports_retro_led_interface_clientData.dtor = _wrap_delete_retro_led_interface;
if (SWIGTYPE_p_retro_led_interface->clientdata == 0) {
  SWIGTYPE_p_retro_led_interface->clientdata = &_exports_retro_led_interface_clientData;
}
/* Name: _exports_retro_midi_interface, Type: p_retro_midi_interface, Dtor: _wrap_delete_retro_midi_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_midi_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_midi_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_midi_interface_clientData.class_templ, _exports_retro_midi_interface_class);
_exports_retro_midi_interface_clientData.dtor = _wrap_delete_retro_midi_interface;
if (SWIGTYPE_p_retro_midi_interface->clientdata == 0) {
  SWIGTYPE_p_retro_midi_interface->clientdata = &_exports_retro_midi_interface_clientData;
}
/* Name: _exports_retro_hw_render_context_negotiation_interface, Type: p_retro_hw_render_context_negotiation_interface, Dtor: _wrap_delete_retro_hw_render_context_negotiation_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_hw_render_context_negotiation_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_hw_render_context_negotiation_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_hw_render_context_negotiation_interface_clientData.class_templ, _exports_retro_hw_render_context_negotiation_interface_class);
_exports_retro_hw_render_context_negotiation_interface_clientData.dtor = _wrap_delete_retro_hw_render_context_negotiation_interface;
if (SWIGTYPE_p_retro_hw_render_context_negotiation_interface->clientdata == 0) {
  SWIGTYPE_p_retro_hw_render_context_negotiation_interface->clientdata = &_exports_retro_hw_render_context_negotiation_interface_clientData;
}
/* Name: _exports_retro_memory_descriptor, Type: p_retro_memory_descriptor, Dtor: _wrap_delete_retro_memory_descriptor */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_memory_descriptor_class = SWIGV8_CreateClassTemplate("_exports_retro_memory_descriptor");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_memory_descriptor_clientData.class_templ, _exports_retro_memory_descriptor_class);
_exports_retro_memory_descriptor_clientData.dtor = _wrap_delete_retro_memory_descriptor;
if (SWIGTYPE_p_retro_memory_descriptor->clientdata == 0) {
  SWIGTYPE_p_retro_memory_descriptor->clientdata = &_exports_retro_memory_descriptor_clientData;
}
/* Name: _exports_retro_memory_map, Type: p_retro_memory_map, Dtor: _wrap_delete_retro_memory_map */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_memory_map_class = SWIGV8_CreateClassTemplate("_exports_retro_memory_map");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_memory_map_clientData.class_templ, _exports_retro_memory_map_class);
_exports_retro_memory_map_clientData.dtor = _wrap_delete_retro_memory_map;
if (SWIGTYPE_p_retro_memory_map->clientdata == 0) {
  SWIGTYPE_p_retro_memory_map->clientdata = &_exports_retro_memory_map_clientData;
}
/* Name: _exports_retro_controller_description, Type: p_retro_controller_description, Dtor: _wrap_delete_retro_controller_description */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_controller_description_class = SWIGV8_CreateClassTemplate("_exports_retro_controller_description");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_controller_description_clientData.class_templ, _exports_retro_controller_description_class);
_exports_retro_controller_description_clientData.dtor = _wrap_delete_retro_controller_description;
if (SWIGTYPE_p_retro_controller_description->clientdata == 0) {
  SWIGTYPE_p_retro_controller_description->clientdata = &_exports_retro_controller_description_clientData;
}
/* Name: _exports_retro_controller_info, Type: p_retro_controller_info, Dtor: _wrap_delete_retro_controller_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_controller_info_class = SWIGV8_CreateClassTemplate("_exports_retro_controller_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_controller_info_clientData.class_templ, _exports_retro_controller_info_class);
_exports_retro_controller_info_clientData.dtor = _wrap_delete_retro_controller_info;
if (SWIGTYPE_p_retro_controller_info->clientdata == 0) {
  SWIGTYPE_p_retro_controller_info->clientdata = &_exports_retro_controller_info_clientData;
}
/* Name: _exports_retro_subsystem_memory_info, Type: p_retro_subsystem_memory_info, Dtor: _wrap_delete_retro_subsystem_memory_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_subsystem_memory_info_class = SWIGV8_CreateClassTemplate("_exports_retro_subsystem_memory_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_subsystem_memory_info_clientData.class_templ, _exports_retro_subsystem_memory_info_class);
_exports_retro_subsystem_memory_info_clientData.dtor = _wrap_delete_retro_subsystem_memory_info;
if (SWIGTYPE_p_retro_subsystem_memory_info->clientdata == 0) {
  SWIGTYPE_p_retro_subsystem_memory_info->clientdata = &_exports_retro_subsystem_memory_info_clientData;
}
/* Name: _exports_retro_subsystem_rom_info, Type: p_retro_subsystem_rom_info, Dtor: _wrap_delete_retro_subsystem_rom_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_subsystem_rom_info_class = SWIGV8_CreateClassTemplate("_exports_retro_subsystem_rom_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_subsystem_rom_info_clientData.class_templ, _exports_retro_subsystem_rom_info_class);
_exports_retro_subsystem_rom_info_clientData.dtor = _wrap_delete_retro_subsystem_rom_info;
if (SWIGTYPE_p_retro_subsystem_rom_info->clientdata == 0) {
  SWIGTYPE_p_retro_subsystem_rom_info->clientdata = &_exports_retro_subsystem_rom_info_clientData;
}
/* Name: _exports_retro_subsystem_info, Type: p_retro_subsystem_info, Dtor: _wrap_delete_retro_subsystem_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_subsystem_info_class = SWIGV8_CreateClassTemplate("_exports_retro_subsystem_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_subsystem_info_clientData.class_templ, _exports_retro_subsystem_info_class);
_exports_retro_subsystem_info_clientData.dtor = _wrap_delete_retro_subsystem_info;
if (SWIGTYPE_p_retro_subsystem_info->clientdata == 0) {
  SWIGTYPE_p_retro_subsystem_info->clientdata = &_exports_retro_subsystem_info_clientData;
}
/* Name: _exports_retro_get_proc_address_interface, Type: p_retro_get_proc_address_interface, Dtor: _wrap_delete_retro_get_proc_address_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_get_proc_address_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_get_proc_address_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_get_proc_address_interface_clientData.class_templ, _exports_retro_get_proc_address_interface_class);
_exports_retro_get_proc_address_interface_clientData.dtor = _wrap_delete_retro_get_proc_address_interface;
if (SWIGTYPE_p_retro_get_proc_address_interface->clientdata == 0) {
  SWIGTYPE_p_retro_get_proc_address_interface->clientdata = &_exports_retro_get_proc_address_interface_clientData;
}
/* Name: _exports_retro_log_callback, Type: p_retro_log_callback, Dtor: _wrap_delete_retro_log_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_log_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_log_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_log_callback_clientData.class_templ, _exports_retro_log_callback_class);
_exports_retro_log_callback_clientData.dtor = _wrap_delete_retro_log_callback;
if (SWIGTYPE_p_retro_log_callback->clientdata == 0) {
  SWIGTYPE_p_retro_log_callback->clientdata = &_exports_retro_log_callback_clientData;
}
/* Name: _exports_retro_perf_counter, Type: p_retro_perf_counter, Dtor: _wrap_delete_retro_perf_counter */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_perf_counter_class = SWIGV8_CreateClassTemplate("_exports_retro_perf_counter");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_perf_counter_clientData.class_templ, _exports_retro_perf_counter_class);
_exports_retro_perf_counter_clientData.dtor = _wrap_delete_retro_perf_counter;
if (SWIGTYPE_p_retro_perf_counter->clientdata == 0) {
  SWIGTYPE_p_retro_perf_counter->clientdata = &_exports_retro_perf_counter_clientData;
}
/* Name: _exports_retro_perf_callback, Type: p_retro_perf_callback, Dtor: _wrap_delete_retro_perf_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_perf_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_perf_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_perf_callback_clientData.class_templ, _exports_retro_perf_callback_class);
_exports_retro_perf_callback_clientData.dtor = _wrap_delete_retro_perf_callback;
if (SWIGTYPE_p_retro_perf_callback->clientdata == 0) {
  SWIGTYPE_p_retro_perf_callback->clientdata = &_exports_retro_perf_callback_clientData;
}
/* Name: _exports_retro_sensor_interface, Type: p_retro_sensor_interface, Dtor: _wrap_delete_retro_sensor_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_sensor_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_sensor_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_sensor_interface_clientData.class_templ, _exports_retro_sensor_interface_class);
_exports_retro_sensor_interface_clientData.dtor = _wrap_delete_retro_sensor_interface;
if (SWIGTYPE_p_retro_sensor_interface->clientdata == 0) {
  SWIGTYPE_p_retro_sensor_interface->clientdata = &_exports_retro_sensor_interface_clientData;
}
/* Name: _exports_retro_camera_callback, Type: p_retro_camera_callback, Dtor: _wrap_delete_retro_camera_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_camera_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_camera_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_camera_callback_clientData.class_templ, _exports_retro_camera_callback_class);
_exports_retro_camera_callback_clientData.dtor = _wrap_delete_retro_camera_callback;
if (SWIGTYPE_p_retro_camera_callback->clientdata == 0) {
  SWIGTYPE_p_retro_camera_callback->clientdata = &_exports_retro_camera_callback_clientData;
}
/* Name: _exports_retro_location_callback, Type: p_retro_location_callback, Dtor: _wrap_delete_retro_location_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_location_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_location_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_location_callback_clientData.class_templ, _exports_retro_location_callback_class);
_exports_retro_location_callback_clientData.dtor = _wrap_delete_retro_location_callback;
if (SWIGTYPE_p_retro_location_callback->clientdata == 0) {
  SWIGTYPE_p_retro_location_callback->clientdata = &_exports_retro_location_callback_clientData;
}
/* Name: _exports_retro_rumble_interface, Type: p_retro_rumble_interface, Dtor: _wrap_delete_retro_rumble_interface */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_rumble_interface_class = SWIGV8_CreateClassTemplate("_exports_retro_rumble_interface");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_rumble_interface_clientData.class_templ, _exports_retro_rumble_interface_class);
_exports_retro_rumble_interface_clientData.dtor = _wrap_delete_retro_rumble_interface;
if (SWIGTYPE_p_retro_rumble_interface->clientdata == 0) {
  SWIGTYPE_p_retro_rumble_interface->clientdata = &_exports_retro_rumble_interface_clientData;
}
/* Name: _exports_retro_audio_callback, Type: p_retro_audio_callback, Dtor: _wrap_delete_retro_audio_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_audio_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_audio_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_audio_callback_clientData.class_templ, _exports_retro_audio_callback_class);
_exports_retro_audio_callback_clientData.dtor = _wrap_delete_retro_audio_callback;
if (SWIGTYPE_p_retro_audio_callback->clientdata == 0) {
  SWIGTYPE_p_retro_audio_callback->clientdata = &_exports_retro_audio_callback_clientData;
}
/* Name: _exports_retro_frame_time_callback, Type: p_retro_frame_time_callback, Dtor: _wrap_delete_retro_frame_time_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_frame_time_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_frame_time_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_frame_time_callback_clientData.class_templ, _exports_retro_frame_time_callback_class);
_exports_retro_frame_time_callback_clientData.dtor = _wrap_delete_retro_frame_time_callback;
if (SWIGTYPE_p_retro_frame_time_callback->clientdata == 0) {
  SWIGTYPE_p_retro_frame_time_callback->clientdata = &_exports_retro_frame_time_callback_clientData;
}
/* Name: _exports_retro_audio_buffer_status_callback, Type: p_retro_audio_buffer_status_callback, Dtor: _wrap_delete_retro_audio_buffer_status_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_audio_buffer_status_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_audio_buffer_status_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_audio_buffer_status_callback_clientData.class_templ, _exports_retro_audio_buffer_status_callback_class);
_exports_retro_audio_buffer_status_callback_clientData.dtor = _wrap_delete_retro_audio_buffer_status_callback;
if (SWIGTYPE_p_retro_audio_buffer_status_callback->clientdata == 0) {
  SWIGTYPE_p_retro_audio_buffer_status_callback->clientdata = &_exports_retro_audio_buffer_status_callback_clientData;
}
/* Name: _exports_retro_hw_render_callback, Type: p_retro_hw_render_callback, Dtor: _wrap_delete_retro_hw_render_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_hw_render_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_hw_render_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_hw_render_callback_clientData.class_templ, _exports_retro_hw_render_callback_class);
_exports_retro_hw_render_callback_clientData.dtor = _wrap_delete_retro_hw_render_callback;
if (SWIGTYPE_p_retro_hw_render_callback->clientdata == 0) {
  SWIGTYPE_p_retro_hw_render_callback->clientdata = &_exports_retro_hw_render_callback_clientData;
}
/* Name: _exports_retro_keyboard_callback, Type: p_retro_keyboard_callback, Dtor: _wrap_delete_retro_keyboard_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_keyboard_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_keyboard_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_keyboard_callback_clientData.class_templ, _exports_retro_keyboard_callback_class);
_exports_retro_keyboard_callback_clientData.dtor = _wrap_delete_retro_keyboard_callback;
if (SWIGTYPE_p_retro_keyboard_callback->clientdata == 0) {
  SWIGTYPE_p_retro_keyboard_callback->clientdata = &_exports_retro_keyboard_callback_clientData;
}
/* Name: _exports_retro_disk_control_callback, Type: p_retro_disk_control_callback, Dtor: _wrap_delete_retro_disk_control_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_disk_control_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_disk_control_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_disk_control_callback_clientData.class_templ, _exports_retro_disk_control_callback_class);
_exports_retro_disk_control_callback_clientData.dtor = _wrap_delete_retro_disk_control_callback;
if (SWIGTYPE_p_retro_disk_control_callback->clientdata == 0) {
  SWIGTYPE_p_retro_disk_control_callback->clientdata = &_exports_retro_disk_control_callback_clientData;
}
/* Name: _exports_retro_disk_control_ext_callback, Type: p_retro_disk_control_ext_callback, Dtor: _wrap_delete_retro_disk_control_ext_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_disk_control_ext_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_disk_control_ext_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_disk_control_ext_callback_clientData.class_templ, _exports_retro_disk_control_ext_callback_class);
_exports_retro_disk_control_ext_callback_clientData.dtor = _wrap_delete_retro_disk_control_ext_callback;
if (SWIGTYPE_p_retro_disk_control_ext_callback->clientdata == 0) {
  SWIGTYPE_p_retro_disk_control_ext_callback->clientdata = &_exports_retro_disk_control_ext_callback_clientData;
}
/* Name: _exports_retro_message, Type: p_retro_message, Dtor: _wrap_delete_retro_message */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_message_class = SWIGV8_CreateClassTemplate("_exports_retro_message");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_message_clientData.class_templ, _exports_retro_message_class);
_exports_retro_message_clientData.dtor = _wrap_delete_retro_message;
if (SWIGTYPE_p_retro_message->clientdata == 0) {
  SWIGTYPE_p_retro_message->clientdata = &_exports_retro_message_clientData;
}
/* Name: _exports_retro_message_ext, Type: p_retro_message_ext, Dtor: _wrap_delete_retro_message_ext */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_message_ext_class = SWIGV8_CreateClassTemplate("_exports_retro_message_ext");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_message_ext_clientData.class_templ, _exports_retro_message_ext_class);
_exports_retro_message_ext_clientData.dtor = _wrap_delete_retro_message_ext;
if (SWIGTYPE_p_retro_message_ext->clientdata == 0) {
  SWIGTYPE_p_retro_message_ext->clientdata = &_exports_retro_message_ext_clientData;
}
/* Name: _exports_retro_input_descriptor, Type: p_retro_input_descriptor, Dtor: _wrap_delete_retro_input_descriptor */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_input_descriptor_class = SWIGV8_CreateClassTemplate("_exports_retro_input_descriptor");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_input_descriptor_clientData.class_templ, _exports_retro_input_descriptor_class);
_exports_retro_input_descriptor_clientData.dtor = _wrap_delete_retro_input_descriptor;
if (SWIGTYPE_p_retro_input_descriptor->clientdata == 0) {
  SWIGTYPE_p_retro_input_descriptor->clientdata = &_exports_retro_input_descriptor_clientData;
}
/* Name: _exports_retro_system_info, Type: p_retro_system_info, Dtor: _wrap_delete_retro_system_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_info_class = SWIGV8_CreateClassTemplate("_exports_retro_system_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_system_info_clientData.class_templ, _exports_retro_system_info_class);
_exports_retro_system_info_clientData.dtor = _wrap_delete_retro_system_info;
if (SWIGTYPE_p_retro_system_info->clientdata == 0) {
  SWIGTYPE_p_retro_system_info->clientdata = &_exports_retro_system_info_clientData;
}
/* Name: _exports_retro_system_content_info_override, Type: p_retro_system_content_info_override, Dtor: _wrap_delete_retro_system_content_info_override */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_content_info_override_class = SWIGV8_CreateClassTemplate("_exports_retro_system_content_info_override");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_system_content_info_override_clientData.class_templ, _exports_retro_system_content_info_override_class);
_exports_retro_system_content_info_override_clientData.dtor = _wrap_delete_retro_system_content_info_override;
if (SWIGTYPE_p_retro_system_content_info_override->clientdata == 0) {
  SWIGTYPE_p_retro_system_content_info_override->clientdata = &_exports_retro_system_content_info_override_clientData;
}
/* Name: _exports_retro_game_info_ext, Type: p_retro_game_info_ext, Dtor: _wrap_delete_retro_game_info_ext */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_game_info_ext_class = SWIGV8_CreateClassTemplate("_exports_retro_game_info_ext");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_game_info_ext_clientData.class_templ, _exports_retro_game_info_ext_class);
_exports_retro_game_info_ext_clientData.dtor = _wrap_delete_retro_game_info_ext;
if (SWIGTYPE_p_retro_game_info_ext->clientdata == 0) {
  SWIGTYPE_p_retro_game_info_ext->clientdata = &_exports_retro_game_info_ext_clientData;
}
/* Name: _exports_retro_game_geometry, Type: p_retro_game_geometry, Dtor: _wrap_delete_retro_game_geometry */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_game_geometry_class = SWIGV8_CreateClassTemplate("_exports_retro_game_geometry");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_game_geometry_clientData.class_templ, _exports_retro_game_geometry_class);
_exports_retro_game_geometry_clientData.dtor = _wrap_delete_retro_game_geometry;
if (SWIGTYPE_p_retro_game_geometry->clientdata == 0) {
  SWIGTYPE_p_retro_game_geometry->clientdata = &_exports_retro_game_geometry_clientData;
}
/* Name: _exports_retro_system_timing, Type: p_retro_system_timing, Dtor: _wrap_delete_retro_system_timing */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_timing_class = SWIGV8_CreateClassTemplate("_exports_retro_system_timing");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_system_timing_clientData.class_templ, _exports_retro_system_timing_class);
_exports_retro_system_timing_clientData.dtor = _wrap_delete_retro_system_timing;
if (SWIGTYPE_p_retro_system_timing->clientdata == 0) {
  SWIGTYPE_p_retro_system_timing->clientdata = &_exports_retro_system_timing_clientData;
}
/* Name: _exports_retro_system_av_info, Type: p_retro_system_av_info, Dtor: _wrap_delete_retro_system_av_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_av_info_class = SWIGV8_CreateClassTemplate("_exports_retro_system_av_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_system_av_info_clientData.class_templ, _exports_retro_system_av_info_class);
_exports_retro_system_av_info_clientData.dtor = _wrap_delete_retro_system_av_info;
if (SWIGTYPE_p_retro_system_av_info->clientdata == 0) {
  SWIGTYPE_p_retro_system_av_info->clientdata = &_exports_retro_system_av_info_clientData;
}
/* Name: _exports_retro_variable, Type: p_retro_variable, Dtor: _wrap_delete_retro_variable */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_variable_class = SWIGV8_CreateClassTemplate("_exports_retro_variable");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_variable_clientData.class_templ, _exports_retro_variable_class);
_exports_retro_variable_clientData.dtor = _wrap_delete_retro_variable;
if (SWIGTYPE_p_retro_variable->clientdata == 0) {
  SWIGTYPE_p_retro_variable->clientdata = &_exports_retro_variable_clientData;
}
/* Name: _exports_retro_core_option_display, Type: p_retro_core_option_display, Dtor: _wrap_delete_retro_core_option_display */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_display_class = SWIGV8_CreateClassTemplate("_exports_retro_core_option_display");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_option_display_clientData.class_templ, _exports_retro_core_option_display_class);
_exports_retro_core_option_display_clientData.dtor = _wrap_delete_retro_core_option_display;
if (SWIGTYPE_p_retro_core_option_display->clientdata == 0) {
  SWIGTYPE_p_retro_core_option_display->clientdata = &_exports_retro_core_option_display_clientData;
}
/* Name: _exports_retro_core_option_value, Type: p_retro_core_option_value, Dtor: _wrap_delete_retro_core_option_value */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_value_class = SWIGV8_CreateClassTemplate("_exports_retro_core_option_value");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_option_value_clientData.class_templ, _exports_retro_core_option_value_class);
_exports_retro_core_option_value_clientData.dtor = _wrap_delete_retro_core_option_value;
if (SWIGTYPE_p_retro_core_option_value->clientdata == 0) {
  SWIGTYPE_p_retro_core_option_value->clientdata = &_exports_retro_core_option_value_clientData;
}
/* Name: _exports_retro_core_option_definition, Type: p_retro_core_option_definition, Dtor: _wrap_delete_retro_core_option_definition */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_definition_class = SWIGV8_CreateClassTemplate("_exports_retro_core_option_definition");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_option_definition_clientData.class_templ, _exports_retro_core_option_definition_class);
_exports_retro_core_option_definition_clientData.dtor = _wrap_delete_retro_core_option_definition;
if (SWIGTYPE_p_retro_core_option_definition->clientdata == 0) {
  SWIGTYPE_p_retro_core_option_definition->clientdata = &_exports_retro_core_option_definition_clientData;
}
/* Name: _exports_retro_core_options_intl, Type: p_retro_core_options_intl, Dtor: _wrap_delete_retro_core_options_intl */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_intl_class = SWIGV8_CreateClassTemplate("_exports_retro_core_options_intl");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_options_intl_clientData.class_templ, _exports_retro_core_options_intl_class);
_exports_retro_core_options_intl_clientData.dtor = _wrap_delete_retro_core_options_intl;
if (SWIGTYPE_p_retro_core_options_intl->clientdata == 0) {
  SWIGTYPE_p_retro_core_options_intl->clientdata = &_exports_retro_core_options_intl_clientData;
}
/* Name: _exports_retro_core_option_v2_category, Type: p_retro_core_option_v2_category, Dtor: _wrap_delete_retro_core_option_v2_category */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_v2_category_class = SWIGV8_CreateClassTemplate("_exports_retro_core_option_v2_category");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_option_v2_category_clientData.class_templ, _exports_retro_core_option_v2_category_class);
_exports_retro_core_option_v2_category_clientData.dtor = _wrap_delete_retro_core_option_v2_category;
if (SWIGTYPE_p_retro_core_option_v2_category->clientdata == 0) {
  SWIGTYPE_p_retro_core_option_v2_category->clientdata = &_exports_retro_core_option_v2_category_clientData;
}
/* Name: _exports_retro_core_option_v2_definition, Type: p_retro_core_option_v2_definition, Dtor: _wrap_delete_retro_core_option_v2_definition */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_v2_definition_class = SWIGV8_CreateClassTemplate("_exports_retro_core_option_v2_definition");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_option_v2_definition_clientData.class_templ, _exports_retro_core_option_v2_definition_class);
_exports_retro_core_option_v2_definition_clientData.dtor = _wrap_delete_retro_core_option_v2_definition;
if (SWIGTYPE_p_retro_core_option_v2_definition->clientdata == 0) {
  SWIGTYPE_p_retro_core_option_v2_definition->clientdata = &_exports_retro_core_option_v2_definition_clientData;
}
/* Name: _exports_retro_core_options_v2, Type: p_retro_core_options_v2, Dtor: _wrap_delete_retro_core_options_v2 */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_v2_class = SWIGV8_CreateClassTemplate("_exports_retro_core_options_v2");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_options_v2_clientData.class_templ, _exports_retro_core_options_v2_class);
_exports_retro_core_options_v2_clientData.dtor = _wrap_delete_retro_core_options_v2;
if (SWIGTYPE_p_retro_core_options_v2->clientdata == 0) {
  SWIGTYPE_p_retro_core_options_v2->clientdata = &_exports_retro_core_options_v2_clientData;
}
/* Name: _exports_retro_core_options_v2_intl, Type: p_retro_core_options_v2_intl, Dtor: _wrap_delete_retro_core_options_v2_intl */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_v2_intl_class = SWIGV8_CreateClassTemplate("_exports_retro_core_options_v2_intl");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_options_v2_intl_clientData.class_templ, _exports_retro_core_options_v2_intl_class);
_exports_retro_core_options_v2_intl_clientData.dtor = _wrap_delete_retro_core_options_v2_intl;
if (SWIGTYPE_p_retro_core_options_v2_intl->clientdata == 0) {
  SWIGTYPE_p_retro_core_options_v2_intl->clientdata = &_exports_retro_core_options_v2_intl_clientData;
}
/* Name: _exports_retro_core_options_update_display_callback, Type: p_retro_core_options_update_display_callback, Dtor: _wrap_delete_retro_core_options_update_display_callback */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_update_display_callback_class = SWIGV8_CreateClassTemplate("_exports_retro_core_options_update_display_callback");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_core_options_update_display_callback_clientData.class_templ, _exports_retro_core_options_update_display_callback_class);
_exports_retro_core_options_update_display_callback_clientData.dtor = _wrap_delete_retro_core_options_update_display_callback;
if (SWIGTYPE_p_retro_core_options_update_display_callback->clientdata == 0) {
  SWIGTYPE_p_retro_core_options_update_display_callback->clientdata = &_exports_retro_core_options_update_display_callback_clientData;
}
/* Name: _exports_retro_game_info, Type: p_retro_game_info, Dtor: _wrap_delete_retro_game_info */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_game_info_class = SWIGV8_CreateClassTemplate("_exports_retro_game_info");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_game_info_clientData.class_templ, _exports_retro_game_info_class);
_exports_retro_game_info_clientData.dtor = _wrap_delete_retro_game_info;
if (SWIGTYPE_p_retro_game_info->clientdata == 0) {
  SWIGTYPE_p_retro_game_info->clientdata = &_exports_retro_game_info_clientData;
}
/* Name: _exports_retro_framebuffer, Type: p_retro_framebuffer, Dtor: _wrap_delete_retro_framebuffer */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_framebuffer_class = SWIGV8_CreateClassTemplate("_exports_retro_framebuffer");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_framebuffer_clientData.class_templ, _exports_retro_framebuffer_class);
_exports_retro_framebuffer_clientData.dtor = _wrap_delete_retro_framebuffer;
if (SWIGTYPE_p_retro_framebuffer->clientdata == 0) {
  SWIGTYPE_p_retro_framebuffer->clientdata = &_exports_retro_framebuffer_clientData;
}
/* Name: _exports_retro_fastforwarding_override, Type: p_retro_fastforwarding_override, Dtor: _wrap_delete_retro_fastforwarding_override */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_fastforwarding_override_class = SWIGV8_CreateClassTemplate("_exports_retro_fastforwarding_override");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_fastforwarding_override_clientData.class_templ, _exports_retro_fastforwarding_override_class);
_exports_retro_fastforwarding_override_clientData.dtor = _wrap_delete_retro_fastforwarding_override;
if (SWIGTYPE_p_retro_fastforwarding_override->clientdata == 0) {
  SWIGTYPE_p_retro_fastforwarding_override->clientdata = &_exports_retro_fastforwarding_override_clientData;
}
/* Name: _exports_retro_throttle_state, Type: p_retro_throttle_state, Dtor: _wrap_delete_retro_throttle_state */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_throttle_state_class = SWIGV8_CreateClassTemplate("_exports_retro_throttle_state");
SWIGV8_SET_CLASS_TEMPL(_exports_retro_throttle_state_clientData.class_templ, _exports_retro_throttle_state_class);
_exports_retro_throttle_state_clientData.dtor = _wrap_delete_retro_throttle_state;
if (SWIGTYPE_p_retro_throttle_state->clientdata == 0) {
  SWIGTYPE_p_retro_throttle_state->clientdata = &_exports_retro_throttle_state_clientData;
}


  /* register wrapper functions */
  SWIGV8_AddStaticVariable(exports_obj, "RETRO_API_VERSION", _wrap_RETRO_API_VERSION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_TYPE_SHIFT", _wrap_RETRO_DEVICE_TYPE_SHIFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_MASK", _wrap_RETRO_DEVICE_MASK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_NONE", _wrap_RETRO_DEVICE_NONE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_JOYPAD", _wrap_RETRO_DEVICE_JOYPAD, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_MOUSE", _wrap_RETRO_DEVICE_MOUSE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_KEYBOARD", _wrap_RETRO_DEVICE_KEYBOARD, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_LIGHTGUN", _wrap_RETRO_DEVICE_LIGHTGUN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ANALOG", _wrap_RETRO_DEVICE_ANALOG, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_POINTER", _wrap_RETRO_DEVICE_POINTER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_B", _wrap_RETRO_DEVICE_ID_JOYPAD_B, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_Y", _wrap_RETRO_DEVICE_ID_JOYPAD_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_SELECT", _wrap_RETRO_DEVICE_ID_JOYPAD_SELECT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_START", _wrap_RETRO_DEVICE_ID_JOYPAD_START, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_UP", _wrap_RETRO_DEVICE_ID_JOYPAD_UP, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_DOWN", _wrap_RETRO_DEVICE_ID_JOYPAD_DOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_LEFT", _wrap_RETRO_DEVICE_ID_JOYPAD_LEFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_RIGHT", _wrap_RETRO_DEVICE_ID_JOYPAD_RIGHT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_A", _wrap_RETRO_DEVICE_ID_JOYPAD_A, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_X", _wrap_RETRO_DEVICE_ID_JOYPAD_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_L", _wrap_RETRO_DEVICE_ID_JOYPAD_L, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_R", _wrap_RETRO_DEVICE_ID_JOYPAD_R, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_L2", _wrap_RETRO_DEVICE_ID_JOYPAD_L2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_R2", _wrap_RETRO_DEVICE_ID_JOYPAD_R2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_L3", _wrap_RETRO_DEVICE_ID_JOYPAD_L3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_R3", _wrap_RETRO_DEVICE_ID_JOYPAD_R3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_JOYPAD_MASK", _wrap_RETRO_DEVICE_ID_JOYPAD_MASK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_INDEX_ANALOG_LEFT", _wrap_RETRO_DEVICE_INDEX_ANALOG_LEFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_INDEX_ANALOG_RIGHT", _wrap_RETRO_DEVICE_INDEX_ANALOG_RIGHT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_INDEX_ANALOG_BUTTON", _wrap_RETRO_DEVICE_INDEX_ANALOG_BUTTON, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_ANALOG_X", _wrap_RETRO_DEVICE_ID_ANALOG_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_ANALOG_Y", _wrap_RETRO_DEVICE_ID_ANALOG_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_X", _wrap_RETRO_DEVICE_ID_MOUSE_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_Y", _wrap_RETRO_DEVICE_ID_MOUSE_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_LEFT", _wrap_RETRO_DEVICE_ID_MOUSE_LEFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_RIGHT", _wrap_RETRO_DEVICE_ID_MOUSE_RIGHT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_WHEELUP", _wrap_RETRO_DEVICE_ID_MOUSE_WHEELUP, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_WHEELDOWN", _wrap_RETRO_DEVICE_ID_MOUSE_WHEELDOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_MIDDLE", _wrap_RETRO_DEVICE_ID_MOUSE_MIDDLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELUP", _wrap_RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELUP, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELDOWN", _wrap_RETRO_DEVICE_ID_MOUSE_HORIZ_WHEELDOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_BUTTON_4", _wrap_RETRO_DEVICE_ID_MOUSE_BUTTON_4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_MOUSE_BUTTON_5", _wrap_RETRO_DEVICE_ID_MOUSE_BUTTON_5, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_SCREEN_X", _wrap_RETRO_DEVICE_ID_LIGHTGUN_SCREEN_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_SCREEN_Y", _wrap_RETRO_DEVICE_ID_LIGHTGUN_SCREEN_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_IS_OFFSCREEN", _wrap_RETRO_DEVICE_ID_LIGHTGUN_IS_OFFSCREEN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_TRIGGER", _wrap_RETRO_DEVICE_ID_LIGHTGUN_TRIGGER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_RELOAD", _wrap_RETRO_DEVICE_ID_LIGHTGUN_RELOAD, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_AUX_A", _wrap_RETRO_DEVICE_ID_LIGHTGUN_AUX_A, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_AUX_B", _wrap_RETRO_DEVICE_ID_LIGHTGUN_AUX_B, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_START", _wrap_RETRO_DEVICE_ID_LIGHTGUN_START, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_SELECT", _wrap_RETRO_DEVICE_ID_LIGHTGUN_SELECT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_AUX_C", _wrap_RETRO_DEVICE_ID_LIGHTGUN_AUX_C, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_DPAD_UP", _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_UP, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_DPAD_DOWN", _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_DOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_DPAD_LEFT", _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_LEFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_DPAD_RIGHT", _wrap_RETRO_DEVICE_ID_LIGHTGUN_DPAD_RIGHT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_X", _wrap_RETRO_DEVICE_ID_LIGHTGUN_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_Y", _wrap_RETRO_DEVICE_ID_LIGHTGUN_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_CURSOR", _wrap_RETRO_DEVICE_ID_LIGHTGUN_CURSOR, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_TURBO", _wrap_RETRO_DEVICE_ID_LIGHTGUN_TURBO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_LIGHTGUN_PAUSE", _wrap_RETRO_DEVICE_ID_LIGHTGUN_PAUSE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_POINTER_X", _wrap_RETRO_DEVICE_ID_POINTER_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_POINTER_Y", _wrap_RETRO_DEVICE_ID_POINTER_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_POINTER_PRESSED", _wrap_RETRO_DEVICE_ID_POINTER_PRESSED, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_DEVICE_ID_POINTER_COUNT", _wrap_RETRO_DEVICE_ID_POINTER_COUNT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_REGION_NTSC", _wrap_RETRO_REGION_NTSC, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_REGION_PAL", _wrap_RETRO_REGION_PAL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_ENGLISH", _wrap_RETRO_LANGUAGE_ENGLISH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_JAPANESE", _wrap_RETRO_LANGUAGE_JAPANESE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_FRENCH", _wrap_RETRO_LANGUAGE_FRENCH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_SPANISH", _wrap_RETRO_LANGUAGE_SPANISH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_GERMAN", _wrap_RETRO_LANGUAGE_GERMAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_ITALIAN", _wrap_RETRO_LANGUAGE_ITALIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_DUTCH", _wrap_RETRO_LANGUAGE_DUTCH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_PORTUGUESE_BRAZIL", _wrap_RETRO_LANGUAGE_PORTUGUESE_BRAZIL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_PORTUGUESE_PORTUGAL", _wrap_RETRO_LANGUAGE_PORTUGUESE_PORTUGAL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_RUSSIAN", _wrap_RETRO_LANGUAGE_RUSSIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_KOREAN", _wrap_RETRO_LANGUAGE_KOREAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_CHINESE_TRADITIONAL", _wrap_RETRO_LANGUAGE_CHINESE_TRADITIONAL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_CHINESE_SIMPLIFIED", _wrap_RETRO_LANGUAGE_CHINESE_SIMPLIFIED, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_ESPERANTO", _wrap_RETRO_LANGUAGE_ESPERANTO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_POLISH", _wrap_RETRO_LANGUAGE_POLISH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_VIETNAMESE", _wrap_RETRO_LANGUAGE_VIETNAMESE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_ARABIC", _wrap_RETRO_LANGUAGE_ARABIC, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_GREEK", _wrap_RETRO_LANGUAGE_GREEK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_TURKISH", _wrap_RETRO_LANGUAGE_TURKISH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_SLOVAK", _wrap_RETRO_LANGUAGE_SLOVAK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_PERSIAN", _wrap_RETRO_LANGUAGE_PERSIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_HEBREW", _wrap_RETRO_LANGUAGE_HEBREW, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_ASTURIAN", _wrap_RETRO_LANGUAGE_ASTURIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_FINNISH", _wrap_RETRO_LANGUAGE_FINNISH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_INDONESIAN", _wrap_RETRO_LANGUAGE_INDONESIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_SWEDISH", _wrap_RETRO_LANGUAGE_SWEDISH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_UKRAINIAN", _wrap_RETRO_LANGUAGE_UKRAINIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_CZECH", _wrap_RETRO_LANGUAGE_CZECH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_VALENCIAN", _wrap_RETRO_LANGUAGE_VALENCIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_LAST", _wrap_RETRO_LANGUAGE_LAST, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LANGUAGE_DUMMY", _wrap_RETRO_LANGUAGE_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_MASK", _wrap_RETRO_MEMORY_MASK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_SAVE_RAM", _wrap_RETRO_MEMORY_SAVE_RAM, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_RTC", _wrap_RETRO_MEMORY_RTC, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_SYSTEM_RAM", _wrap_RETRO_MEMORY_SYSTEM_RAM, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_VIDEO_RAM", _wrap_RETRO_MEMORY_VIDEO_RAM, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_UNKNOWN", _wrap_RETROK_UNKNOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_FIRST", _wrap_RETROK_FIRST, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_BACKSPACE", _wrap_RETROK_BACKSPACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_TAB", _wrap_RETROK_TAB, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_CLEAR", _wrap_RETROK_CLEAR, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RETURN", _wrap_RETROK_RETURN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_PAUSE", _wrap_RETROK_PAUSE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_ESCAPE", _wrap_RETROK_ESCAPE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_SPACE", _wrap_RETROK_SPACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_EXCLAIM", _wrap_RETROK_EXCLAIM, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_QUOTEDBL", _wrap_RETROK_QUOTEDBL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_HASH", _wrap_RETROK_HASH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_DOLLAR", _wrap_RETROK_DOLLAR, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_AMPERSAND", _wrap_RETROK_AMPERSAND, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_QUOTE", _wrap_RETROK_QUOTE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LEFTPAREN", _wrap_RETROK_LEFTPAREN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RIGHTPAREN", _wrap_RETROK_RIGHTPAREN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_ASTERISK", _wrap_RETROK_ASTERISK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_PLUS", _wrap_RETROK_PLUS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_COMMA", _wrap_RETROK_COMMA, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_MINUS", _wrap_RETROK_MINUS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_PERIOD", _wrap_RETROK_PERIOD, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_SLASH", _wrap_RETROK_SLASH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_0", _wrap_RETROK_0, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_1", _wrap_RETROK_1, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_2", _wrap_RETROK_2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_3", _wrap_RETROK_3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_4", _wrap_RETROK_4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_5", _wrap_RETROK_5, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_6", _wrap_RETROK_6, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_7", _wrap_RETROK_7, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_8", _wrap_RETROK_8, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_9", _wrap_RETROK_9, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_COLON", _wrap_RETROK_COLON, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_SEMICOLON", _wrap_RETROK_SEMICOLON, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LESS", _wrap_RETROK_LESS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_EQUALS", _wrap_RETROK_EQUALS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_GREATER", _wrap_RETROK_GREATER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_QUESTION", _wrap_RETROK_QUESTION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_AT", _wrap_RETROK_AT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LEFTBRACKET", _wrap_RETROK_LEFTBRACKET, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_BACKSLASH", _wrap_RETROK_BACKSLASH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RIGHTBRACKET", _wrap_RETROK_RIGHTBRACKET, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_CARET", _wrap_RETROK_CARET, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_UNDERSCORE", _wrap_RETROK_UNDERSCORE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_BACKQUOTE", _wrap_RETROK_BACKQUOTE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_a", _wrap_RETROK_a, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_b", _wrap_RETROK_b, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_c", _wrap_RETROK_c, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_d", _wrap_RETROK_d, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_e", _wrap_RETROK_e, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_f", _wrap_RETROK_f, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_g", _wrap_RETROK_g, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_h", _wrap_RETROK_h, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_i", _wrap_RETROK_i, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_j", _wrap_RETROK_j, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_k", _wrap_RETROK_k, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_l", _wrap_RETROK_l, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_m", _wrap_RETROK_m, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_n", _wrap_RETROK_n, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_o", _wrap_RETROK_o, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_p", _wrap_RETROK_p, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_q", _wrap_RETROK_q, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_r", _wrap_RETROK_r, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_s", _wrap_RETROK_s, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_t", _wrap_RETROK_t, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_u", _wrap_RETROK_u, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_v", _wrap_RETROK_v, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_w", _wrap_RETROK_w, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_x", _wrap_RETROK_x, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_y", _wrap_RETROK_y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_z", _wrap_RETROK_z, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LEFTBRACE", _wrap_RETROK_LEFTBRACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_BAR", _wrap_RETROK_BAR, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RIGHTBRACE", _wrap_RETROK_RIGHTBRACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_TILDE", _wrap_RETROK_TILDE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_DELETE", _wrap_RETROK_DELETE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP0", _wrap_RETROK_KP0, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP1", _wrap_RETROK_KP1, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP2", _wrap_RETROK_KP2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP3", _wrap_RETROK_KP3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP4", _wrap_RETROK_KP4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP5", _wrap_RETROK_KP5, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP6", _wrap_RETROK_KP6, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP7", _wrap_RETROK_KP7, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP8", _wrap_RETROK_KP8, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP9", _wrap_RETROK_KP9, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP_PERIOD", _wrap_RETROK_KP_PERIOD, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP_DIVIDE", _wrap_RETROK_KP_DIVIDE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP_MULTIPLY", _wrap_RETROK_KP_MULTIPLY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP_MINUS", _wrap_RETROK_KP_MINUS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP_PLUS", _wrap_RETROK_KP_PLUS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP_ENTER", _wrap_RETROK_KP_ENTER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_KP_EQUALS", _wrap_RETROK_KP_EQUALS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_UP", _wrap_RETROK_UP, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_DOWN", _wrap_RETROK_DOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RIGHT", _wrap_RETROK_RIGHT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LEFT", _wrap_RETROK_LEFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_INSERT", _wrap_RETROK_INSERT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_HOME", _wrap_RETROK_HOME, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_END", _wrap_RETROK_END, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_PAGEUP", _wrap_RETROK_PAGEUP, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_PAGEDOWN", _wrap_RETROK_PAGEDOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F1", _wrap_RETROK_F1, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F2", _wrap_RETROK_F2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F3", _wrap_RETROK_F3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F4", _wrap_RETROK_F4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F5", _wrap_RETROK_F5, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F6", _wrap_RETROK_F6, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F7", _wrap_RETROK_F7, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F8", _wrap_RETROK_F8, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F9", _wrap_RETROK_F9, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F10", _wrap_RETROK_F10, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F11", _wrap_RETROK_F11, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F12", _wrap_RETROK_F12, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F13", _wrap_RETROK_F13, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F14", _wrap_RETROK_F14, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_F15", _wrap_RETROK_F15, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_NUMLOCK", _wrap_RETROK_NUMLOCK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_CAPSLOCK", _wrap_RETROK_CAPSLOCK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_SCROLLOCK", _wrap_RETROK_SCROLLOCK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RSHIFT", _wrap_RETROK_RSHIFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LSHIFT", _wrap_RETROK_LSHIFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RCTRL", _wrap_RETROK_RCTRL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LCTRL", _wrap_RETROK_LCTRL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RALT", _wrap_RETROK_RALT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LALT", _wrap_RETROK_LALT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RMETA", _wrap_RETROK_RMETA, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LMETA", _wrap_RETROK_LMETA, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LSUPER", _wrap_RETROK_LSUPER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_RSUPER", _wrap_RETROK_RSUPER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_MODE", _wrap_RETROK_MODE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_COMPOSE", _wrap_RETROK_COMPOSE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_HELP", _wrap_RETROK_HELP, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_PRINT", _wrap_RETROK_PRINT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_SYSREQ", _wrap_RETROK_SYSREQ, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_BREAK", _wrap_RETROK_BREAK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_MENU", _wrap_RETROK_MENU, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_POWER", _wrap_RETROK_POWER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_EURO", _wrap_RETROK_EURO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_UNDO", _wrap_RETROK_UNDO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_OEM_102", _wrap_RETROK_OEM_102, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_LAST", _wrap_RETROK_LAST, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROK_DUMMY", _wrap_RETROK_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_NONE", _wrap_RETROKMOD_NONE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_SHIFT", _wrap_RETROKMOD_SHIFT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_CTRL", _wrap_RETROKMOD_CTRL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_ALT", _wrap_RETROKMOD_ALT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_META", _wrap_RETROKMOD_META, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_NUMLOCK", _wrap_RETROKMOD_NUMLOCK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_CAPSLOCK", _wrap_RETROKMOD_CAPSLOCK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_SCROLLOCK", _wrap_RETROKMOD_SCROLLOCK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETROKMOD_DUMMY", _wrap_RETROKMOD_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_EXPERIMENTAL", _wrap_RETRO_ENVIRONMENT_EXPERIMENTAL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_PRIVATE", _wrap_RETRO_ENVIRONMENT_PRIVATE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_ROTATION", _wrap_RETRO_ENVIRONMENT_SET_ROTATION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_OVERSCAN", _wrap_RETRO_ENVIRONMENT_GET_OVERSCAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_CAN_DUPE", _wrap_RETRO_ENVIRONMENT_GET_CAN_DUPE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_MESSAGE", _wrap_RETRO_ENVIRONMENT_SET_MESSAGE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SHUTDOWN", _wrap_RETRO_ENVIRONMENT_SHUTDOWN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_PERFORMANCE_LEVEL", _wrap_RETRO_ENVIRONMENT_SET_PERFORMANCE_LEVEL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_SYSTEM_DIRECTORY", _wrap_RETRO_ENVIRONMENT_GET_SYSTEM_DIRECTORY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_PIXEL_FORMAT", _wrap_RETRO_ENVIRONMENT_SET_PIXEL_FORMAT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_INPUT_DESCRIPTORS", _wrap_RETRO_ENVIRONMENT_SET_INPUT_DESCRIPTORS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_KEYBOARD_CALLBACK", _wrap_RETRO_ENVIRONMENT_SET_KEYBOARD_CALLBACK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_DISK_CONTROL_INTERFACE", _wrap_RETRO_ENVIRONMENT_SET_DISK_CONTROL_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_HW_RENDER", _wrap_RETRO_ENVIRONMENT_SET_HW_RENDER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_VARIABLE", _wrap_RETRO_ENVIRONMENT_GET_VARIABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_VARIABLES", _wrap_RETRO_ENVIRONMENT_SET_VARIABLES, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_VARIABLE_UPDATE", _wrap_RETRO_ENVIRONMENT_GET_VARIABLE_UPDATE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_SUPPORT_NO_GAME", _wrap_RETRO_ENVIRONMENT_SET_SUPPORT_NO_GAME, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_LIBRETRO_PATH", _wrap_RETRO_ENVIRONMENT_GET_LIBRETRO_PATH, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_FRAME_TIME_CALLBACK", _wrap_RETRO_ENVIRONMENT_SET_FRAME_TIME_CALLBACK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_AUDIO_CALLBACK", _wrap_RETRO_ENVIRONMENT_SET_AUDIO_CALLBACK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_RUMBLE_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_RUMBLE_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_INPUT_DEVICE_CAPABILITIES", _wrap_RETRO_ENVIRONMENT_GET_INPUT_DEVICE_CAPABILITIES, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_SENSOR_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_SENSOR_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_CAMERA_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_CAMERA_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_LOG_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_LOG_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_PERF_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_PERF_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_LOCATION_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_LOCATION_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_CONTENT_DIRECTORY", _wrap_RETRO_ENVIRONMENT_GET_CONTENT_DIRECTORY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_CORE_ASSETS_DIRECTORY", _wrap_RETRO_ENVIRONMENT_GET_CORE_ASSETS_DIRECTORY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_SAVE_DIRECTORY", _wrap_RETRO_ENVIRONMENT_GET_SAVE_DIRECTORY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_SYSTEM_AV_INFO", _wrap_RETRO_ENVIRONMENT_SET_SYSTEM_AV_INFO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_PROC_ADDRESS_CALLBACK", _wrap_RETRO_ENVIRONMENT_SET_PROC_ADDRESS_CALLBACK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_SUBSYSTEM_INFO", _wrap_RETRO_ENVIRONMENT_SET_SUBSYSTEM_INFO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CONTROLLER_INFO", _wrap_RETRO_ENVIRONMENT_SET_CONTROLLER_INFO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_MEMORY_MAPS", _wrap_RETRO_ENVIRONMENT_SET_MEMORY_MAPS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_GEOMETRY", _wrap_RETRO_ENVIRONMENT_SET_GEOMETRY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_USERNAME", _wrap_RETRO_ENVIRONMENT_GET_USERNAME, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_LANGUAGE", _wrap_RETRO_ENVIRONMENT_GET_LANGUAGE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_CURRENT_SOFTWARE_FRAMEBUFFER", _wrap_RETRO_ENVIRONMENT_GET_CURRENT_SOFTWARE_FRAMEBUFFER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_HW_RENDER_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_HW_RENDER_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_SUPPORT_ACHIEVEMENTS", _wrap_RETRO_ENVIRONMENT_SET_SUPPORT_ACHIEVEMENTS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE", _wrap_RETRO_ENVIRONMENT_SET_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_SERIALIZATION_QUIRKS", _wrap_RETRO_ENVIRONMENT_SET_SERIALIZATION_QUIRKS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_HW_SHARED_CONTEXT", _wrap_RETRO_ENVIRONMENT_SET_HW_SHARED_CONTEXT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_VFS_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_VFS_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_LED_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_LED_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_AUDIO_VIDEO_ENABLE", _wrap_RETRO_ENVIRONMENT_GET_AUDIO_VIDEO_ENABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_MIDI_INTERFACE", _wrap_RETRO_ENVIRONMENT_GET_MIDI_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_FASTFORWARDING", _wrap_RETRO_ENVIRONMENT_GET_FASTFORWARDING, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_TARGET_REFRESH_RATE", _wrap_RETRO_ENVIRONMENT_GET_TARGET_REFRESH_RATE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_INPUT_BITMASKS", _wrap_RETRO_ENVIRONMENT_GET_INPUT_BITMASKS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_CORE_OPTIONS_VERSION", _wrap_RETRO_ENVIRONMENT_GET_CORE_OPTIONS_VERSION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CORE_OPTIONS", _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CORE_OPTIONS_INTL", _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_INTL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CORE_OPTIONS_DISPLAY", _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_DISPLAY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_PREFERRED_HW_RENDER", _wrap_RETRO_ENVIRONMENT_GET_PREFERRED_HW_RENDER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_DISK_CONTROL_INTERFACE_VERSION", _wrap_RETRO_ENVIRONMENT_GET_DISK_CONTROL_INTERFACE_VERSION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_DISK_CONTROL_EXT_INTERFACE", _wrap_RETRO_ENVIRONMENT_SET_DISK_CONTROL_EXT_INTERFACE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_MESSAGE_INTERFACE_VERSION", _wrap_RETRO_ENVIRONMENT_GET_MESSAGE_INTERFACE_VERSION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_MESSAGE_EXT", _wrap_RETRO_ENVIRONMENT_SET_MESSAGE_EXT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_INPUT_MAX_USERS", _wrap_RETRO_ENVIRONMENT_GET_INPUT_MAX_USERS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_AUDIO_BUFFER_STATUS_CALLBACK", _wrap_RETRO_ENVIRONMENT_SET_AUDIO_BUFFER_STATUS_CALLBACK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_MINIMUM_AUDIO_LATENCY", _wrap_RETRO_ENVIRONMENT_SET_MINIMUM_AUDIO_LATENCY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_FASTFORWARDING_OVERRIDE", _wrap_RETRO_ENVIRONMENT_SET_FASTFORWARDING_OVERRIDE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CONTENT_INFO_OVERRIDE", _wrap_RETRO_ENVIRONMENT_SET_CONTENT_INFO_OVERRIDE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_GAME_INFO_EXT", _wrap_RETRO_ENVIRONMENT_GET_GAME_INFO_EXT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CORE_OPTIONS_V2", _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_V2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CORE_OPTIONS_V2_INTL", _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_V2_INTL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_CORE_OPTIONS_UPDATE_DISPLAY_CALLBACK", _wrap_RETRO_ENVIRONMENT_SET_CORE_OPTIONS_UPDATE_DISPLAY_CALLBACK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_SET_VARIABLE", _wrap_RETRO_ENVIRONMENT_SET_VARIABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_ENVIRONMENT_GET_THROTTLE_STATE", _wrap_RETRO_ENVIRONMENT_GET_THROTTLE_STATE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_FILE_ACCESS_READ", _wrap_RETRO_VFS_FILE_ACCESS_READ, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_FILE_ACCESS_WRITE", _wrap_RETRO_VFS_FILE_ACCESS_WRITE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_FILE_ACCESS_READ_WRITE", _wrap_RETRO_VFS_FILE_ACCESS_READ_WRITE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_FILE_ACCESS_UPDATE_EXISTING", _wrap_RETRO_VFS_FILE_ACCESS_UPDATE_EXISTING, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_FILE_ACCESS_HINT_NONE", _wrap_RETRO_VFS_FILE_ACCESS_HINT_NONE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_FILE_ACCESS_HINT_FREQUENT_ACCESS", _wrap_RETRO_VFS_FILE_ACCESS_HINT_FREQUENT_ACCESS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_SEEK_POSITION_START", _wrap_RETRO_VFS_SEEK_POSITION_START, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_SEEK_POSITION_CURRENT", _wrap_RETRO_VFS_SEEK_POSITION_CURRENT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_SEEK_POSITION_END", _wrap_RETRO_VFS_SEEK_POSITION_END, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_STAT_IS_VALID", _wrap_RETRO_VFS_STAT_IS_VALID, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_STAT_IS_DIRECTORY", _wrap_RETRO_VFS_STAT_IS_DIRECTORY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_VFS_STAT_IS_CHARACTER_SPECIAL", _wrap_RETRO_VFS_STAT_IS_CHARACTER_SPECIAL, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "get_path", _wrap_retro_vfs_interface_get_path_get, _wrap_retro_vfs_interface_get_path_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "open", _wrap_retro_vfs_interface_open_get, _wrap_retro_vfs_interface_open_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "close", _wrap_retro_vfs_interface_close_get, _wrap_retro_vfs_interface_close_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "size", _wrap_retro_vfs_interface_size_get, _wrap_retro_vfs_interface_size_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "tell", _wrap_retro_vfs_interface_tell_get, _wrap_retro_vfs_interface_tell_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "seek", _wrap_retro_vfs_interface_seek_get, _wrap_retro_vfs_interface_seek_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "read", _wrap_retro_vfs_interface_read_get, _wrap_retro_vfs_interface_read_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "write", _wrap_retro_vfs_interface_write_get, _wrap_retro_vfs_interface_write_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "flush", _wrap_retro_vfs_interface_flush_get, _wrap_retro_vfs_interface_flush_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "remove", _wrap_retro_vfs_interface_remove_get, _wrap_retro_vfs_interface_remove_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "rename", _wrap_retro_vfs_interface_rename_get, _wrap_retro_vfs_interface_rename_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "truncate", _wrap_retro_vfs_interface_truncate_get, _wrap_retro_vfs_interface_truncate_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "stat", _wrap_retro_vfs_interface_stat_get, _wrap_retro_vfs_interface_stat_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "mkdir", _wrap_retro_vfs_interface_mkdir_get, _wrap_retro_vfs_interface_mkdir_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "opendir", _wrap_retro_vfs_interface_opendir_get, _wrap_retro_vfs_interface_opendir_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "readdir", _wrap_retro_vfs_interface_readdir_get, _wrap_retro_vfs_interface_readdir_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "dirent_get_name", _wrap_retro_vfs_interface_dirent_get_name_get, _wrap_retro_vfs_interface_dirent_get_name_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "dirent_is_dir", _wrap_retro_vfs_interface_dirent_is_dir_get, _wrap_retro_vfs_interface_dirent_is_dir_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_class, "closedir", _wrap_retro_vfs_interface_closedir_get, _wrap_retro_vfs_interface_closedir_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_info_class, "required_interface_version", _wrap_retro_vfs_interface_info_required_interface_version_get, _wrap_retro_vfs_interface_info_required_interface_version_set);
SWIGV8_AddMemberVariable(_exports_retro_vfs_interface_info_class, "iface", _wrap_retro_vfs_interface_info_iface_get, _wrap_retro_vfs_interface_info_iface_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_INTERFACE_VULKAN", _wrap_RETRO_HW_RENDER_INTERFACE_VULKAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_INTERFACE_D3D9", _wrap_RETRO_HW_RENDER_INTERFACE_D3D9, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_INTERFACE_D3D10", _wrap_RETRO_HW_RENDER_INTERFACE_D3D10, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_INTERFACE_D3D11", _wrap_RETRO_HW_RENDER_INTERFACE_D3D11, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_INTERFACE_D3D12", _wrap_RETRO_HW_RENDER_INTERFACE_D3D12, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_INTERFACE_GSKIT_PS2", _wrap_RETRO_HW_RENDER_INTERFACE_GSKIT_PS2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_INTERFACE_DUMMY", _wrap_RETRO_HW_RENDER_INTERFACE_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_interface_class, "interface_type", _wrap_retro_hw_render_interface_interface_type_get, _wrap_retro_hw_render_interface_interface_type_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_interface_class, "interface_version", _wrap_retro_hw_render_interface_interface_version_get, _wrap_retro_hw_render_interface_interface_version_set);
SWIGV8_AddMemberVariable(_exports_retro_led_interface_class, "set_led_state", _wrap_retro_led_interface_set_led_state_get, _wrap_retro_led_interface_set_led_state_set);
SWIGV8_AddMemberVariable(_exports_retro_midi_interface_class, "input_enabled", _wrap_retro_midi_interface_input_enabled_get, _wrap_retro_midi_interface_input_enabled_set);
SWIGV8_AddMemberVariable(_exports_retro_midi_interface_class, "output_enabled", _wrap_retro_midi_interface_output_enabled_get, _wrap_retro_midi_interface_output_enabled_set);
SWIGV8_AddMemberVariable(_exports_retro_midi_interface_class, "read", _wrap_retro_midi_interface_read_get, _wrap_retro_midi_interface_read_set);
SWIGV8_AddMemberVariable(_exports_retro_midi_interface_class, "write", _wrap_retro_midi_interface_write_get, _wrap_retro_midi_interface_write_set);
SWIGV8_AddMemberVariable(_exports_retro_midi_interface_class, "flush", _wrap_retro_midi_interface_flush_get, _wrap_retro_midi_interface_flush_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_VULKAN", _wrap_RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_VULKAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_DUMMY", _wrap_RETRO_HW_RENDER_CONTEXT_NEGOTIATION_INTERFACE_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_context_negotiation_interface_class, "interface_type", _wrap_retro_hw_render_context_negotiation_interface_interface_type_get, _wrap_retro_hw_render_context_negotiation_interface_interface_type_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_context_negotiation_interface_class, "interface_version", _wrap_retro_hw_render_context_negotiation_interface_interface_version_get, _wrap_retro_hw_render_context_negotiation_interface_interface_version_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SERIALIZATION_QUIRK_INCOMPLETE", _wrap_RETRO_SERIALIZATION_QUIRK_INCOMPLETE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SERIALIZATION_QUIRK_MUST_INITIALIZE", _wrap_RETRO_SERIALIZATION_QUIRK_MUST_INITIALIZE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SERIALIZATION_QUIRK_CORE_VARIABLE_SIZE", _wrap_RETRO_SERIALIZATION_QUIRK_CORE_VARIABLE_SIZE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SERIALIZATION_QUIRK_FRONT_VARIABLE_SIZE", _wrap_RETRO_SERIALIZATION_QUIRK_FRONT_VARIABLE_SIZE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SERIALIZATION_QUIRK_SINGLE_SESSION", _wrap_RETRO_SERIALIZATION_QUIRK_SINGLE_SESSION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SERIALIZATION_QUIRK_ENDIAN_DEPENDENT", _wrap_RETRO_SERIALIZATION_QUIRK_ENDIAN_DEPENDENT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SERIALIZATION_QUIRK_PLATFORM_DEPENDENT", _wrap_RETRO_SERIALIZATION_QUIRK_PLATFORM_DEPENDENT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_CONST", _wrap_RETRO_MEMDESC_CONST, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_BIGENDIAN", _wrap_RETRO_MEMDESC_BIGENDIAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_SYSTEM_RAM", _wrap_RETRO_MEMDESC_SYSTEM_RAM, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_SAVE_RAM", _wrap_RETRO_MEMDESC_SAVE_RAM, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_VIDEO_RAM", _wrap_RETRO_MEMDESC_VIDEO_RAM, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_ALIGN_2", _wrap_RETRO_MEMDESC_ALIGN_2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_ALIGN_4", _wrap_RETRO_MEMDESC_ALIGN_4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_ALIGN_8", _wrap_RETRO_MEMDESC_ALIGN_8, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_MINSIZE_2", _wrap_RETRO_MEMDESC_MINSIZE_2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_MINSIZE_4", _wrap_RETRO_MEMDESC_MINSIZE_4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMDESC_MINSIZE_8", _wrap_RETRO_MEMDESC_MINSIZE_8, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "flags", _wrap_retro_memory_descriptor_flags_get, _wrap_retro_memory_descriptor_flags_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "ptr", _wrap_retro_memory_descriptor_ptr_get, _wrap_retro_memory_descriptor_ptr_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "offset", _wrap_retro_memory_descriptor_offset_get, _wrap_retro_memory_descriptor_offset_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "start", _wrap_retro_memory_descriptor_start_get, _wrap_retro_memory_descriptor_start_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "select", _wrap_retro_memory_descriptor_select_get, _wrap_retro_memory_descriptor_select_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "disconnect", _wrap_retro_memory_descriptor_disconnect_get, _wrap_retro_memory_descriptor_disconnect_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "len", _wrap_retro_memory_descriptor_len_get, _wrap_retro_memory_descriptor_len_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_descriptor_class, "addrspace", _wrap_retro_memory_descriptor_addrspace_get, _wrap_retro_memory_descriptor_addrspace_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_map_class, "descriptors", _wrap_retro_memory_map_descriptors_get, _wrap_retro_memory_map_descriptors_set);
SWIGV8_AddMemberVariable(_exports_retro_memory_map_class, "num_descriptors", _wrap_retro_memory_map_num_descriptors_get, _wrap_retro_memory_map_num_descriptors_set);
SWIGV8_AddMemberVariable(_exports_retro_controller_description_class, "desc", _wrap_retro_controller_description_desc_get, _wrap_retro_controller_description_desc_set);
SWIGV8_AddMemberVariable(_exports_retro_controller_description_class, "id", _wrap_retro_controller_description_id_get, _wrap_retro_controller_description_id_set);
SWIGV8_AddMemberVariable(_exports_retro_controller_info_class, "types", _wrap_retro_controller_info_types_get, _wrap_retro_controller_info_types_set);
SWIGV8_AddMemberVariable(_exports_retro_controller_info_class, "num_types", _wrap_retro_controller_info_num_types_get, _wrap_retro_controller_info_num_types_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_memory_info_class, "extension", _wrap_retro_subsystem_memory_info_extension_get, _wrap_retro_subsystem_memory_info_extension_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_memory_info_class, "type", _wrap_retro_subsystem_memory_info_type_get, _wrap_retro_subsystem_memory_info_type_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_rom_info_class, "desc", _wrap_retro_subsystem_rom_info_desc_get, _wrap_retro_subsystem_rom_info_desc_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_rom_info_class, "valid_extensions", _wrap_retro_subsystem_rom_info_valid_extensions_get, _wrap_retro_subsystem_rom_info_valid_extensions_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_rom_info_class, "need_fullpath", _wrap_retro_subsystem_rom_info_need_fullpath_get, _wrap_retro_subsystem_rom_info_need_fullpath_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_rom_info_class, "block_extract", _wrap_retro_subsystem_rom_info_block_extract_get, _wrap_retro_subsystem_rom_info_block_extract_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_rom_info_class, "required", _wrap_retro_subsystem_rom_info_required_get, _wrap_retro_subsystem_rom_info_required_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_rom_info_class, "memory", _wrap_retro_subsystem_rom_info_memory_get, _wrap_retro_subsystem_rom_info_memory_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_rom_info_class, "num_memory", _wrap_retro_subsystem_rom_info_num_memory_get, _wrap_retro_subsystem_rom_info_num_memory_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_info_class, "desc", _wrap_retro_subsystem_info_desc_get, _wrap_retro_subsystem_info_desc_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_info_class, "ident", _wrap_retro_subsystem_info_ident_get, _wrap_retro_subsystem_info_ident_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_info_class, "roms", _wrap_retro_subsystem_info_roms_get, _wrap_retro_subsystem_info_roms_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_info_class, "num_roms", _wrap_retro_subsystem_info_num_roms_get, _wrap_retro_subsystem_info_num_roms_set);
SWIGV8_AddMemberVariable(_exports_retro_subsystem_info_class, "id", _wrap_retro_subsystem_info_id_get, _wrap_retro_subsystem_info_id_set);
SWIGV8_AddMemberVariable(_exports_retro_get_proc_address_interface_class, "get_proc_address", _wrap_retro_get_proc_address_interface_get_proc_address_get, _wrap_retro_get_proc_address_interface_get_proc_address_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LOG_DEBUG", _wrap_RETRO_LOG_DEBUG, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LOG_INFO", _wrap_RETRO_LOG_INFO, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LOG_WARN", _wrap_RETRO_LOG_WARN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LOG_ERROR", _wrap_RETRO_LOG_ERROR, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_LOG_DUMMY", _wrap_RETRO_LOG_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_log_callback_class, "log", _wrap_retro_log_callback_log_get, _wrap_retro_log_callback_log_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_SSE", _wrap_RETRO_SIMD_SSE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_SSE2", _wrap_RETRO_SIMD_SSE2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_VMX", _wrap_RETRO_SIMD_VMX, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_VMX128", _wrap_RETRO_SIMD_VMX128, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_AVX", _wrap_RETRO_SIMD_AVX, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_NEON", _wrap_RETRO_SIMD_NEON, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_SSE3", _wrap_RETRO_SIMD_SSE3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_SSSE3", _wrap_RETRO_SIMD_SSSE3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_MMX", _wrap_RETRO_SIMD_MMX, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_MMXEXT", _wrap_RETRO_SIMD_MMXEXT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_SSE4", _wrap_RETRO_SIMD_SSE4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_SSE42", _wrap_RETRO_SIMD_SSE42, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_AVX2", _wrap_RETRO_SIMD_AVX2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_VFPU", _wrap_RETRO_SIMD_VFPU, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_PS", _wrap_RETRO_SIMD_PS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_AES", _wrap_RETRO_SIMD_AES, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_VFPV3", _wrap_RETRO_SIMD_VFPV3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_VFPV4", _wrap_RETRO_SIMD_VFPV4, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_POPCNT", _wrap_RETRO_SIMD_POPCNT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_MOVBE", _wrap_RETRO_SIMD_MOVBE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_CMOV", _wrap_RETRO_SIMD_CMOV, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SIMD_ASIMD", _wrap_RETRO_SIMD_ASIMD, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_perf_counter_class, "ident", _wrap_retro_perf_counter_ident_get, _wrap_retro_perf_counter_ident_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_counter_class, "start", _wrap_retro_perf_counter_start_get, _wrap_retro_perf_counter_start_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_counter_class, "total", _wrap_retro_perf_counter_total_get, _wrap_retro_perf_counter_total_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_counter_class, "call_cnt", _wrap_retro_perf_counter_call_cnt_get, _wrap_retro_perf_counter_call_cnt_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_counter_class, "registered", _wrap_retro_perf_counter_registered_get, _wrap_retro_perf_counter_registered_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_callback_class, "get_time_usec", _wrap_retro_perf_callback_get_time_usec_get, _wrap_retro_perf_callback_get_time_usec_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_callback_class, "get_cpu_features", _wrap_retro_perf_callback_get_cpu_features_get, _wrap_retro_perf_callback_get_cpu_features_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_callback_class, "get_perf_counter", _wrap_retro_perf_callback_get_perf_counter_get, _wrap_retro_perf_callback_get_perf_counter_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_callback_class, "perf_register", _wrap_retro_perf_callback_perf_register_get, _wrap_retro_perf_callback_perf_register_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_callback_class, "perf_start", _wrap_retro_perf_callback_perf_start_get, _wrap_retro_perf_callback_perf_start_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_callback_class, "perf_stop", _wrap_retro_perf_callback_perf_stop_get, _wrap_retro_perf_callback_perf_stop_set);
SWIGV8_AddMemberVariable(_exports_retro_perf_callback_class, "perf_log", _wrap_retro_perf_callback_perf_log_get, _wrap_retro_perf_callback_perf_log_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ACCELEROMETER_ENABLE", _wrap_RETRO_SENSOR_ACCELEROMETER_ENABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ACCELEROMETER_DISABLE", _wrap_RETRO_SENSOR_ACCELEROMETER_DISABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_GYROSCOPE_ENABLE", _wrap_RETRO_SENSOR_GYROSCOPE_ENABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_GYROSCOPE_DISABLE", _wrap_RETRO_SENSOR_GYROSCOPE_DISABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ILLUMINANCE_ENABLE", _wrap_RETRO_SENSOR_ILLUMINANCE_ENABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ILLUMINANCE_DISABLE", _wrap_RETRO_SENSOR_ILLUMINANCE_DISABLE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_DUMMY", _wrap_RETRO_SENSOR_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ACCELEROMETER_X", _wrap_RETRO_SENSOR_ACCELEROMETER_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ACCELEROMETER_Y", _wrap_RETRO_SENSOR_ACCELEROMETER_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ACCELEROMETER_Z", _wrap_RETRO_SENSOR_ACCELEROMETER_Z, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_GYROSCOPE_X", _wrap_RETRO_SENSOR_GYROSCOPE_X, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_GYROSCOPE_Y", _wrap_RETRO_SENSOR_GYROSCOPE_Y, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_GYROSCOPE_Z", _wrap_RETRO_SENSOR_GYROSCOPE_Z, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_SENSOR_ILLUMINANCE", _wrap_RETRO_SENSOR_ILLUMINANCE, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_sensor_interface_class, "set_sensor_state", _wrap_retro_sensor_interface_set_sensor_state_get, _wrap_retro_sensor_interface_set_sensor_state_set);
SWIGV8_AddMemberVariable(_exports_retro_sensor_interface_class, "get_sensor_input", _wrap_retro_sensor_interface_get_sensor_input_get, _wrap_retro_sensor_interface_get_sensor_input_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_CAMERA_BUFFER_OPENGL_TEXTURE", _wrap_RETRO_CAMERA_BUFFER_OPENGL_TEXTURE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER", _wrap_RETRO_CAMERA_BUFFER_RAW_FRAMEBUFFER, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_CAMERA_BUFFER_DUMMY", _wrap_RETRO_CAMERA_BUFFER_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "caps", _wrap_retro_camera_callback_caps_get, _wrap_retro_camera_callback_caps_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "width", _wrap_retro_camera_callback_width_get, _wrap_retro_camera_callback_width_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "height", _wrap_retro_camera_callback_height_get, _wrap_retro_camera_callback_height_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "start", _wrap_retro_camera_callback_start_get, _wrap_retro_camera_callback_start_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "stop", _wrap_retro_camera_callback_stop_get, _wrap_retro_camera_callback_stop_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "frame_raw_framebuffer", _wrap_retro_camera_callback_frame_raw_framebuffer_get, _wrap_retro_camera_callback_frame_raw_framebuffer_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "frame_opengl_texture", _wrap_retro_camera_callback_frame_opengl_texture_get, _wrap_retro_camera_callback_frame_opengl_texture_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "initialized", _wrap_retro_camera_callback_initialized_get, _wrap_retro_camera_callback_initialized_set);
SWIGV8_AddMemberVariable(_exports_retro_camera_callback_class, "deinitialized", _wrap_retro_camera_callback_deinitialized_get, _wrap_retro_camera_callback_deinitialized_set);
SWIGV8_AddMemberVariable(_exports_retro_location_callback_class, "start", _wrap_retro_location_callback_start_get, _wrap_retro_location_callback_start_set);
SWIGV8_AddMemberVariable(_exports_retro_location_callback_class, "stop", _wrap_retro_location_callback_stop_get, _wrap_retro_location_callback_stop_set);
SWIGV8_AddMemberVariable(_exports_retro_location_callback_class, "get_position", _wrap_retro_location_callback_get_position_get, _wrap_retro_location_callback_get_position_set);
SWIGV8_AddMemberVariable(_exports_retro_location_callback_class, "set_interval", _wrap_retro_location_callback_set_interval_get, _wrap_retro_location_callback_set_interval_set);
SWIGV8_AddMemberVariable(_exports_retro_location_callback_class, "initialized", _wrap_retro_location_callback_initialized_get, _wrap_retro_location_callback_initialized_set);
SWIGV8_AddMemberVariable(_exports_retro_location_callback_class, "deinitialized", _wrap_retro_location_callback_deinitialized_get, _wrap_retro_location_callback_deinitialized_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_RUMBLE_STRONG", _wrap_RETRO_RUMBLE_STRONG, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_RUMBLE_WEAK", _wrap_RETRO_RUMBLE_WEAK, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_RUMBLE_DUMMY", _wrap_RETRO_RUMBLE_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_rumble_interface_class, "set_rumble_state", _wrap_retro_rumble_interface_set_rumble_state_get, _wrap_retro_rumble_interface_set_rumble_state_set);
SWIGV8_AddMemberVariable(_exports_retro_audio_callback_class, "callback", _wrap_retro_audio_callback_callback_get, _wrap_retro_audio_callback_callback_set);
SWIGV8_AddMemberVariable(_exports_retro_audio_callback_class, "set_state", _wrap_retro_audio_callback_set_state_get, _wrap_retro_audio_callback_set_state_set);
SWIGV8_AddMemberVariable(_exports_retro_frame_time_callback_class, "callback", _wrap_retro_frame_time_callback_callback_get, _wrap_retro_frame_time_callback_callback_set);
SWIGV8_AddMemberVariable(_exports_retro_frame_time_callback_class, "reference", _wrap_retro_frame_time_callback_reference_get, _wrap_retro_frame_time_callback_reference_set);
SWIGV8_AddMemberVariable(_exports_retro_audio_buffer_status_callback_class, "callback", _wrap_retro_audio_buffer_status_callback_callback_get, _wrap_retro_audio_buffer_status_callback_callback_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_NONE", _wrap_RETRO_HW_CONTEXT_NONE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_OPENGL", _wrap_RETRO_HW_CONTEXT_OPENGL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_OPENGLES2", _wrap_RETRO_HW_CONTEXT_OPENGLES2, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_OPENGL_CORE", _wrap_RETRO_HW_CONTEXT_OPENGL_CORE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_OPENGLES3", _wrap_RETRO_HW_CONTEXT_OPENGLES3, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_OPENGLES_VERSION", _wrap_RETRO_HW_CONTEXT_OPENGLES_VERSION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_VULKAN", _wrap_RETRO_HW_CONTEXT_VULKAN, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_DIRECT3D", _wrap_RETRO_HW_CONTEXT_DIRECT3D, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_HW_CONTEXT_DUMMY", _wrap_RETRO_HW_CONTEXT_DUMMY, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "context_type", _wrap_retro_hw_render_callback_context_type_get, _wrap_retro_hw_render_callback_context_type_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "context_reset", _wrap_retro_hw_render_callback_context_reset_get, _wrap_retro_hw_render_callback_context_reset_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "get_current_framebuffer", _wrap_retro_hw_render_callback_get_current_framebuffer_get, _wrap_retro_hw_render_callback_get_current_framebuffer_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "get_proc_address", _wrap_retro_hw_render_callback_get_proc_address_get, _wrap_retro_hw_render_callback_get_proc_address_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "depth", _wrap_retro_hw_render_callback_depth_get, _wrap_retro_hw_render_callback_depth_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "stencil", _wrap_retro_hw_render_callback_stencil_get, _wrap_retro_hw_render_callback_stencil_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "bottom_left_origin", _wrap_retro_hw_render_callback_bottom_left_origin_get, _wrap_retro_hw_render_callback_bottom_left_origin_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "version_major", _wrap_retro_hw_render_callback_version_major_get, _wrap_retro_hw_render_callback_version_major_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "version_minor", _wrap_retro_hw_render_callback_version_minor_get, _wrap_retro_hw_render_callback_version_minor_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "cache_context", _wrap_retro_hw_render_callback_cache_context_get, _wrap_retro_hw_render_callback_cache_context_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "context_destroy", _wrap_retro_hw_render_callback_context_destroy_get, _wrap_retro_hw_render_callback_context_destroy_set);
SWIGV8_AddMemberVariable(_exports_retro_hw_render_callback_class, "debug_context", _wrap_retro_hw_render_callback_debug_context_get, _wrap_retro_hw_render_callback_debug_context_set);
SWIGV8_AddMemberVariable(_exports_retro_keyboard_callback_class, "callback", _wrap_retro_keyboard_callback_callback_get, _wrap_retro_keyboard_callback_callback_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_callback_class, "set_eject_state", _wrap_retro_disk_control_callback_set_eject_state_get, _wrap_retro_disk_control_callback_set_eject_state_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_callback_class, "get_eject_state", _wrap_retro_disk_control_callback_get_eject_state_get, _wrap_retro_disk_control_callback_get_eject_state_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_callback_class, "get_image_index", _wrap_retro_disk_control_callback_get_image_index_get, _wrap_retro_disk_control_callback_get_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_callback_class, "set_image_index", _wrap_retro_disk_control_callback_set_image_index_get, _wrap_retro_disk_control_callback_set_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_callback_class, "get_num_images", _wrap_retro_disk_control_callback_get_num_images_get, _wrap_retro_disk_control_callback_get_num_images_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_callback_class, "replace_image_index", _wrap_retro_disk_control_callback_replace_image_index_get, _wrap_retro_disk_control_callback_replace_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_callback_class, "add_image_index", _wrap_retro_disk_control_callback_add_image_index_get, _wrap_retro_disk_control_callback_add_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "set_eject_state", _wrap_retro_disk_control_ext_callback_set_eject_state_get, _wrap_retro_disk_control_ext_callback_set_eject_state_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "get_eject_state", _wrap_retro_disk_control_ext_callback_get_eject_state_get, _wrap_retro_disk_control_ext_callback_get_eject_state_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "get_image_index", _wrap_retro_disk_control_ext_callback_get_image_index_get, _wrap_retro_disk_control_ext_callback_get_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "set_image_index", _wrap_retro_disk_control_ext_callback_set_image_index_get, _wrap_retro_disk_control_ext_callback_set_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "get_num_images", _wrap_retro_disk_control_ext_callback_get_num_images_get, _wrap_retro_disk_control_ext_callback_get_num_images_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "replace_image_index", _wrap_retro_disk_control_ext_callback_replace_image_index_get, _wrap_retro_disk_control_ext_callback_replace_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "add_image_index", _wrap_retro_disk_control_ext_callback_add_image_index_get, _wrap_retro_disk_control_ext_callback_add_image_index_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "set_initial_image", _wrap_retro_disk_control_ext_callback_set_initial_image_get, _wrap_retro_disk_control_ext_callback_set_initial_image_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "get_image_path", _wrap_retro_disk_control_ext_callback_get_image_path_get, _wrap_retro_disk_control_ext_callback_get_image_path_set);
SWIGV8_AddMemberVariable(_exports_retro_disk_control_ext_callback_class, "get_image_label", _wrap_retro_disk_control_ext_callback_get_image_label_get, _wrap_retro_disk_control_ext_callback_get_image_label_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_PIXEL_FORMAT_0RGB1555", _wrap_RETRO_PIXEL_FORMAT_0RGB1555, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_PIXEL_FORMAT_XRGB8888", _wrap_RETRO_PIXEL_FORMAT_XRGB8888, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_PIXEL_FORMAT_RGB565", _wrap_RETRO_PIXEL_FORMAT_RGB565, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_PIXEL_FORMAT_UNKNOWN", _wrap_RETRO_PIXEL_FORMAT_UNKNOWN, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_message_class, "msg", _wrap_retro_message_msg_get, _wrap_retro_message_msg_set);
SWIGV8_AddMemberVariable(_exports_retro_message_class, "frames", _wrap_retro_message_frames_get, _wrap_retro_message_frames_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MESSAGE_TARGET_ALL", _wrap_RETRO_MESSAGE_TARGET_ALL, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MESSAGE_TARGET_OSD", _wrap_RETRO_MESSAGE_TARGET_OSD, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MESSAGE_TARGET_LOG", _wrap_RETRO_MESSAGE_TARGET_LOG, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MESSAGE_TYPE_NOTIFICATION", _wrap_RETRO_MESSAGE_TYPE_NOTIFICATION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MESSAGE_TYPE_NOTIFICATION_ALT", _wrap_RETRO_MESSAGE_TYPE_NOTIFICATION_ALT, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MESSAGE_TYPE_STATUS", _wrap_RETRO_MESSAGE_TYPE_STATUS, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MESSAGE_TYPE_PROGRESS", _wrap_RETRO_MESSAGE_TYPE_PROGRESS, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_message_ext_class, "msg", _wrap_retro_message_ext_msg_get, _wrap_retro_message_ext_msg_set);
SWIGV8_AddMemberVariable(_exports_retro_message_ext_class, "duration", _wrap_retro_message_ext_duration_get, _wrap_retro_message_ext_duration_set);
SWIGV8_AddMemberVariable(_exports_retro_message_ext_class, "priority", _wrap_retro_message_ext_priority_get, _wrap_retro_message_ext_priority_set);
SWIGV8_AddMemberVariable(_exports_retro_message_ext_class, "level", _wrap_retro_message_ext_level_get, _wrap_retro_message_ext_level_set);
SWIGV8_AddMemberVariable(_exports_retro_message_ext_class, "target", _wrap_retro_message_ext_target_get, _wrap_retro_message_ext_target_set);
SWIGV8_AddMemberVariable(_exports_retro_message_ext_class, "type", _wrap_retro_message_ext_type_get, _wrap_retro_message_ext_type_set);
SWIGV8_AddMemberVariable(_exports_retro_message_ext_class, "progress", _wrap_retro_message_ext_progress_get, _wrap_retro_message_ext_progress_set);
SWIGV8_AddMemberVariable(_exports_retro_input_descriptor_class, "port", _wrap_retro_input_descriptor_port_get, _wrap_retro_input_descriptor_port_set);
SWIGV8_AddMemberVariable(_exports_retro_input_descriptor_class, "device", _wrap_retro_input_descriptor_device_get, _wrap_retro_input_descriptor_device_set);
SWIGV8_AddMemberVariable(_exports_retro_input_descriptor_class, "index", _wrap_retro_input_descriptor_index_get, _wrap_retro_input_descriptor_index_set);
SWIGV8_AddMemberVariable(_exports_retro_input_descriptor_class, "id", _wrap_retro_input_descriptor_id_get, _wrap_retro_input_descriptor_id_set);
SWIGV8_AddMemberVariable(_exports_retro_input_descriptor_class, "description", _wrap_retro_input_descriptor_description_get, _wrap_retro_input_descriptor_description_set);
SWIGV8_AddMemberVariable(_exports_retro_system_info_class, "library_name", _wrap_retro_system_info_library_name_get, _wrap_retro_system_info_library_name_set);
SWIGV8_AddMemberVariable(_exports_retro_system_info_class, "library_version", _wrap_retro_system_info_library_version_get, _wrap_retro_system_info_library_version_set);
SWIGV8_AddMemberVariable(_exports_retro_system_info_class, "valid_extensions", _wrap_retro_system_info_valid_extensions_get, _wrap_retro_system_info_valid_extensions_set);
SWIGV8_AddMemberVariable(_exports_retro_system_info_class, "need_fullpath", _wrap_retro_system_info_need_fullpath_get, _wrap_retro_system_info_need_fullpath_set);
SWIGV8_AddMemberVariable(_exports_retro_system_info_class, "block_extract", _wrap_retro_system_info_block_extract_get, _wrap_retro_system_info_block_extract_set);
SWIGV8_AddMemberVariable(_exports_retro_system_content_info_override_class, "extensions", _wrap_retro_system_content_info_override_extensions_get, _wrap_retro_system_content_info_override_extensions_set);
SWIGV8_AddMemberVariable(_exports_retro_system_content_info_override_class, "need_fullpath", _wrap_retro_system_content_info_override_need_fullpath_get, _wrap_retro_system_content_info_override_need_fullpath_set);
SWIGV8_AddMemberVariable(_exports_retro_system_content_info_override_class, "persistent_data", _wrap_retro_system_content_info_override_persistent_data_get, _wrap_retro_system_content_info_override_persistent_data_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "full_path", _wrap_retro_game_info_ext_full_path_get, _wrap_retro_game_info_ext_full_path_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "archive_path", _wrap_retro_game_info_ext_archive_path_get, _wrap_retro_game_info_ext_archive_path_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "archive_file", _wrap_retro_game_info_ext_archive_file_get, _wrap_retro_game_info_ext_archive_file_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "dir", _wrap_retro_game_info_ext_dir_get, _wrap_retro_game_info_ext_dir_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "name", _wrap_retro_game_info_ext_name_get, _wrap_retro_game_info_ext_name_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "ext", _wrap_retro_game_info_ext_ext_get, _wrap_retro_game_info_ext_ext_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "meta", _wrap_retro_game_info_ext_meta_get, _wrap_retro_game_info_ext_meta_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "data", _wrap_retro_game_info_ext_data_get, _wrap_retro_game_info_ext_data_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "size", _wrap_retro_game_info_ext_size_get, _wrap_retro_game_info_ext_size_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "file_in_archive", _wrap_retro_game_info_ext_file_in_archive_get, _wrap_retro_game_info_ext_file_in_archive_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_ext_class, "persistent_data", _wrap_retro_game_info_ext_persistent_data_get, _wrap_retro_game_info_ext_persistent_data_set);
SWIGV8_AddMemberVariable(_exports_retro_game_geometry_class, "base_width", _wrap_retro_game_geometry_base_width_get, _wrap_retro_game_geometry_base_width_set);
SWIGV8_AddMemberVariable(_exports_retro_game_geometry_class, "base_height", _wrap_retro_game_geometry_base_height_get, _wrap_retro_game_geometry_base_height_set);
SWIGV8_AddMemberVariable(_exports_retro_game_geometry_class, "max_width", _wrap_retro_game_geometry_max_width_get, _wrap_retro_game_geometry_max_width_set);
SWIGV8_AddMemberVariable(_exports_retro_game_geometry_class, "max_height", _wrap_retro_game_geometry_max_height_get, _wrap_retro_game_geometry_max_height_set);
SWIGV8_AddMemberVariable(_exports_retro_game_geometry_class, "aspect_ratio", _wrap_retro_game_geometry_aspect_ratio_get, _wrap_retro_game_geometry_aspect_ratio_set);
SWIGV8_AddMemberVariable(_exports_retro_system_timing_class, "fps", _wrap_retro_system_timing_fps_get, _wrap_retro_system_timing_fps_set);
SWIGV8_AddMemberVariable(_exports_retro_system_timing_class, "sample_rate", _wrap_retro_system_timing_sample_rate_get, _wrap_retro_system_timing_sample_rate_set);
SWIGV8_AddMemberVariable(_exports_retro_system_av_info_class, "geometry", _wrap_retro_system_av_info_geometry_get, _wrap_retro_system_av_info_geometry_set);
SWIGV8_AddMemberVariable(_exports_retro_system_av_info_class, "timing", _wrap_retro_system_av_info_timing_get, _wrap_retro_system_av_info_timing_set);
SWIGV8_AddMemberVariable(_exports_retro_variable_class, "key", _wrap_retro_variable_key_get, _wrap_retro_variable_key_set);
SWIGV8_AddMemberVariable(_exports_retro_variable_class, "value", _wrap_retro_variable_value_get, _wrap_retro_variable_value_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_display_class, "key", _wrap_retro_core_option_display_key_get, _wrap_retro_core_option_display_key_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_display_class, "visible", _wrap_retro_core_option_display_visible_get, _wrap_retro_core_option_display_visible_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_NUM_CORE_OPTION_VALUES_MAX", _wrap_RETRO_NUM_CORE_OPTION_VALUES_MAX, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_core_option_value_class, "value", _wrap_retro_core_option_value_value_get, _wrap_retro_core_option_value_value_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_value_class, "label", _wrap_retro_core_option_value_label_get, _wrap_retro_core_option_value_label_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_definition_class, "key", _wrap_retro_core_option_definition_key_get, _wrap_retro_core_option_definition_key_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_definition_class, "desc", _wrap_retro_core_option_definition_desc_get, _wrap_retro_core_option_definition_desc_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_definition_class, "info", _wrap_retro_core_option_definition_info_get, _wrap_retro_core_option_definition_info_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_definition_class, "values", _wrap_retro_core_option_definition_values_get, _wrap_retro_core_option_definition_values_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_definition_class, "default_value", _wrap_retro_core_option_definition_default_value_get, _wrap_retro_core_option_definition_default_value_set);
SWIGV8_AddMemberVariable(_exports_retro_core_options_intl_class, "us", _wrap_retro_core_options_intl_us_get, _wrap_retro_core_options_intl_us_set);
SWIGV8_AddMemberVariable(_exports_retro_core_options_intl_class, "local", _wrap_retro_core_options_intl_local_get, _wrap_retro_core_options_intl_local_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_category_class, "key", _wrap_retro_core_option_v2_category_key_get, _wrap_retro_core_option_v2_category_key_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_category_class, "desc", _wrap_retro_core_option_v2_category_desc_get, _wrap_retro_core_option_v2_category_desc_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_category_class, "info", _wrap_retro_core_option_v2_category_info_get, _wrap_retro_core_option_v2_category_info_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "key", _wrap_retro_core_option_v2_definition_key_get, _wrap_retro_core_option_v2_definition_key_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "desc", _wrap_retro_core_option_v2_definition_desc_get, _wrap_retro_core_option_v2_definition_desc_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "desc_categorized", _wrap_retro_core_option_v2_definition_desc_categorized_get, _wrap_retro_core_option_v2_definition_desc_categorized_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "info", _wrap_retro_core_option_v2_definition_info_get, _wrap_retro_core_option_v2_definition_info_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "info_categorized", _wrap_retro_core_option_v2_definition_info_categorized_get, _wrap_retro_core_option_v2_definition_info_categorized_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "category_key", _wrap_retro_core_option_v2_definition_category_key_get, _wrap_retro_core_option_v2_definition_category_key_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "values", _wrap_retro_core_option_v2_definition_values_get, _wrap_retro_core_option_v2_definition_values_set);
SWIGV8_AddMemberVariable(_exports_retro_core_option_v2_definition_class, "default_value", _wrap_retro_core_option_v2_definition_default_value_get, _wrap_retro_core_option_v2_definition_default_value_set);
SWIGV8_AddMemberVariable(_exports_retro_core_options_v2_class, "categories", _wrap_retro_core_options_v2_categories_get, _wrap_retro_core_options_v2_categories_set);
SWIGV8_AddMemberVariable(_exports_retro_core_options_v2_class, "definitions", _wrap_retro_core_options_v2_definitions_get, _wrap_retro_core_options_v2_definitions_set);
SWIGV8_AddMemberVariable(_exports_retro_core_options_v2_intl_class, "us", _wrap_retro_core_options_v2_intl_us_get, _wrap_retro_core_options_v2_intl_us_set);
SWIGV8_AddMemberVariable(_exports_retro_core_options_v2_intl_class, "local", _wrap_retro_core_options_v2_intl_local_get, _wrap_retro_core_options_v2_intl_local_set);
SWIGV8_AddMemberVariable(_exports_retro_core_options_update_display_callback_class, "callback", _wrap_retro_core_options_update_display_callback_callback_get, _wrap_retro_core_options_update_display_callback_callback_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_class, "path", _wrap_retro_game_info_path_get, _wrap_retro_game_info_path_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_class, "data", _wrap_retro_game_info_data_get, _wrap_retro_game_info_data_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_class, "size", _wrap_retro_game_info_size_get, _wrap_retro_game_info_size_set);
SWIGV8_AddMemberVariable(_exports_retro_game_info_class, "meta", _wrap_retro_game_info_meta_get, _wrap_retro_game_info_meta_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_ACCESS_WRITE", _wrap_RETRO_MEMORY_ACCESS_WRITE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_ACCESS_READ", _wrap_RETRO_MEMORY_ACCESS_READ, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_MEMORY_TYPE_CACHED", _wrap_RETRO_MEMORY_TYPE_CACHED, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_framebuffer_class, "data", _wrap_retro_framebuffer_data_get, _wrap_retro_framebuffer_data_set);
SWIGV8_AddMemberVariable(_exports_retro_framebuffer_class, "width", _wrap_retro_framebuffer_width_get, _wrap_retro_framebuffer_width_set);
SWIGV8_AddMemberVariable(_exports_retro_framebuffer_class, "height", _wrap_retro_framebuffer_height_get, _wrap_retro_framebuffer_height_set);
SWIGV8_AddMemberVariable(_exports_retro_framebuffer_class, "pitch", _wrap_retro_framebuffer_pitch_get, _wrap_retro_framebuffer_pitch_set);
SWIGV8_AddMemberVariable(_exports_retro_framebuffer_class, "format", _wrap_retro_framebuffer_format_get, _wrap_retro_framebuffer_format_set);
SWIGV8_AddMemberVariable(_exports_retro_framebuffer_class, "access_flags", _wrap_retro_framebuffer_access_flags_get, _wrap_retro_framebuffer_access_flags_set);
SWIGV8_AddMemberVariable(_exports_retro_framebuffer_class, "memory_flags", _wrap_retro_framebuffer_memory_flags_get, _wrap_retro_framebuffer_memory_flags_set);
SWIGV8_AddMemberVariable(_exports_retro_fastforwarding_override_class, "ratio", _wrap_retro_fastforwarding_override_ratio_get, _wrap_retro_fastforwarding_override_ratio_set);
SWIGV8_AddMemberVariable(_exports_retro_fastforwarding_override_class, "fastforward", _wrap_retro_fastforwarding_override_fastforward_get, _wrap_retro_fastforwarding_override_fastforward_set);
SWIGV8_AddMemberVariable(_exports_retro_fastforwarding_override_class, "notification", _wrap_retro_fastforwarding_override_notification_get, _wrap_retro_fastforwarding_override_notification_set);
SWIGV8_AddMemberVariable(_exports_retro_fastforwarding_override_class, "inhibit_toggle", _wrap_retro_fastforwarding_override_inhibit_toggle_get, _wrap_retro_fastforwarding_override_inhibit_toggle_set);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_THROTTLE_NONE", _wrap_RETRO_THROTTLE_NONE, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_THROTTLE_FRAME_STEPPING", _wrap_RETRO_THROTTLE_FRAME_STEPPING, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_THROTTLE_FAST_FORWARD", _wrap_RETRO_THROTTLE_FAST_FORWARD, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_THROTTLE_SLOW_MOTION", _wrap_RETRO_THROTTLE_SLOW_MOTION, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_THROTTLE_REWINDING", _wrap_RETRO_THROTTLE_REWINDING, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_THROTTLE_VSYNC", _wrap_RETRO_THROTTLE_VSYNC, JS_veto_set_variable, context);
SWIGV8_AddStaticVariable(exports_obj, "RETRO_THROTTLE_UNBLOCKED", _wrap_RETRO_THROTTLE_UNBLOCKED, JS_veto_set_variable, context);
SWIGV8_AddMemberVariable(_exports_retro_throttle_state_class, "mode", _wrap_retro_throttle_state_mode_get, _wrap_retro_throttle_state_mode_set);
SWIGV8_AddMemberVariable(_exports_retro_throttle_state_class, "rate", _wrap_retro_throttle_state_rate_get, _wrap_retro_throttle_state_rate_set);


  /* setup inheritances */
  

  /* class instances */
  /* Class: retro_vfs_interface (_exports_retro_vfs_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_vfs_interface_class_0 = SWIGV8_CreateClassTemplate("retro_vfs_interface");
_exports_retro_vfs_interface_class_0->SetCallHandler(_wrap_new_retro_vfs_interface);
_exports_retro_vfs_interface_class_0->Inherit(_exports_retro_vfs_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_vfs_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_vfs_interface_obj = _exports_retro_vfs_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_vfs_interface_obj = _exports_retro_vfs_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_vfs_interface_info (_exports_retro_vfs_interface_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_vfs_interface_info_class_0 = SWIGV8_CreateClassTemplate("retro_vfs_interface_info");
_exports_retro_vfs_interface_info_class_0->SetCallHandler(_wrap_new_retro_vfs_interface_info);
_exports_retro_vfs_interface_info_class_0->Inherit(_exports_retro_vfs_interface_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_vfs_interface_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_vfs_interface_info_obj = _exports_retro_vfs_interface_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_vfs_interface_info_obj = _exports_retro_vfs_interface_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_hw_render_interface (_exports_retro_hw_render_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_hw_render_interface_class_0 = SWIGV8_CreateClassTemplate("retro_hw_render_interface");
_exports_retro_hw_render_interface_class_0->SetCallHandler(_wrap_new_retro_hw_render_interface);
_exports_retro_hw_render_interface_class_0->Inherit(_exports_retro_hw_render_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_hw_render_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_hw_render_interface_obj = _exports_retro_hw_render_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_hw_render_interface_obj = _exports_retro_hw_render_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_led_interface (_exports_retro_led_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_led_interface_class_0 = SWIGV8_CreateClassTemplate("retro_led_interface");
_exports_retro_led_interface_class_0->SetCallHandler(_wrap_new_retro_led_interface);
_exports_retro_led_interface_class_0->Inherit(_exports_retro_led_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_led_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_led_interface_obj = _exports_retro_led_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_led_interface_obj = _exports_retro_led_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_midi_interface (_exports_retro_midi_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_midi_interface_class_0 = SWIGV8_CreateClassTemplate("retro_midi_interface");
_exports_retro_midi_interface_class_0->SetCallHandler(_wrap_new_retro_midi_interface);
_exports_retro_midi_interface_class_0->Inherit(_exports_retro_midi_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_midi_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_midi_interface_obj = _exports_retro_midi_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_midi_interface_obj = _exports_retro_midi_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_hw_render_context_negotiation_interface (_exports_retro_hw_render_context_negotiation_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_hw_render_context_negotiation_interface_class_0 = SWIGV8_CreateClassTemplate("retro_hw_render_context_negotiation_interface");
_exports_retro_hw_render_context_negotiation_interface_class_0->SetCallHandler(_wrap_new_retro_hw_render_context_negotiation_interface);
_exports_retro_hw_render_context_negotiation_interface_class_0->Inherit(_exports_retro_hw_render_context_negotiation_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_hw_render_context_negotiation_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_hw_render_context_negotiation_interface_obj = _exports_retro_hw_render_context_negotiation_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_hw_render_context_negotiation_interface_obj = _exports_retro_hw_render_context_negotiation_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_memory_descriptor (_exports_retro_memory_descriptor) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_memory_descriptor_class_0 = SWIGV8_CreateClassTemplate("retro_memory_descriptor");
_exports_retro_memory_descriptor_class_0->SetCallHandler(_wrap_new_retro_memory_descriptor);
_exports_retro_memory_descriptor_class_0->Inherit(_exports_retro_memory_descriptor_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_memory_descriptor_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_memory_descriptor_obj = _exports_retro_memory_descriptor_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_memory_descriptor_obj = _exports_retro_memory_descriptor_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_memory_map (_exports_retro_memory_map) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_memory_map_class_0 = SWIGV8_CreateClassTemplate("retro_memory_map");
_exports_retro_memory_map_class_0->SetCallHandler(_wrap_new_retro_memory_map);
_exports_retro_memory_map_class_0->Inherit(_exports_retro_memory_map_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_memory_map_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_memory_map_obj = _exports_retro_memory_map_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_memory_map_obj = _exports_retro_memory_map_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_controller_description (_exports_retro_controller_description) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_controller_description_class_0 = SWIGV8_CreateClassTemplate("retro_controller_description");
_exports_retro_controller_description_class_0->SetCallHandler(_wrap_new_retro_controller_description);
_exports_retro_controller_description_class_0->Inherit(_exports_retro_controller_description_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_controller_description_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_controller_description_obj = _exports_retro_controller_description_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_controller_description_obj = _exports_retro_controller_description_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_controller_info (_exports_retro_controller_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_controller_info_class_0 = SWIGV8_CreateClassTemplate("retro_controller_info");
_exports_retro_controller_info_class_0->SetCallHandler(_wrap_new_retro_controller_info);
_exports_retro_controller_info_class_0->Inherit(_exports_retro_controller_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_controller_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_controller_info_obj = _exports_retro_controller_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_controller_info_obj = _exports_retro_controller_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_subsystem_memory_info (_exports_retro_subsystem_memory_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_subsystem_memory_info_class_0 = SWIGV8_CreateClassTemplate("retro_subsystem_memory_info");
_exports_retro_subsystem_memory_info_class_0->SetCallHandler(_wrap_new_retro_subsystem_memory_info);
_exports_retro_subsystem_memory_info_class_0->Inherit(_exports_retro_subsystem_memory_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_subsystem_memory_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_subsystem_memory_info_obj = _exports_retro_subsystem_memory_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_subsystem_memory_info_obj = _exports_retro_subsystem_memory_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_subsystem_rom_info (_exports_retro_subsystem_rom_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_subsystem_rom_info_class_0 = SWIGV8_CreateClassTemplate("retro_subsystem_rom_info");
_exports_retro_subsystem_rom_info_class_0->SetCallHandler(_wrap_new_retro_subsystem_rom_info);
_exports_retro_subsystem_rom_info_class_0->Inherit(_exports_retro_subsystem_rom_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_subsystem_rom_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_subsystem_rom_info_obj = _exports_retro_subsystem_rom_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_subsystem_rom_info_obj = _exports_retro_subsystem_rom_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_subsystem_info (_exports_retro_subsystem_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_subsystem_info_class_0 = SWIGV8_CreateClassTemplate("retro_subsystem_info");
_exports_retro_subsystem_info_class_0->SetCallHandler(_wrap_new_retro_subsystem_info);
_exports_retro_subsystem_info_class_0->Inherit(_exports_retro_subsystem_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_subsystem_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_subsystem_info_obj = _exports_retro_subsystem_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_subsystem_info_obj = _exports_retro_subsystem_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_get_proc_address_interface (_exports_retro_get_proc_address_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_get_proc_address_interface_class_0 = SWIGV8_CreateClassTemplate("retro_get_proc_address_interface");
_exports_retro_get_proc_address_interface_class_0->SetCallHandler(_wrap_new_retro_get_proc_address_interface);
_exports_retro_get_proc_address_interface_class_0->Inherit(_exports_retro_get_proc_address_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_get_proc_address_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_get_proc_address_interface_obj = _exports_retro_get_proc_address_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_get_proc_address_interface_obj = _exports_retro_get_proc_address_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_log_callback (_exports_retro_log_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_log_callback_class_0 = SWIGV8_CreateClassTemplate("retro_log_callback");
_exports_retro_log_callback_class_0->SetCallHandler(_wrap_new_retro_log_callback);
_exports_retro_log_callback_class_0->Inherit(_exports_retro_log_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_log_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_log_callback_obj = _exports_retro_log_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_log_callback_obj = _exports_retro_log_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_perf_counter (_exports_retro_perf_counter) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_perf_counter_class_0 = SWIGV8_CreateClassTemplate("retro_perf_counter");
_exports_retro_perf_counter_class_0->SetCallHandler(_wrap_new_retro_perf_counter);
_exports_retro_perf_counter_class_0->Inherit(_exports_retro_perf_counter_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_perf_counter_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_perf_counter_obj = _exports_retro_perf_counter_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_perf_counter_obj = _exports_retro_perf_counter_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_perf_callback (_exports_retro_perf_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_perf_callback_class_0 = SWIGV8_CreateClassTemplate("retro_perf_callback");
_exports_retro_perf_callback_class_0->SetCallHandler(_wrap_new_retro_perf_callback);
_exports_retro_perf_callback_class_0->Inherit(_exports_retro_perf_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_perf_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_perf_callback_obj = _exports_retro_perf_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_perf_callback_obj = _exports_retro_perf_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_sensor_interface (_exports_retro_sensor_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_sensor_interface_class_0 = SWIGV8_CreateClassTemplate("retro_sensor_interface");
_exports_retro_sensor_interface_class_0->SetCallHandler(_wrap_new_retro_sensor_interface);
_exports_retro_sensor_interface_class_0->Inherit(_exports_retro_sensor_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_sensor_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_sensor_interface_obj = _exports_retro_sensor_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_sensor_interface_obj = _exports_retro_sensor_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_camera_callback (_exports_retro_camera_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_camera_callback_class_0 = SWIGV8_CreateClassTemplate("retro_camera_callback");
_exports_retro_camera_callback_class_0->SetCallHandler(_wrap_new_retro_camera_callback);
_exports_retro_camera_callback_class_0->Inherit(_exports_retro_camera_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_camera_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_camera_callback_obj = _exports_retro_camera_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_camera_callback_obj = _exports_retro_camera_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_location_callback (_exports_retro_location_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_location_callback_class_0 = SWIGV8_CreateClassTemplate("retro_location_callback");
_exports_retro_location_callback_class_0->SetCallHandler(_wrap_new_retro_location_callback);
_exports_retro_location_callback_class_0->Inherit(_exports_retro_location_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_location_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_location_callback_obj = _exports_retro_location_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_location_callback_obj = _exports_retro_location_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_rumble_interface (_exports_retro_rumble_interface) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_rumble_interface_class_0 = SWIGV8_CreateClassTemplate("retro_rumble_interface");
_exports_retro_rumble_interface_class_0->SetCallHandler(_wrap_new_retro_rumble_interface);
_exports_retro_rumble_interface_class_0->Inherit(_exports_retro_rumble_interface_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_rumble_interface_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_rumble_interface_obj = _exports_retro_rumble_interface_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_rumble_interface_obj = _exports_retro_rumble_interface_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_audio_callback (_exports_retro_audio_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_audio_callback_class_0 = SWIGV8_CreateClassTemplate("retro_audio_callback");
_exports_retro_audio_callback_class_0->SetCallHandler(_wrap_new_retro_audio_callback);
_exports_retro_audio_callback_class_0->Inherit(_exports_retro_audio_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_audio_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_audio_callback_obj = _exports_retro_audio_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_audio_callback_obj = _exports_retro_audio_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_frame_time_callback (_exports_retro_frame_time_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_frame_time_callback_class_0 = SWIGV8_CreateClassTemplate("retro_frame_time_callback");
_exports_retro_frame_time_callback_class_0->SetCallHandler(_wrap_new_retro_frame_time_callback);
_exports_retro_frame_time_callback_class_0->Inherit(_exports_retro_frame_time_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_frame_time_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_frame_time_callback_obj = _exports_retro_frame_time_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_frame_time_callback_obj = _exports_retro_frame_time_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_audio_buffer_status_callback (_exports_retro_audio_buffer_status_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_audio_buffer_status_callback_class_0 = SWIGV8_CreateClassTemplate("retro_audio_buffer_status_callback");
_exports_retro_audio_buffer_status_callback_class_0->SetCallHandler(_wrap_new_retro_audio_buffer_status_callback);
_exports_retro_audio_buffer_status_callback_class_0->Inherit(_exports_retro_audio_buffer_status_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_audio_buffer_status_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_audio_buffer_status_callback_obj = _exports_retro_audio_buffer_status_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_audio_buffer_status_callback_obj = _exports_retro_audio_buffer_status_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_hw_render_callback (_exports_retro_hw_render_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_hw_render_callback_class_0 = SWIGV8_CreateClassTemplate("retro_hw_render_callback");
_exports_retro_hw_render_callback_class_0->SetCallHandler(_wrap_new_retro_hw_render_callback);
_exports_retro_hw_render_callback_class_0->Inherit(_exports_retro_hw_render_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_hw_render_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_hw_render_callback_obj = _exports_retro_hw_render_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_hw_render_callback_obj = _exports_retro_hw_render_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_keyboard_callback (_exports_retro_keyboard_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_keyboard_callback_class_0 = SWIGV8_CreateClassTemplate("retro_keyboard_callback");
_exports_retro_keyboard_callback_class_0->SetCallHandler(_wrap_new_retro_keyboard_callback);
_exports_retro_keyboard_callback_class_0->Inherit(_exports_retro_keyboard_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_keyboard_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_keyboard_callback_obj = _exports_retro_keyboard_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_keyboard_callback_obj = _exports_retro_keyboard_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_disk_control_callback (_exports_retro_disk_control_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_disk_control_callback_class_0 = SWIGV8_CreateClassTemplate("retro_disk_control_callback");
_exports_retro_disk_control_callback_class_0->SetCallHandler(_wrap_new_retro_disk_control_callback);
_exports_retro_disk_control_callback_class_0->Inherit(_exports_retro_disk_control_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_disk_control_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_disk_control_callback_obj = _exports_retro_disk_control_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_disk_control_callback_obj = _exports_retro_disk_control_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_disk_control_ext_callback (_exports_retro_disk_control_ext_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_disk_control_ext_callback_class_0 = SWIGV8_CreateClassTemplate("retro_disk_control_ext_callback");
_exports_retro_disk_control_ext_callback_class_0->SetCallHandler(_wrap_new_retro_disk_control_ext_callback);
_exports_retro_disk_control_ext_callback_class_0->Inherit(_exports_retro_disk_control_ext_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_disk_control_ext_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_disk_control_ext_callback_obj = _exports_retro_disk_control_ext_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_disk_control_ext_callback_obj = _exports_retro_disk_control_ext_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_message (_exports_retro_message) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_message_class_0 = SWIGV8_CreateClassTemplate("retro_message");
_exports_retro_message_class_0->SetCallHandler(_wrap_new_retro_message);
_exports_retro_message_class_0->Inherit(_exports_retro_message_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_message_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_message_obj = _exports_retro_message_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_message_obj = _exports_retro_message_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_message_ext (_exports_retro_message_ext) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_message_ext_class_0 = SWIGV8_CreateClassTemplate("retro_message_ext");
_exports_retro_message_ext_class_0->SetCallHandler(_wrap_new_retro_message_ext);
_exports_retro_message_ext_class_0->Inherit(_exports_retro_message_ext_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_message_ext_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_message_ext_obj = _exports_retro_message_ext_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_message_ext_obj = _exports_retro_message_ext_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_input_descriptor (_exports_retro_input_descriptor) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_input_descriptor_class_0 = SWIGV8_CreateClassTemplate("retro_input_descriptor");
_exports_retro_input_descriptor_class_0->SetCallHandler(_wrap_new_retro_input_descriptor);
_exports_retro_input_descriptor_class_0->Inherit(_exports_retro_input_descriptor_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_input_descriptor_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_input_descriptor_obj = _exports_retro_input_descriptor_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_input_descriptor_obj = _exports_retro_input_descriptor_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_system_info (_exports_retro_system_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_info_class_0 = SWIGV8_CreateClassTemplate("retro_system_info");
_exports_retro_system_info_class_0->SetCallHandler(_wrap_new_retro_system_info);
_exports_retro_system_info_class_0->Inherit(_exports_retro_system_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_system_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_system_info_obj = _exports_retro_system_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_system_info_obj = _exports_retro_system_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_system_content_info_override (_exports_retro_system_content_info_override) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_content_info_override_class_0 = SWIGV8_CreateClassTemplate("retro_system_content_info_override");
_exports_retro_system_content_info_override_class_0->SetCallHandler(_wrap_new_retro_system_content_info_override);
_exports_retro_system_content_info_override_class_0->Inherit(_exports_retro_system_content_info_override_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_system_content_info_override_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_system_content_info_override_obj = _exports_retro_system_content_info_override_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_system_content_info_override_obj = _exports_retro_system_content_info_override_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_game_info_ext (_exports_retro_game_info_ext) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_game_info_ext_class_0 = SWIGV8_CreateClassTemplate("retro_game_info_ext");
_exports_retro_game_info_ext_class_0->SetCallHandler(_wrap_new_retro_game_info_ext);
_exports_retro_game_info_ext_class_0->Inherit(_exports_retro_game_info_ext_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_game_info_ext_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_game_info_ext_obj = _exports_retro_game_info_ext_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_game_info_ext_obj = _exports_retro_game_info_ext_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_game_geometry (_exports_retro_game_geometry) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_game_geometry_class_0 = SWIGV8_CreateClassTemplate("retro_game_geometry");
_exports_retro_game_geometry_class_0->SetCallHandler(_wrap_new_retro_game_geometry);
_exports_retro_game_geometry_class_0->Inherit(_exports_retro_game_geometry_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_game_geometry_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_game_geometry_obj = _exports_retro_game_geometry_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_game_geometry_obj = _exports_retro_game_geometry_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_system_timing (_exports_retro_system_timing) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_timing_class_0 = SWIGV8_CreateClassTemplate("retro_system_timing");
_exports_retro_system_timing_class_0->SetCallHandler(_wrap_new_retro_system_timing);
_exports_retro_system_timing_class_0->Inherit(_exports_retro_system_timing_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_system_timing_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_system_timing_obj = _exports_retro_system_timing_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_system_timing_obj = _exports_retro_system_timing_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_system_av_info (_exports_retro_system_av_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_system_av_info_class_0 = SWIGV8_CreateClassTemplate("retro_system_av_info");
_exports_retro_system_av_info_class_0->SetCallHandler(_wrap_new_retro_system_av_info);
_exports_retro_system_av_info_class_0->Inherit(_exports_retro_system_av_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_system_av_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_system_av_info_obj = _exports_retro_system_av_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_system_av_info_obj = _exports_retro_system_av_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_variable (_exports_retro_variable) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_variable_class_0 = SWIGV8_CreateClassTemplate("retro_variable");
_exports_retro_variable_class_0->SetCallHandler(_wrap_new_retro_variable);
_exports_retro_variable_class_0->Inherit(_exports_retro_variable_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_variable_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_variable_obj = _exports_retro_variable_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_variable_obj = _exports_retro_variable_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_option_display (_exports_retro_core_option_display) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_display_class_0 = SWIGV8_CreateClassTemplate("retro_core_option_display");
_exports_retro_core_option_display_class_0->SetCallHandler(_wrap_new_retro_core_option_display);
_exports_retro_core_option_display_class_0->Inherit(_exports_retro_core_option_display_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_option_display_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_option_display_obj = _exports_retro_core_option_display_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_option_display_obj = _exports_retro_core_option_display_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_option_value (_exports_retro_core_option_value) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_value_class_0 = SWIGV8_CreateClassTemplate("retro_core_option_value");
_exports_retro_core_option_value_class_0->SetCallHandler(_wrap_new_retro_core_option_value);
_exports_retro_core_option_value_class_0->Inherit(_exports_retro_core_option_value_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_option_value_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_option_value_obj = _exports_retro_core_option_value_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_option_value_obj = _exports_retro_core_option_value_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_option_definition (_exports_retro_core_option_definition) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_definition_class_0 = SWIGV8_CreateClassTemplate("retro_core_option_definition");
_exports_retro_core_option_definition_class_0->SetCallHandler(_wrap_new_retro_core_option_definition);
_exports_retro_core_option_definition_class_0->Inherit(_exports_retro_core_option_definition_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_option_definition_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_option_definition_obj = _exports_retro_core_option_definition_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_option_definition_obj = _exports_retro_core_option_definition_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_options_intl (_exports_retro_core_options_intl) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_intl_class_0 = SWIGV8_CreateClassTemplate("retro_core_options_intl");
_exports_retro_core_options_intl_class_0->SetCallHandler(_wrap_new_retro_core_options_intl);
_exports_retro_core_options_intl_class_0->Inherit(_exports_retro_core_options_intl_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_options_intl_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_options_intl_obj = _exports_retro_core_options_intl_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_options_intl_obj = _exports_retro_core_options_intl_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_option_v2_category (_exports_retro_core_option_v2_category) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_v2_category_class_0 = SWIGV8_CreateClassTemplate("retro_core_option_v2_category");
_exports_retro_core_option_v2_category_class_0->SetCallHandler(_wrap_new_retro_core_option_v2_category);
_exports_retro_core_option_v2_category_class_0->Inherit(_exports_retro_core_option_v2_category_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_option_v2_category_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_option_v2_category_obj = _exports_retro_core_option_v2_category_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_option_v2_category_obj = _exports_retro_core_option_v2_category_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_option_v2_definition (_exports_retro_core_option_v2_definition) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_option_v2_definition_class_0 = SWIGV8_CreateClassTemplate("retro_core_option_v2_definition");
_exports_retro_core_option_v2_definition_class_0->SetCallHandler(_wrap_new_retro_core_option_v2_definition);
_exports_retro_core_option_v2_definition_class_0->Inherit(_exports_retro_core_option_v2_definition_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_option_v2_definition_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_option_v2_definition_obj = _exports_retro_core_option_v2_definition_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_option_v2_definition_obj = _exports_retro_core_option_v2_definition_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_options_v2 (_exports_retro_core_options_v2) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_v2_class_0 = SWIGV8_CreateClassTemplate("retro_core_options_v2");
_exports_retro_core_options_v2_class_0->SetCallHandler(_wrap_new_retro_core_options_v2);
_exports_retro_core_options_v2_class_0->Inherit(_exports_retro_core_options_v2_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_options_v2_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_options_v2_obj = _exports_retro_core_options_v2_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_options_v2_obj = _exports_retro_core_options_v2_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_options_v2_intl (_exports_retro_core_options_v2_intl) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_v2_intl_class_0 = SWIGV8_CreateClassTemplate("retro_core_options_v2_intl");
_exports_retro_core_options_v2_intl_class_0->SetCallHandler(_wrap_new_retro_core_options_v2_intl);
_exports_retro_core_options_v2_intl_class_0->Inherit(_exports_retro_core_options_v2_intl_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_options_v2_intl_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_options_v2_intl_obj = _exports_retro_core_options_v2_intl_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_options_v2_intl_obj = _exports_retro_core_options_v2_intl_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_core_options_update_display_callback (_exports_retro_core_options_update_display_callback) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_core_options_update_display_callback_class_0 = SWIGV8_CreateClassTemplate("retro_core_options_update_display_callback");
_exports_retro_core_options_update_display_callback_class_0->SetCallHandler(_wrap_new_retro_core_options_update_display_callback);
_exports_retro_core_options_update_display_callback_class_0->Inherit(_exports_retro_core_options_update_display_callback_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_core_options_update_display_callback_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_core_options_update_display_callback_obj = _exports_retro_core_options_update_display_callback_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_core_options_update_display_callback_obj = _exports_retro_core_options_update_display_callback_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_game_info (_exports_retro_game_info) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_game_info_class_0 = SWIGV8_CreateClassTemplate("retro_game_info");
_exports_retro_game_info_class_0->SetCallHandler(_wrap_new_retro_game_info);
_exports_retro_game_info_class_0->Inherit(_exports_retro_game_info_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_game_info_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_game_info_obj = _exports_retro_game_info_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_game_info_obj = _exports_retro_game_info_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_framebuffer (_exports_retro_framebuffer) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_framebuffer_class_0 = SWIGV8_CreateClassTemplate("retro_framebuffer");
_exports_retro_framebuffer_class_0->SetCallHandler(_wrap_new_retro_framebuffer);
_exports_retro_framebuffer_class_0->Inherit(_exports_retro_framebuffer_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_framebuffer_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_framebuffer_obj = _exports_retro_framebuffer_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_framebuffer_obj = _exports_retro_framebuffer_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_fastforwarding_override (_exports_retro_fastforwarding_override) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_fastforwarding_override_class_0 = SWIGV8_CreateClassTemplate("retro_fastforwarding_override");
_exports_retro_fastforwarding_override_class_0->SetCallHandler(_wrap_new_retro_fastforwarding_override);
_exports_retro_fastforwarding_override_class_0->Inherit(_exports_retro_fastforwarding_override_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_fastforwarding_override_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_fastforwarding_override_obj = _exports_retro_fastforwarding_override_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_fastforwarding_override_obj = _exports_retro_fastforwarding_override_class_0->GetFunction(context).ToLocalChecked();
#endif
/* Class: retro_throttle_state (_exports_retro_throttle_state) */
SWIGV8_FUNCTION_TEMPLATE _exports_retro_throttle_state_class_0 = SWIGV8_CreateClassTemplate("retro_throttle_state");
_exports_retro_throttle_state_class_0->SetCallHandler(_wrap_new_retro_throttle_state);
_exports_retro_throttle_state_class_0->Inherit(_exports_retro_throttle_state_class);
#if (SWIG_V8_VERSION < 0x0704)
_exports_retro_throttle_state_class_0->SetHiddenPrototype(true);
v8::Local<v8::Object> _exports_retro_throttle_state_obj = _exports_retro_throttle_state_class_0->GetFunction();
#else
v8::Local<v8::Object> _exports_retro_throttle_state_obj = _exports_retro_throttle_state_class_0->GetFunction(context).ToLocalChecked();
#endif


  /* add static class functions and variables */
  SWIGV8_AddStaticFunction(exports_obj, "malloc_int", _wrap_malloc_int, context);
SWIGV8_AddStaticFunction(exports_obj, "free_int", _wrap_free_int, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_set_environment", _wrap_retro_set_environment, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_set_video_refresh", _wrap_retro_set_video_refresh, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_set_audio_sample", _wrap_retro_set_audio_sample, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_set_audio_sample_batch", _wrap_retro_set_audio_sample_batch, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_set_input_poll", _wrap_retro_set_input_poll, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_set_input_state", _wrap_retro_set_input_state, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_init", _wrap_retro_init, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_deinit", _wrap_retro_deinit, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_api_version", _wrap_retro_api_version, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_get_system_info", _wrap_retro_get_system_info, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_get_system_av_info", _wrap_retro_get_system_av_info, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_set_controller_port_device", _wrap_retro_set_controller_port_device, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_reset", _wrap_retro_reset, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_run", _wrap_retro_run, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_serialize_size", _wrap_retro_serialize_size, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_serialize", _wrap_retro_serialize, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_unserialize", _wrap_retro_unserialize, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_cheat_reset", _wrap_retro_cheat_reset, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_cheat_set", _wrap_retro_cheat_set, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_load_game", _wrap_retro_load_game, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_load_game_special", _wrap_retro_load_game_special, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_unload_game", _wrap_retro_unload_game, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_get_region", _wrap_retro_get_region, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_get_memory_data", _wrap_retro_get_memory_data, context);
SWIGV8_AddStaticFunction(exports_obj, "retro_get_memory_size", _wrap_retro_get_memory_size, context);


  /* register classes */
  SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_vfs_interface"), _exports_retro_vfs_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_vfs_interface_info"), _exports_retro_vfs_interface_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_hw_render_interface"), _exports_retro_hw_render_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_led_interface"), _exports_retro_led_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_midi_interface"), _exports_retro_midi_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_hw_render_context_negotiation_interface"), _exports_retro_hw_render_context_negotiation_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_memory_descriptor"), _exports_retro_memory_descriptor_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_memory_map"), _exports_retro_memory_map_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_controller_description"), _exports_retro_controller_description_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_controller_info"), _exports_retro_controller_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_subsystem_memory_info"), _exports_retro_subsystem_memory_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_subsystem_rom_info"), _exports_retro_subsystem_rom_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_subsystem_info"), _exports_retro_subsystem_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_get_proc_address_interface"), _exports_retro_get_proc_address_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_log_callback"), _exports_retro_log_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_perf_counter"), _exports_retro_perf_counter_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_perf_callback"), _exports_retro_perf_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_sensor_interface"), _exports_retro_sensor_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_camera_callback"), _exports_retro_camera_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_location_callback"), _exports_retro_location_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_rumble_interface"), _exports_retro_rumble_interface_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_audio_callback"), _exports_retro_audio_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_frame_time_callback"), _exports_retro_frame_time_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_audio_buffer_status_callback"), _exports_retro_audio_buffer_status_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_hw_render_callback"), _exports_retro_hw_render_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_keyboard_callback"), _exports_retro_keyboard_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_disk_control_callback"), _exports_retro_disk_control_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_disk_control_ext_callback"), _exports_retro_disk_control_ext_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_message"), _exports_retro_message_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_message_ext"), _exports_retro_message_ext_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_input_descriptor"), _exports_retro_input_descriptor_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_system_info"), _exports_retro_system_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_system_content_info_override"), _exports_retro_system_content_info_override_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_game_info_ext"), _exports_retro_game_info_ext_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_game_geometry"), _exports_retro_game_geometry_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_system_timing"), _exports_retro_system_timing_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_system_av_info"), _exports_retro_system_av_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_variable"), _exports_retro_variable_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_option_display"), _exports_retro_core_option_display_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_option_value"), _exports_retro_core_option_value_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_option_definition"), _exports_retro_core_option_definition_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_options_intl"), _exports_retro_core_options_intl_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_option_v2_category"), _exports_retro_core_option_v2_category_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_option_v2_definition"), _exports_retro_core_option_v2_definition_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_options_v2"), _exports_retro_core_options_v2_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_options_v2_intl"), _exports_retro_core_options_v2_intl_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_core_options_update_display_callback"), _exports_retro_core_options_update_display_callback_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_game_info"), _exports_retro_game_info_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_framebuffer"), _exports_retro_framebuffer_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_fastforwarding_override"), _exports_retro_fastforwarding_override_obj));
SWIGV8_MAYBE_CHECK(exports_obj->Set(context, SWIGV8_SYMBOL_NEW("retro_throttle_state"), _exports_retro_throttle_state_obj));


  /* create and register namespace objects */
  
}

#if defined(BUILDING_NODE_EXTENSION)
#if (NODE_MODULE_VERSION < 64)
NODE_MODULE(libretro, libretro_initialize)
#else
NODE_MODULE_CONTEXT_AWARE(libretro, libretro_initialize)
#endif
#endif
